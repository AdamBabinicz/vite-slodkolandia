import { useState } from "react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Calculator, Phone, Info } from "lucide-react";
import { motion } from "framer-motion";
import SEOHead from "@/components/SEOHead";
import CallToAction from "@/components/CallToAction";
import { attractions, Attraction } from "@/data/attractions";
import { useLanguage } from "@/hooks/useLanguage";
import { Link as WouterLink } from "wouter";
import {
  getLocalizedPath,
  PageKey,
  OfferHashKey,
  Language,
} from "@/config/paths";

interface CategoryFilterCennik {
  id: string;
  nameKey: string;
  filterLogic: (attraction: Attraction) => boolean;
}

export default function Cennik() {
  const [selectedCategory, setSelectedCategory] = useState("all");
  const { t, language } = useLanguage();

  const packageDeals = [
    {
      nameKey: "pricingPage.packageChildName",
      descriptionKey: "pricingPage.packageChildDesc",
      itemsKeys: [
        "pricingPage.packageChildItem1",
        "pricingPage.packageChildItem2",
        "pricingPage.packageChildItem3",
      ],
      originalPrice: 580,
      packagePrice: 450,
      savings: 130,
      popular: false,
    },
    {
      nameKey: "pricingPage.packageFamilyName",
      descriptionKey: "pricingPage.packageFamilyDesc",
      itemsKeys: [
        "pricingPage.packageFamilyItem1",
        "pricingPage.packageFamilyItem2",
        "pricingPage.packageFamilyItem3",
        "pricingPage.packageFamilyItem4",
      ],
      originalPrice: 950,
      packagePrice: 750,
      savings: 200,
      popular: true,
    },
    {
      nameKey: "pricingPage.packageEventName",
      descriptionKey: "pricingPage.packageEventDesc",
      itemsKeys: [
        "pricingPage.packageEventItem1",
        "pricingPage.packageEventItem2",
        "pricingPage.packageEventItem3",
        "pricingPage.packageEventItem4",
        "pricingPage.packageEventItem5",
        "pricingPage.packageEventItem6",
      ],
      originalPrice: 1400,
      packagePrice: 1100,
      savings: 300,
      popular: false,
    },
  ];

  const additionalServices = [
    {
      nameKey: "pricingPage.additionalServiceTransport15",
      price: "0",
      unitKey: "pricingPage.unitPriceDefault",
    },
    {
      nameKey: "pricingPage.additionalServiceTransport30",
      price: "50",
      unitKey: "pricingPage.unitPriceDefault",
    },
    {
      nameKey: "pricingPage.additionalServiceTransportOver30",
      price: "2",
      unitKey: "pricingPage.unitPriceKm",
    },
    {
      nameKey: "pricingPage.additionalServiceNightSetup",
      price: "100",
      unitKey: "pricingPage.unitPriceDefault",
    },
    {
      nameKey: "pricingPage.additionalServiceExtendRental",
      price: "50",
      unitKey: "pricingPage.unitPricePercent",
    },
    {
      nameKey: "pricingPage.additionalServiceOperator",
      price: "150",
      unitKey: "pricingPage.unitPriceDefault",
    },
  ];

  const categories: CategoryFilterCennik[] = [
    {
      id: "all",
      nameKey: "pricingPage.categoryAll",
      filterLogic: (attr) => attr.category !== "uslugi",
    },
    {
      id: "namioty",
      nameKey: "nav.tents",
      filterLogic: (attr) => attr.category === "namioty",
    },
    {
      id: "wyposazenie",
      nameKey: "nav.tablesChairs",
      filterLogic: (attr) => attr.category === "wyposazenie",
    },
    {
      id: "dmuchance",
      nameKey: "nav.inflatables",
      filterLogic: (attr) => attr.category === "dmuchance",
    },
    {
      id: "wata-cukrowa",
      nameKey: "nav.cottonCandy",
      filterLogic: (attr) => attr.id === "wata-cukrowa",
    },
    {
      id: "popcorn",
      nameKey: "nav.popcorn",
      filterLogic: (attr) => attr.id === "popcorn",
    },
    {
      id: "fontanna-czekoladowa",
      nameKey: "nav.chocolateFountain",
      filterLogic: (attr) => attr.id === "fontanna-czekoladowa",
    },
  ];

  const getTranslatedCategoryName = (attractionCategory: string) => {
    const categoryKey = `category.${attractionCategory
      .toLowerCase()
      .replace(/\s+/g, "")}`;
    const translated = t(categoryKey);
    return translated !== categoryKey ? translated : attractionCategory;
  };

  const selectedFilter = categories.find((cat) => cat.id === selectedCategory);
  const filteredAttractions = selectedFilter
    ? attractions.filter(selectedFilter.filterLogic)
    : attractions.filter((attr) => attr.category !== "uslugi");

  return (
    <>
      <SEOHead
        title={t("seo.pricingTitle")}
        description={t("seo.pricingDescription")}
        canonical={getLocalizedPath("PRICING" as PageKey, language)}
      />

      <div className="pt-16">
        <section className="py-12 md:py-20 bg-gradient-to-br from-sky-100 to-emerald-100 dark:from-slate-900 dark:to-slate-400">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              <div className="flex justify-center mb-6">
                <div className="w-16 h-16 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-full flex items-center justify-center">
                  <Calculator className="h-8 w-8 text-white" />
                </div>
              </div>
              <h2 className="text-2xl md:text-4xl font-bold text-slate-800 dark:text-white mb-6">
                {t("pricingPage.heroTitle")}
              </h2>
              <p className="text-lg md:text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto mb-8">
                {t("pricingPage.heroDescription")}
              </p>
              <div className="flex flex-wrap justify-center gap-3 md:gap-4">
                <Badge
                  variant="secondary"
                  className="text-sm md:text-base px-3 py-1.5 md:px-4 md:py-2 bg-white/80 dark:bg-card dark:text-card-foreground"
                >
                  {t("pricingPage.badgeTransportFree15km")}
                </Badge>
                <Badge
                  variant="secondary"
                  className="text-sm md:text-base px-3 py-1.5 md:px-4 md:py-2 bg-white/80 dark:bg-card dark:text-card-foreground"
                >
                  {t("pricingPage.badgeSetupIncluded")}
                </Badge>
                <Badge
                  variant="secondary"
                  className="text-sm md:text-base px-3 py-1.5 md:px-4 md:py-2 bg-white/80 dark:bg-card dark:text-card-foreground"
                >
                  {t("pricingPage.badgeInsuranceOC")}
                </Badge>
              </div>
            </motion.div>
          </div>
        </section>

        <section className="py-12 md:py-16 bg-background dark:bg-background">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-10 md:mb-12"
            >
              <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-3 md:mb-4">
                {t("pricingPage.packagesTitle")}
              </h2>
              <p className="text-lg md:text-xl text-muted-foreground">
                {t("pricingPage.packagesDescription")}
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 md:gap-8">
              {packageDeals.map((pkg, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <Card
                    className={`relative h-full flex flex-col ${
                      pkg.popular
                        ? "ring-2 ring-primary shadow-xl dark:ring-primary"
                        : "shadow-lg bg-card dark:bg-card"
                    }`}
                  >
                    {pkg.popular && (
                      <div className="absolute -top-3.5 left-1/2 transform -translate-x-1/2">
                        <Badge className="bg-primary text-primary-foreground px-4 py-1 text-sm">
                          {t("pricingPage.popularPackage")}
                        </Badge>
                      </div>
                    )}
                    <CardHeader className="text-center pt-8">
                      <CardTitle className="text-2xl font-bold text-foreground">
                        {t(pkg.nameKey)}
                      </CardTitle>
                      <p className="text-muted-foreground text-sm">
                        {t(pkg.descriptionKey)}
                      </p>
                    </CardHeader>
                    <CardContent className="space-y-6 flex-grow flex flex-col justify-between">
                      <div>
                        <div className="text-center my-4">
                          <div className="text-4xl font-bold text-primary mb-1">
                            {pkg.packagePrice} {t("currencyUnit.zł")}
                          </div>
                          <div className="text-sm text-muted-foreground line-through">
                            {t("pricingPage.packageNormally")}:{" "}
                            {pkg.originalPrice} {t("currencyUnit.zł")}
                          </div>
                          <Badge
                            variant="secondary"
                            className="mt-2 bg-emerald-500/10 text-emerald-700 dark:bg-emerald-500/20 dark:text-emerald-400"
                          >
                            {t("pricingPage.packageSave", {
                              amount: pkg.savings.toString(),
                            })}
                          </Badge>
                        </div>
                        <Separator className="my-4 dark:bg-border" />
                        <div>
                          <h4 className="font-semibold text-foreground mb-3">
                            {t("pricingPage.packageIncludes")}
                          </h4>
                          <ul className="space-y-1.5">
                            {pkg.itemsKeys.map((itemKey, idx) => (
                              <li
                                key={idx}
                                className="flex items-center text-sm text-muted-foreground"
                              >
                                <div className="w-1.5 h-1.5 bg-emerald-500 rounded-full mr-2.5 flex-shrink-0"></div>
                                {t(itemKey)}
                              </li>
                            ))}
                          </ul>
                        </div>
                      </div>
                      <Button
                        asChild
                        className={`w-full mt-6 ${
                          pkg.popular ? "btn-gradient text-white" : ""
                        }`}
                        variant={pkg.popular ? "default" : "outline"}
                        size="lg"
                      >
                        <a
                          href={`tel:${t("contact.phoneValue", {
                            defaultValue: "+48531890827",
                          })}`}
                        >
                          <Phone className="h-4 w-4 mr-2" />
                          {t("pricingPage.packageAsk")}
                        </a>
                      </Button>
                    </CardContent>
                  </Card>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        <section className="py-12 md:py-16 bg-muted dark:bg-muted">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-10 md:mb-12"
            >
              <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-3 md:mb-4">
                {t("pricingPage.individualTitle")}
              </h2>
              <p className="text-lg md:text-xl text-muted-foreground mb-8">
                {t("pricingPage.individualDescription")}
              </p>
              <div className="flex flex-wrap justify-center gap-2 md:gap-3">
                {categories.map((category) => (
                  <Button
                    key={category.id}
                    variant={
                      selectedCategory === category.id ? "default" : "outline"
                    }
                    onClick={() => setSelectedCategory(category.id)}
                    size="sm"
                  >
                    {t(category.nameKey)}
                  </Button>
                ))}
              </div>
            </motion.div>

            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
              {filteredAttractions.map((attraction, index) => {
                const attractionNameKey = `attractionsData.${attraction.id}.name`;
                const translatedName =
                  t(attractionNameKey) !== attractionNameKey
                    ? t(attractionNameKey)
                    : attraction.name;

                const periodKey = `pricing.perPeriod.${attraction.pricing.period.toLowerCase()}`;
                const translatedPeriod =
                  t(periodKey) !== periodKey
                    ? t(periodKey)
                    : attraction.pricing.period;

                const currencyUnitText = t(
                  `currencyUnit.${attraction.pricing.currency.toLowerCase()}`
                );
                const shortDescriptionKey = `attractionsData.${attraction.id}.shortDescription`;
                const translatedShortDescription =
                  t(shortDescriptionKey) !== shortDescriptionKey
                    ? t(shortDescriptionKey)
                    : attraction.shortDescription;
                const pricingFromText = t("attractionCard.priceFrom");

                const isItemized = attraction.pricingDisplayMode === "itemList";

                return (
                  <motion.div
                    key={attraction.id}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.5, delay: index * 0.05 }}
                    viewport={{ once: true }}
                  >
                    <Card className="h-full flex flex-col hover:shadow-lg transition-shadow bg-card text-card-foreground">
                      <CardHeader>
                        <CardTitle className="text-lg font-bold text-foreground mb-1">
                          {translatedName}
                        </CardTitle>
                        <Badge
                          variant="outline"
                          className="text-xs w-fit border-border text-muted-foreground"
                        >
                          {getTranslatedCategoryName(attraction.category)}
                        </Badge>
                      </CardHeader>
                      <CardContent className="flex-grow flex flex-col justify-between">
                        <div>
                          <p className="text-sm text-muted-foreground mb-4 min-h-[3rem]">
                            {translatedShortDescription}
                          </p>
                          <div className="text-2xl font-bold text-primary mb-1">
                            {isItemized &&
                            attraction.id === "stoly-krzesla-obrusy"
                              ? t("pricingPage.itemizedPricingLabel")
                              : language === "en"
                              ? `${pricingFromText}${currencyUnitText}${attraction.pricing.base}`
                              : `${pricingFromText}${attraction.pricing.base} ${currencyUnitText}`}
                          </div>
                          {!(
                            isItemized &&
                            attraction.id === "stoly-krzesla-obrusy"
                          ) && (
                            <div className="text-xs text-muted-foreground">
                              / {translatedPeriod}
                            </div>
                          )}
                        </div>
                        <Button
                          asChild
                          variant="link"
                          className="p-0 h-auto mt-4 text-primary self-start"
                        >
                          <WouterLink
                            href={getLocalizedPath(
                              "OFFER" as PageKey,
                              language,
                              attraction.id as OfferHashKey
                            )}
                          >
                            {t("attractionCard.details")}{" "}
                            <Info className="ml-1.5 h-3.5 w-3.5" />
                          </WouterLink>
                        </Button>
                      </CardContent>
                    </Card>
                  </motion.div>
                );
              })}
            </div>
            {filteredAttractions.length === 0 && (
              <div className="text-center py-16">
                <div className="text-6xl mb-4">😔</div>
                <h3 className="text-xl font-semibold text-foreground mb-2">
                  {t("offerPage.noAttractionsTitle")}
                </h3>
                <p className="text-muted-foreground">
                  {t("offerPage.noAttractionsDescription")}
                </p>
              </div>
            )}
          </div>
        </section>

        <section className="py-12 md:py-16 bg-background dark:bg-background">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-10 md:gap-12 items-start">
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-6">
                  {t("pricingPage.additionalServicesTitle")}
                </h2>
                <div className="space-y-3">
                  {additionalServices.map((service, index) => (
                    <div
                      key={index}
                      className="flex justify-between items-center py-3 border-b border-border last:border-b-0"
                    >
                      <span className="text-muted-foreground text-sm md:text-base">
                        {t(service.nameKey)}
                      </span>
                      <span className="font-semibold text-primary text-sm md:text-base">
                        {service.price} {t(service.unitKey)}
                      </span>
                    </div>
                  ))}
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <Card className="bg-gradient-to-br from-primary to-accent text-primary-foreground">
                  <CardContent className="p-6 md:p-8">
                    <h3 className="text-2xl md:text-3xl font-bold mb-6">
                      {t("pricingPage.discountsTitle")}
                    </h3>
                    <div className="space-y-5">
                      {[
                        {
                          icon: "💰",
                          titleKey: "pricingPage.discountPackages",
                          descKey: "pricingPage.discountPackagesDesc",
                        },
                        {
                          icon: "📅",
                          titleKey: "pricingPage.discountLongTerm",
                          descKey: "pricingPage.discountLongTermDesc",
                        },
                        {
                          icon: "👥",
                          titleKey: "pricingPage.discountLoyal",
                          descKey: "pricingPage.discountLoyalDesc",
                        },
                      ].map((discount) => (
                        <div
                          key={discount.titleKey}
                          className="flex items-start"
                        >
                          <div className="text-xl mr-3 md:mr-4 mt-0.5">
                            {discount.icon}
                          </div>
                          <div>
                            <h4 className="font-semibold mb-1">
                              {t(discount.titleKey)}
                            </h4>
                            <p className="text-sm opacity-90">
                              {t(discount.descKey)}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                    <div className="mt-8">
                      <Button
                        asChild
                        size="lg"
                        variant="secondary"
                        className="bg-white text-primary hover:bg-slate-100"
                      >
                        <a
                          href={`tel:${t("contact.phoneValue", {
                            defaultValue: "+48531890827",
                          })}`}
                        >
                          <Phone className="h-4 w-4 mr-2" />
                          {t("pricingPage.askForDiscount")}
                        </a>
                      </Button>
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            </div>
          </div>
        </section>

        <section className="py-12 md:py-16 bg-amber-100/50 dark:bg-accent/10">
          {" "}
          {/* Użycie accent/10 dla ciemnego motywu */}
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-8 md:mb-10"
            >
              <Info className="h-10 w-10 md:h-12 md:w-12 text-amber-600 dark:text-accent mx-auto mb-4" />
              <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-3 md:mb-4">
                {t("pricingPage.importantInfoTitle")}
              </h2>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 gap-6 md:gap-8">
              <Card className="border-amber-300 dark:border-accent/30 bg-card">
                <CardHeader>
                  <CardTitle className="text-amber-700 dark:text-accent flex items-center text-lg md:text-xl">
                    {t("pricingPage.rentalConditionsTitle")}
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-2.5 text-sm text-muted-foreground">
                  <p>{t("pricingPage.rentalCondition1")}</p>
                  <p>{t("pricingPage.rentalCondition2")}</p>
                  <p>{t("pricingPage.rentalCondition3")}</p>
                  <p>{t("pricingPage.rentalCondition4")}</p>
                  <p>{t("pricingPage.rentalCondition5")}</p>
                </CardContent>
              </Card>

              <Card className="border-amber-300 dark:border-accent/30 bg-card">
                <CardHeader>
                  <CardTitle className="text-amber-700 dark:text-accent flex items-center text-lg md:text-xl">
                    {t("pricingPage.transportSetupTitle")}
                  </CardTitle>
                </CardHeader>
                <CardContent className="space-y-2.5 text-sm text-muted-foreground">
                  <p>{t("pricingPage.transportSetup1")}</p>
                  <p>{t("pricingPage.transportSetup2")}</p>
                  <p>{t("pricingPage.transportSetup3")}</p>
                  <p>{t("pricingPage.transportSetup4")}</p>
                  <p>{t("pricingPage.transportSetup5")}</p>
                </CardContent>
              </Card>
            </div>
          </div>
        </section>

        <CallToAction />
      </div>
    </>
  );
}


------------------------

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Images, Filter } from "lucide-react";
import { motion } from "framer-motion";
import SEOHead from "@/components/SEOHead";
import AttractionGallery from "@/components/AttractionGallery";
import CallToAction from "@/components/CallToAction";
import { stockPhotos } from "@/data/stockPhotos";
import { useLanguage } from "@/hooks/useLanguage";
import { useLocation } from "wouter";
import {
  getLocalizedPath,
  getLocalizedSlug,
  PageKey,
  Language,
  getInternalBasePath,
  PAGE_KEYS,
} from "@/config/paths";
import { attractions } from "@/data/attractions";

interface GalleryCategory {
  id: string;
  pageKeyForHash: PageKey | null;
  nameKey: string;
  images: string[];
  descriptionKey?: string;
}

export default function Galeria() {
  const [activeCategory, setActiveCategory] = useState("all");
  const { t, language } = useLanguage();
  const [location, navigate] = useLocation();

  const tablesChairsAttraction = attractions.find(
    (attr) => attr.id === "stoly-krzesla-obrusy"
  );
  const tablesChairsImages = tablesChairsAttraction
    ? tablesChairsAttraction.images
    : [];

  const galleryCategories: GalleryCategory[] = [
    {
      id: "all",
      pageKeyForHash: null,
      nameKey: "galleryPage.categoryAll",
      images: [
        ...(stockPhotos.partyTents || []),
        ...(tablesChairsImages || []),
        ...(stockPhotos.inflatableCastles || []),
        ...(stockPhotos.cottonCandyMachine || []),
        ...(stockPhotos.popcornMachine || []),
        ...(stockPhotos.chocolateFountain || []),
      ],
    },
    {
      id: getLocalizedSlug(PAGE_KEYS.GALLERY_PHOTO_TENTS, "pl"),
      pageKeyForHash: PAGE_KEYS.GALLERY_PHOTO_TENTS,
      nameKey: "galleryPage.categoryTents",
      images: stockPhotos.partyTents || [],
      descriptionKey: "galleryPage.sectionTentsDesc",
    },
    {
      id: getLocalizedSlug(PAGE_KEYS.GALLERY_PHOTO_TABLES_CHAIRS_LINENS, "pl"),
      pageKeyForHash: PAGE_KEYS.GALLERY_PHOTO_TABLES_CHAIRS_LINENS,
      nameKey: "galleryPage.categoryTablesChairs",
      images: tablesChairsImages,
      descriptionKey: "galleryPage.sectionTablesChairsDescription",
    },
    {
      id: getLocalizedSlug(PAGE_KEYS.GALLERY_PHOTO_INFLATABLES, "pl"),
      pageKeyForHash: PAGE_KEYS.GALLERY_PHOTO_INFLATABLES,
      nameKey: "galleryPage.categoryInflatables",
      images: stockPhotos.inflatableCastles || [],
      descriptionKey: "galleryPage.sectionInflatablesDesc",
    },
    {
      id: getLocalizedSlug(PAGE_KEYS.GALLERY_PHOTO_COTTON_CANDY, "pl"),
      pageKeyForHash: PAGE_KEYS.GALLERY_PHOTO_COTTON_CANDY,
      nameKey: "galleryPage.categoryCottonCandy",
      images: stockPhotos.cottonCandyMachine || [],
      descriptionKey: "galleryPage.sectionCottonCandyDesc",
    },
    {
      id: getLocalizedSlug(PAGE_KEYS.GALLERY_PHOTO_POPCORN, "pl"),
      pageKeyForHash: PAGE_KEYS.GALLERY_PHOTO_POPCORN,
      nameKey: "galleryPage.categoryPopcorn",
      images: stockPhotos.popcornMachine || [],
      descriptionKey: "galleryPage.sectionPopcornDesc",
    },
    {
      id: getLocalizedSlug(PAGE_KEYS.GALLERY_PHOTO_FOUNTAINS, "pl"),
      pageKeyForHash: PAGE_KEYS.GALLERY_PHOTO_FOUNTAINS,
      nameKey: "galleryPage.categoryFountains",
      images: stockPhotos.chocolateFountain || [],
      descriptionKey: "galleryPage.sectionFountainsDesc",
    },
    {
      id: "realizacje",
      pageKeyForHash: null, // Specjalny przypadek, nie mapuje bezpośrednio na PageKey dla hasha
      nameKey: "galleryPage.categoryEventSetups",
      images: stockPhotos.eventSetup,
      descriptionKey: "galleryPage.sectionEventSetupsDesc",
    },
  ];

  useEffect(() => {
    const hash = window.location.hash.replace("#", "");
    const categoryFromHash = galleryCategories.find((cat) => {
      if (cat.id === "all" && !hash) return true;
      if (
        cat.pageKeyForHash &&
        hash === getLocalizedSlug(cat.pageKeyForHash, language)
      ) {
        return true;
      }
      if (
        cat.id === "realizacje" &&
        (hash === "realizacje-eventow" || hash === "event-setups")
      ) {
        return true;
      }
      return false;
    });

    if (categoryFromHash) {
      setActiveCategory(categoryFromHash.id);
    } else if (
      !hash &&
      location
        .split("#")[0]
        .endsWith(getInternalBasePath(PAGE_KEYS.GALLERY, language))
    ) {
      setActiveCategory("all");
    }
  }, [location, language, galleryCategories]);

  const currentCategoryData = galleryCategories.find(
    (cat) => cat.id === activeCategory
  );
  const currentCategoryName = currentCategoryData
    ? t(currentCategoryData.nameKey)
    : t("galleryPage.categoryAll");
  const currentCategoryImages = currentCategoryData
    ? currentCategoryData.images
    : galleryCategories.find((cat) => cat.id === "all")?.images || [];

  const handleCategoryChange = (categoryId: string) => {
    setActiveCategory(categoryId);
    const categoryObject = galleryCategories.find((c) => c.id === categoryId);
    let hashTarget = "";

    if (categoryObject && categoryObject.id !== "all") {
      if (categoryObject.pageKeyForHash) {
        const slug = getLocalizedSlug(categoryObject.pageKeyForHash, language);
        if (slug) hashTarget = `#${slug}`;
      } else if (categoryObject.id === "realizacje") {
        hashTarget = `#${
          language === "en" ? "event-setups" : "realizacje-eventow"
        }`;
      }
    }

    const galleryBase = getLocalizedPath(PAGE_KEYS.GALLERY, language).split(
      "#"
    )[0];
    if (`${galleryBase}${hashTarget}` !== location) {
      navigate(`${galleryBase}${hashTarget}`, { replace: true });
    }
  };

  return (
    <>
      <SEOHead
        title={t("seo.galleryTitle")}
        description={t("seo.galleryDescription")}
        canonical={getLocalizedPath(PAGE_KEYS.GALLERY, language)}
      />

      <div className="pt-16">
        <section className="py-12 md:py-20 bg-gradient-to-br from-sky-100 to-emerald-100 dark:from-slate-900 dark:to-slate-800">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              <div className="flex justify-center mb-6">
                <div className="w-16 h-16 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-full flex items-center justify-center">
                  <Images className="h-8 w-8 text-white" />
                </div>
              </div>
              <h1 className="text-4xl md:text-5xl font-bold text-slate-800 dark:text-white mb-6">
                {t("galleryPage.heroTitle")}
              </h1>
              <p className="text-lg md:text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto mb-8">
                {t("galleryPage.heroDescription")}
              </p>
              <Badge
                variant="secondary"
                className="text-base md:text-lg px-4 py-2 bg-white/80 dark:bg-card dark:text-card-foreground"
              >
                {t("galleryPage.badgeEventsDone")}
              </Badge>
            </motion.div>
          </div>
        </section>

        <section className="py-6 bg-background border-b border-border sticky top-16 z-30">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex flex-wrap items-center justify-center gap-2 md:gap-3">
              <div className="w-full md:w-auto flex items-center justify-center md:justify-start mb-2 md:mb-0 md:mr-4">
                <Filter className="h-4 w-4 text-muted-foreground mr-1.5" />
                <span className="text-sm font-medium text-muted-foreground whitespace-nowrap">
                  {t("galleryPage.filterLabel")}
                </span>
              </div>
              {galleryCategories.map((category) => (
                <Button
                  key={category.id}
                  variant={
                    activeCategory === category.id ? "default" : "outline"
                  }
                  onClick={() => handleCategoryChange(category.id)}
                  size="sm"
                  className="whitespace-nowrap"
                >
                  {t(category.nameKey)}
                  {category.images.length > 0 && (
                    <Badge
                      variant={
                        activeCategory === category.id ? "outline" : "secondary"
                      }
                      className={`ml-2 ${
                        activeCategory === category.id
                          ? "border-primary-foreground/50 text-primary-foreground/80"
                          : "bg-muted text-muted-foreground dark:bg-slate-700 dark:text-slate-300"
                      }`}
                    >
                      {category.images.length}
                    </Badge>
                  )}
                </Button>
              ))}
            </div>
          </div>
        </section>

        <section className="py-12 md:py-16 bg-background dark:bg-background">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            {activeCategory === "all" ? (
              <div className="space-y-16 md:space-y-20">
                {galleryCategories
                  .filter((cat) => cat.id !== "all")
                  .map((category) => (
                    <div
                      key={category.id}
                      id={
                        category.pageKeyForHash
                          ? getLocalizedSlug(category.pageKeyForHash, language)
                          : category.id
                      }
                    >
                      <motion.div
                        initial={{ opacity: 0, y: 30 }}
                        whileInView={{ opacity: 1, y: 0 }}
                        transition={{ duration: 0.6 }}
                        viewport={{ once: true }}
                        className="mb-6 md:mb-8"
                      >
                        <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-3">
                          {t(category.nameKey)}
                        </h2>
                        {category.descriptionKey && (
                          <p className="text-muted-foreground text-base md:text-lg">
                            {t(category.descriptionKey)}
                          </p>
                        )}
                      </motion.div>
                      <AttractionGallery
                        images={category.images}
                        title={t(category.nameKey)}
                      />
                    </div>
                  ))}
              </div>
            ) : (
              <div>
                <motion.div
                  initial={{ opacity: 0, y: 30 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6 }}
                  className="mb-6 md:mb-8"
                >
                  <h2 className="text-2xl md:text-3xl font-bold text-foreground mb-2">
                    {currentCategoryName}
                  </h2>
                  <p className="text-muted-foreground">
                    {t("galleryPage.currentCategoryInfo", {
                      count: currentCategoryImages.length.toString(),
                    })}
                  </p>
                </motion.div>

                {currentCategoryData && (
                  <AttractionGallery
                    images={currentCategoryImages}
                    title={currentCategoryName}
                  />
                )}
              </div>
            )}
            {(!currentCategoryData || currentCategoryImages.length === 0) &&
              activeCategory !== "all" && (
                <div className="text-center py-16">
                  <div className="text-6xl mb-4">🖼️</div>
                  <h3 className="text-xl font-semibold text-foreground mb-2">
                    {t("offerPage.noAttractionsTitle")}
                  </h3>
                  <p className="text-muted-foreground">
                    {t("offerPage.noAttractionsDescription")}
                  </p>
                </div>
              )}
          </div>
        </section>

        <section className="py-12 md:py-16 bg-muted dark:bg-muted">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-10 md:mb-12"
            >
              <h2 className="text-3xl md:text-4xl font-bold text-foreground mb-3">
                {t("galleryPage.statsTitle")}
              </h2>
            </motion.div>

            <div className="grid grid-cols-2 md:grid-cols-4 gap-6 md:gap-8">
              {[
                {
                  number: "500+",
                  labelKey: "galleryPage.statEvents",
                  icon: "🎪",
                },
                {
                  number: "1000+",
                  labelKey: "galleryPage.statKids",
                  icon: "😊",
                },
                {
                  number: "50+",
                  labelKey: "galleryPage.statAttractions",
                  icon: "🎨",
                },
                {
                  number: "100 km",
                  labelKey: "galleryPage.statRadius",
                  icon: "🚛",
                },
              ].map((stat, index) => (
                <motion.div
                  key={index}
                  className="text-center bg-card text-card-foreground rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow"
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <div className="text-3xl mb-2">{stat.icon}</div>
                  <div className="text-2xl md:text-3xl font-bold text-primary mb-1.5">
                    {stat.number}
                  </div>
                  <div className="text-muted-foreground text-sm md:text-base">
                    {t(stat.labelKey)}
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        <CallToAction
          variant="secondary"
          className="mx-4 sm:mx-6 lg:mx-8 my-12 md:my-16"
        />
      </div>
    </>
  );
}

---------------------------

import { useState, useEffect } from "react";
import { Link } from "wouter";
import { Button } from "@/components/ui/button";
import {
  Star,
  Calendar,
  Award,
  Shield,
  Clock,
  Heart,
  ChevronDown,
} from "lucide-react";
import { motion } from "framer-motion";
import SEOHead from "@/components/SEOHead";
import AttractionCard from "@/components/AttractionCard";
import CallToAction from "@/components/CallToAction";
import { attractions } from "@/data/attractions";
import { heroImages } from "@/data/stockPhotos";
import { useLanguage } from "@/hooks/useLanguage";

export default function Home() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const { t } = useLanguage();

  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentSlide((prev) => (prev + 1) % heroImages.length);
    }, 5000);

    return () => clearInterval(timer);
  }, []);

  const featuredAttractions = attractions.slice(0, 6);

  return (
    <>
      <SEOHead
        title={t("seo.homeTitle")}
        description={t("seo.homeDescription")}
      />

      <section className="relative min-h-screen flex items-center justify-center overflow-hidden">
        <div className="absolute inset-0">
          {heroImages.map((image, index) => (
            <div
              key={index}
              className={`absolute inset-0 transition-opacity duration-1000 ${
                index === currentSlide ? "opacity-100" : "opacity-0"
              }`}
            >
              <img
                src={image}
                alt={`Event setup ${index + 1}`}
                className="w-full h-full object-cover"
              />
              <div className="absolute inset-0 hero-gradient"></div>
            </div>
          ))}
        </div>

        <div className="relative z-10 text-center text-white px-4 sm:px-6 lg:px-8 max-w-4xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 50 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <h1 className="brand-title text-4xl md:text-6xl lg:text-7xl font-bold text-white mb-6 leading-tight">
              {t("hero.title")}
            </h1>

            <div className="text-2xl sm:text-3xl lg:text-4xl font-semibold text-amber-300 mb-6">
              {t("hero.subtitle")}
            </div>

            <p className="text-xl sm:text-2xl mb-8 text-white/90 font-medium">
              {t("hero.description")}
            </p>

            <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
              <Link href="/oferta">
                <Button
                  size="lg"
                  className="bg-white text-sky-600 px-8 py-4 rounded-full text-lg font-semibold hover:bg-slate-100 transition-all transform hover:scale-105 shadow-lg"
                >
                  <Star className="h-5 w-5 mr-2" />
                  {t("hero.seeOffer")}
                </Button>
              </Link>
              <Link href="/kontakt">
                <Button
                  variant="outline"
                  size="lg"
                  className="border-2 bg-sky-600 border-white text-white hover:bg-white hover:text-sky-600 px-8 py-4 rounded-full text-lg font-semibold transition-all transform hover:scale-105"
                >
                  <Calendar className="h-5 w-5 mr-2" />
                  {t("hero.askDate")}
                </Button>
              </Link>
            </div>
          </motion.div>
        </div>

        <motion.div
          className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
          animate={{ y: [0, 10, 0] }}
          transition={{ duration: 2, repeat: Infinity }}
        >
          <ChevronDown className="h-8 w-8 text-white opacity-70" />
        </motion.div>
      </section>

      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            className="text-center mb-16"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            <h2 className="text-4xl font-bold text-slate-800 mb-4">
              {t("services.title")}
            </h2>
            <p className="text-xl text-slate-600 max-w-3xl mx-auto">
              {t("services.description")}
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {featuredAttractions.map((attraction, index) => (
              <AttractionCard
                key={attraction.id}
                attraction={attraction}
                index={index}
              />
            ))}
          </div>

          <motion.div
            className="text-center mt-12"
            initial={{ opacity: 0 }}
            whileInView={{ opacity: 1 }}
            transition={{ duration: 0.5, delay: 0.3 }}
            viewport={{ once: true }}
          >
            <Link href="/oferta">
              <Button
                size="lg"
                className="btn-gradient text-white px-8 py-4 text-lg font-semibold hover:shadow-lg transition-all"
              >
                {t("services.seeAll")}
              </Button>
            </Link>
          </motion.div>
        </div>
      </section>

      <section className="py-20 bg-gradient-to-br from-sky-50 to-emerald-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <motion.div
            className="text-center mb-16"
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.6 }}
            viewport={{ once: true }}
          >
            <h2 className="text-4xl font-bold text-slate-800 mb-4">
              {t("whyUs.title")}
            </h2>
            <p className="text-xl text-slate-600 max-w-3xl mx-auto">
              {t("whyUs.description")}
            </p>
          </motion.div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
            {[
              {
                icon: <Award className="h-8 w-8 text-sky-600" />,
                titleKey: "whyUs.experience",
                descriptionKey: "whyUs.experienceDesc",
                color: "bg-sky-100",
              },
              {
                icon: <Shield className="h-8 w-8 text-emerald-600" />,
                titleKey: "whyUs.safety",
                descriptionKey: "whyUs.safetyDesc",
                color: "bg-emerald-100",
              },
              {
                icon: <Clock className="h-8 w-8 text-amber-600" />,
                titleKey: "whyUs.punctuality",
                descriptionKey: "whyUs.punctualityDesc",
                color: "bg-amber-100",
              },
              {
                icon: <Heart className="h-8 w-8 text-purple-600" />,
                titleKey: "whyUs.individual",
                descriptionKey: "whyUs.individualDesc",
                color: "bg-purple-100",
              },
            ].map((feature, index) => (
              <motion.div
                key={index}
                className="text-center"
                initial={{ opacity: 0, y: 30 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                viewport={{ once: true }}
              >
                <div
                  className={`w-20 h-20 ${feature.color} rounded-full flex items-center justify-center mx-auto mb-6`}
                >
                  {feature.icon}
                </div>
                <h3 className="text-xl font-bold text-slate-800 mb-3">
                  {t(feature.titleKey)}
                </h3>
                <p className="text-slate-600">{t(feature.descriptionKey)}</p>
              </motion.div>
            ))}
          </div>
        </div>
      </section>

      <CallToAction />

      <section className="py-16 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8">
            {[
              { number: "500+", labelKey: "home.stats.eventsOrganized" },
              { number: "50+", labelKey: "home.stats.happyClientsMonthly" },
              { number: "5", labelKey: "home.stats.yearsExperience" },
              { number: "100 km", labelKey: "home.stats.serviceRadius" },
            ].map((stat, index) => (
              <motion.div
                key={index}
                className="text-center"
                initial={{ opacity: 0, scale: 0.8 }}
                whileInView={{ opacity: 1, scale: 1 }}
                transition={{ duration: 0.5, delay: index * 0.1 }}
                viewport={{ once: true }}
              >
                <div className="text-3xl md:text-4xl font-bold text-sky-600 mb-2">
                  {stat.number}
                </div>
                <div className="text-slate-600 text-sm md:text-base">
                  {t(stat.labelKey)}
                </div>
              </motion.div>
            ))}
          </div>
        </div>
      </section>
    </>
  );
}

-----------------------

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Phone,
  Mail,
  MapPin,
  Clock,
  MessageCircle,
  Calendar,
} from "lucide-react";
import { motion } from "framer-motion";
import SEOHead from "@/components/SEOHead";
import InquiryForm from "@/components/InquiryForm";
import { useLanguage } from "@/hooks/useLanguage";

export default function Kontakt() {
  const { t } = useLanguage();

  const contactMethods = [
    {
      icon: <Phone className="h-6 w-6 text-sky-600" />,
      titleKey: "contactPage.phoneTitle",
      descriptionKey: "contactPage.phoneDescription",
      details: "+48 531 890 827",
      action: "tel:+48531890827",
      bgColor: "bg-sky-100",
    },
    {
      icon: <Mail className="h-6 w-6 text-emerald-600" />,
      titleKey: "contactPage.emailTitle",
      descriptionKey: "contactPage.emailDescription",
      details: "mariusz1989poczta@wp.pl",
      action: "mailto:mariusz1989poczta@wp.pl",
      bgColor: "bg-emerald-100",
    },
    {
      icon: <MessageCircle className="h-6 w-6 text-purple-600" />,
      titleKey: "contactPage.whatsappTitle",
      descriptionKey: "contactPage.whatsappDescription",
      details: "+48 531 890 827",
      action: "https://wa.me/48531890827",
      bgColor: "bg-purple-100",
    },
    {
      icon: <Calendar className="h-6 w-6 text-amber-600" />,
      titleKey: "contactPage.meetingTitle",
      descriptionKey: "contactPage.meetingDescription",
      detailsKey: "contactPage.meetingDetails",
      action: "tel:+48531890827",
      bgColor: "bg-amber-100",
    },
  ];

  const workingHours = [
    {
      dayKey: "contactPage.workingHoursMonFri",
      hoursKey: "contactPage.workingHoursMonFriTime",
    },
    {
      dayKey: "contactPage.workingHoursSat",
      hoursKey: "contactPage.workingHoursSatTime",
    },
    {
      dayKey: "contactPage.workingHoursSun",
      hoursKey: "contactPage.workingHoursSunTime",
    },
    {
      dayKey: "contactPage.workingHoursHoliday",
      hoursKey: "contactPage.workingHoursHolidayTime",
    },
  ];

  const serviceAreas = [
    {
      cityKey: "contactPage.serviceAreaRadom",
      distanceKey: "contactPage.serviceAreaRadomDist",
      noteKey: "contactPage.serviceAreaRadomNote",
    },
    {
      cityKey: "contactPage.serviceAreaBialobrzegi",
      distanceKey: "contactPage.serviceAreaBialobrzegiDist",
      noteKey: "contactPage.serviceAreaBialobrzegiNote",
    },
    {
      cityKey: "contactPage.serviceAreaSzydlowiec",
      distanceKey: "contactPage.serviceAreaSzydlowiecDist",
      noteKey: "contactPage.serviceAreaSzydlowiecNote",
    },
    {
      cityKey: "contactPage.serviceAreaKozienice",
      distanceKey: "contactPage.serviceAreaKozieniceDist",
      noteKey: "contactPage.serviceAreaKozieniceNote",
    },
    {
      cityKey: "contactPage.serviceAreaOstrowiec",
      distanceKey: "contactPage.serviceAreaOstrowiecDist",
      noteKey: "contactPage.serviceAreaOstrowiecNote",
    },
    {
      cityKey: "contactPage.serviceAreaSkarzysko",
      distanceKey: "contactPage.serviceAreaSkarzyskoDist",
      noteKey: "contactPage.serviceAreaSkarzyskoNote",
    },
  ];

  const faqItems = [
    {
      questionKey: "contactPage.faq1Question",
      answerKey: "contactPage.faq1Answer",
    },
    {
      questionKey: "contactPage.faq2Question",
      answerKey: "contactPage.faq2Answer",
    },
    {
      questionKey: "contactPage.faq3Question",
      answerKey: "contactPage.faq3Answer",
    },
    {
      questionKey: "contactPage.faq4Question",
      answerKey: "contactPage.faq4Answer",
    },
    {
      questionKey: "contactPage.faq5Question",
      answerKey: "contactPage.faq5Answer",
    },
  ];

  return (
    <>
      <SEOHead
        title={t("seo.contactTitle")}
        description={t("seo.contactDescription")}
        canonical="/kontakt"
      />

      <div className="pt-16">
        <section className="py-20 bg-gradient-to-br from-sky-50 to-emerald-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              <div className="flex justify-center mb-6">
                <div className="w-16 h-16 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-full flex items-center justify-center">
                  <Phone className="h-8 w-8 text-white" />
                </div>
              </div>
              <h2 className="text-2xl md:text-4xl font-bold text-slate-800 mb-6">
                {t("contactPage.heroTitle")}
              </h2>
              <p className="text-xl text-slate-600 max-w-3xl mx-auto mb-8">
                {t("contactPage.heroDescription")}
              </p>
              <div className="flex flex-wrap justify-center gap-4">
                <Badge variant="secondary" className="text-lg px-4 py-2">
                  {t("contactPage.badgeQuickResponse")}
                </Badge>
                <Badge variant="secondary" className="text-lg px-4 py-2">
                  {t("contactPage.badgeFreeConsultation")}
                </Badge>
                <Badge variant="secondary" className="text-lg px-4 py-2">
                  {t("contactPage.badgeIndividualQuotes")}
                </Badge>
              </div>
            </motion.div>
          </div>
        </section>

        <section className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-slate-800 mb-4">
                {t("contactPage.quickContactTitle")}
              </h2>
              <p className="text-xl text-slate-600">
                {t("contactPage.quickContactDescription")}
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              {contactMethods.map((method, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <Card className="h-full hover:shadow-lg transition-all card-hover group">
                    <CardContent className="p-6 text-center">
                      <div
                        className={`w-16 h-16 ${method.bgColor} rounded-full flex items-center justify-center mx-auto mb-4 group-hover:scale-110 transition-transform`}
                      >
                        {method.icon}
                      </div>
                      <h3 className="text-lg font-bold text-slate-800 mb-2">
                        {t(method.titleKey)}
                      </h3>
                      <p className="text-sm text-slate-600 mb-3">
                        {t(method.descriptionKey)}
                      </p>
                      <a
                        href={method.action}
                        className="text-sky-600 hover:text-sky-700 font-semibold text-sm block"
                        target={
                          method.action.startsWith("http")
                            ? "_blank"
                            : undefined
                        }
                        rel={
                          method.action.startsWith("http")
                            ? "noopener noreferrer"
                            : undefined
                        }
                      >
                        {method.detailsKey
                          ? t(method.detailsKey)
                          : method.details}
                      </a>
                    </CardContent>
                  </Card>
                </motion.div>
              ))}
            </div>

            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.5, delay: 0.4 }}
              viewport={{ once: true }}
              className="text-center mt-12"
            >
              <div className="bg-gradient-to-r from-sky-500 to-emerald-500 rounded-xl p-8 text-white">
                <h3 className="text-2xl font-bold mb-4">
                  {t("contactPage.callToActionTitle")}
                </h3>
                <p className="text-lg mb-6 text-white/90">
                  {t("contactPage.callToActionDescription")}
                </p>
                <a
                  href="tel:+48531890827"
                  className="h-11 bg-white text-sky-600 px-8 rounded-full text-lg font-semibold hover:bg-slate-100 transition-all duration-300 ease-in-out transform hover:scale-105 shadow-lg inline-flex items-center justify-center gap-2"
                >
                  <Phone className="h-5 w-5 mr-2 inline" />
                  +48 531 890 827
                </a>
              </div>
            </motion.div>
          </div>
        </section>

        <section className="py-16 bg-slate-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <InquiryForm />
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
                className="space-y-8"
              >
                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center text-slate-800">
                      <Clock className="h-5 w-5 mr-2 text-sky-600" />
                      {t("contactPage.workingHoursTitle")}
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      {workingHours.map((schedule, index) => (
                        <div
                          key={index}
                          className="flex justify-between items-center py-2 border-b border-slate-100 last:border-b-0"
                        >
                          <span className="text-slate-700 font-medium">
                            {t(schedule.dayKey)}
                          </span>
                          <span className="text-sky-600 font-semibold">
                            {t(schedule.hoursKey)}
                          </span>
                        </div>
                      ))}
                    </div>
                    <div className="mt-4 p-3 bg-sky-50 rounded-lg">
                      <p className="text-sm text-sky-800">
                        <strong>{t("contactPage.workingHoursNote")}</strong>
                      </p>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="flex items-center text-slate-800">
                      <MapPin className="h-5 w-5 mr-2 text-emerald-600" />
                      {t("contactPage.serviceAreaTitle")}
                    </CardTitle>
                  </CardHeader>
                  <CardContent>
                    <div className="space-y-3">
                      {serviceAreas.map((area, index) => (
                        <div
                          key={index}
                          className="flex justify-between items-center py-2"
                        >
                          <div>
                            <span className="text-slate-700 font-medium">
                              {t(area.cityKey)}
                            </span>
                            <span className="text-xs text-slate-500 ml-2">
                              ({t(area.distanceKey)})
                            </span>
                          </div>
                          <Badge
                            variant={
                              t(area.noteKey) ===
                              t("contactPage.serviceAreaBialobrzegiNote")
                                ? "default"
                                : "secondary"
                            }
                            className="text-xs"
                          >
                            {t(area.noteKey)}
                          </Badge>
                        </div>
                      ))}
                    </div>
                    <div className="mt-4 p-3 bg-emerald-50 rounded-lg">
                      <p className="text-sm text-emerald-800">
                        <strong>{t("contactPage.serviceAreaNote")}</strong>
                      </p>
                    </div>
                  </CardContent>
                </Card>

                <Card>
                  <CardHeader>
                    <CardTitle className="text-slate-800">
                      {t("contactPage.additionalInfoTitle")}
                    </CardTitle>
                  </CardHeader>
                  <CardContent className="space-y-4">
                    {[
                      {
                        titleKey: "contactPage.infoViewingTitle",
                        descKey: "contactPage.infoViewingDesc",
                        color: "bg-sky-500",
                      },
                      {
                        titleKey: "contactPage.infoFreeQuoteTitle",
                        descKey: "contactPage.infoFreeQuoteDesc",
                        color: "bg-emerald-500",
                      },
                      {
                        titleKey: "contactPage.infoConsultationsTitle",
                        descKey: "contactPage.infoConsultationsDesc",
                        color: "bg-amber-500",
                      },
                      {
                        titleKey: "contactPage.infoOnlineBookingTitle",
                        descKey: "contactPage.infoOnlineBookingDesc",
                        color: "bg-purple-500",
                      },
                    ].map((info) => (
                      <div
                        key={info.titleKey}
                        className="flex items-start space-x-3"
                      >
                        <div
                          className={`w-2 h-2 ${info.color} rounded-full mt-2 flex-shrink-0`}
                        ></div>
                        <div>
                          <h4 className="font-semibold text-slate-800">
                            {t(info.titleKey)}
                          </h4>
                          <p className="text-sm text-slate-600">
                            {t(info.descKey)}
                          </p>
                        </div>
                      </div>
                    ))}
                  </CardContent>
                </Card>
              </motion.div>
            </div>
          </div>
        </section>

        <section className="py-16 bg-white">
          <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-slate-800 mb-4">
                {t("contactPage.faqTitle")}
              </h2>
              <p className="text-xl text-slate-600">
                {t("contactPage.faqDescription")}
              </p>
            </motion.div>

            <div className="space-y-6">
              {faqItems.map((faq, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <Card className="hover:shadow-md transition-shadow">
                    <CardContent className="p-6">
                      <h3 className="text-lg font-semibold text-slate-800 mb-3">
                        {t(faq.questionKey)}
                      </h3>
                      <p className="text-slate-600 leading-relaxed">
                        {t(faq.answerKey)}
                      </p>
                    </CardContent>
                  </Card>
                </motion.div>
              ))}
            </div>
          </div>
        </section>
      </div>
    </>
  );
}


---------------------------------

import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Filter } from "lucide-react";
import { motion } from "framer-motion";
import SEOHead from "@/components/SEOHead";
import AttractionCard from "@/components/AttractionCard";
import CallToAction from "@/components/CallToAction";
import {
  attractions,
  getAttractionsByCategory,
  Attraction,
} from "@/data/attractions";
import { useLanguage } from "@/hooks/useLanguage";
import { useLocation } from "wouter";
import {
  getLocalizedPath,
  getLocalizedSlug, // Zmieniono import z getHashSlug na getLocalizedSlug
  PageKey,
  // OfferHashKey, // Usunięto, bo PAGE_KEYS zawiera teraz klucze dla hashów
  Language,
  PAGE_KEYS, // Dodano import PAGE_KEYS
} from "@/config/paths";

interface CategoryFilter {
  id: string;
  nameKey: string;
  pageKeyForHash: PageKey | null; // Dodajemy pole do przechowywania klucza dla hasha
  count?: number;
  filterLogic: (attraction: Attraction) => boolean;
}

// Helper function to derive the internal path for a given PageKey and Language,
// using the available getLocalizedPath function.
// This replicates the likely behavior of the missing getInternalBasePath.
const deriveInternalPathFromLocalized = (
  pageKey: PageKey,
  lang: Language,
  fnGetLocalizedPath: (pk: PageKey, l: Language, h?: PageKey) => string // Zmieniono typ hasha na PageKey
): string => {
  const fullLocalizedPathWithOptionalHash = fnGetLocalizedPath(pageKey, lang);
  // Remove any hash part from the localized path before processing
  const fullLocalizedPath = fullLocalizedPathWithOptionalHash.split("#")[0];

  if (lang === "pl") {
    return fullLocalizedPath;
  } else {
    const prefix = `/${lang}`;
    if (fullLocalizedPath.startsWith(prefix)) {
      const pathAfterPrefix = fullLocalizedPath.substring(prefix.length);
      return pathAfterPrefix === "" ? "/" : pathAfterPrefix;
    } else {
      return fullLocalizedPath;
    }
  }
};

export default function Oferta() {
  const [activeCategory, setActiveCategory] = useState("all");
  const { t, language } = useLanguage();
  const [location, navigate] = useLocation();

  const categories: CategoryFilter[] = [
    {
      id: "all",
      nameKey: "nav.allAttractions",
      pageKeyForHash: null,
      count: attractions.filter((attr) => attr.category !== "uslugi").length,
      filterLogic: (attr) => attr.category !== "uslugi",
    },
    {
      id: "namioty",
      nameKey: "nav.tents",
      pageKeyForHash: PAGE_KEYS.OFFER_TENTS,
      count: getAttractionsByCategory("namioty").length,
      filterLogic: (attr) => attr.category === "namioty",
    },
    {
      id: "stoly-krzesla-obrusy",
      nameKey: "nav.tablesChairs",
      pageKeyForHash: PAGE_KEYS.OFFER_TABLES_CHAIRS_LINENS,
      count: getAttractionsByCategory("wyposazenie").length,
      filterLogic: (attr) => attr.category === "wyposazenie",
    },
    {
      id: "dmuchance",
      nameKey: "nav.inflatables",
      pageKeyForHash: PAGE_KEYS.OFFER_INFLATABLES,
      count: getAttractionsByCategory("dmuchance").length,
      filterLogic: (attr) => attr.category === "dmuchance",
    },
    {
      id: "popcorn",
      nameKey: "nav.popcorn",
      pageKeyForHash: PAGE_KEYS.OFFER_POPCORN,
      count: attractions.filter((a) => a.id === "popcorn").length,
      filterLogic: (attr) => attr.id === "popcorn",
    },
    {
      id: "wata-cukrowa",
      nameKey: "nav.cottonCandy",
      pageKeyForHash: PAGE_KEYS.OFFER_COTTON_CANDY,
      count: attractions.filter((a) => a.id === "wata-cukrowa").length,
      filterLogic: (attr) => attr.id === "wata-cukrowa",
    },
    {
      id: "fontanna-czekoladowa",
      nameKey: "nav.chocolateFountain",
      pageKeyForHash: PAGE_KEYS.OFFER_CHOCOLATE_FOUNTAIN,
      count: attractions.filter((a) => a.id === "fontanna-czekoladowa").length,
      filterLogic: (attr) => attr.id === "fontanna-czekoladowa",
    },
  ];

  useEffect(() => {
    const hash = window.location.hash.replace("#", "");
    const categoryFromHash = categories.find((cat) => {
      if (cat.id === "all" && !hash) return true;
      if (
        cat.pageKeyForHash &&
        hash === getLocalizedSlug(cat.pageKeyForHash, language)
      )
        // Używamy getLocalizedSlug
        return true;
      return false;
    });

    const offerPageBaseWouterPath = deriveInternalPathFromLocalized(
      PAGE_KEYS.OFFER, // Używamy stałej z PAGE_KEYS
      language,
      getLocalizedPath
    );

    if (categoryFromHash) {
      setActiveCategory(categoryFromHash.id);
    } else if (!hash && location.split("#")[0] === offerPageBaseWouterPath) {
      setActiveCategory("all");
    }
  }, [location, language, categories]); // Dodano categories do zależności, bo getLocalizedSlug używa language

  const selectedFilter = categories.find((cat) => cat.id === activeCategory);
  const filteredAttractions = selectedFilter
    ? attractions.filter(selectedFilter.filterLogic)
    : attractions.filter((attr) => attr.category !== "uslugi");

  const activeCategoryName = selectedFilter?.nameKey || "nav.allAttractions";

  const handleCategoryChange = (categoryId: string) => {
    setActiveCategory(categoryId);
    const categoryObject = categories.find((c) => c.id === categoryId);
    let hashTarget = "";

    if (
      categoryObject &&
      categoryObject.id !== "all" &&
      categoryObject.pageKeyForHash
    ) {
      const slug = getLocalizedSlug(categoryObject.pageKeyForHash, language); // Używamy getLocalizedSlug
      if (slug) hashTarget = `#${slug}`;
    }

    const offerBase = getLocalizedPath(PAGE_KEYS.OFFER, language).split("#")[0]; // Używamy stałej z PAGE_KEYS

    if (`${offerBase}${hashTarget}` !== location) {
      navigate(`${offerBase}${hashTarget}`, { replace: true });
    }
  };

  return (
    <>
      <SEOHead
        title={t("seo.offerTitle")}
        description={t("seo.offerDescription")}
        canonical={getLocalizedPath(PAGE_KEYS.OFFER, language)} // Używamy stałej z PAGE_KEYS
      />

      <div className="pt-16">
        <section className="py-12 md:py-20 bg-gradient-to-br from-sky-100 to-emerald-100 dark:from-slate-900 dark:to-slate-400">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              <h2 className="text-2xl md:text-4xl font-bold text-slate-800 dark:text-white mb-6">
                {t("offerPage.heroTitle")}
              </h2>
              <p className="text-lg md:text-xl text-slate-600 dark:text-slate-300 max-w-3xl mx-auto mb-8">
                {t("offerPage.heroDescription")}
              </p>
              <Badge
                variant="secondary"
                className="text-base md:text-lg px-4 py-2 bg-white/80 dark:bg-card dark:text-card-foreground"
              >
                {t("offerPage.badgeLocation")}
              </Badge>
            </motion.div>
          </div>
        </section>

        <section className="py-6 bg-background border-b border-border sticky top-16 z-30">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="flex flex-wrap items-center justify-center gap-2 md:gap-3">
              <div className="w-full md:w-auto flex items-center justify-center md:justify-start mb-2 md:mb-0 md:mr-4">
                <Filter className="h-4 w-4 text-muted-foreground mr-1.5" />
                <span className="text-sm font-medium text-muted-foreground whitespace-nowrap">
                  {t("offerPage.filterLabel")}
                </span>
              </div>
              {categories.map((category) => (
                <Button
                  key={category.id}
                  variant={
                    activeCategory === category.id ? "default" : "outline"
                  }
                  onClick={() => handleCategoryChange(category.id)}
                  size="sm"
                  className="whitespace-nowrap"
                >
                  {t(category.nameKey)}
                  {category.count !== undefined && category.count > 0 && (
                    <Badge
                      variant={
                        activeCategory === category.id ? "outline" : "secondary"
                      }
                      className={`ml-2 ${
                        activeCategory === category.id
                          ? "border-primary-foreground/50 text-primary-foreground/80"
                          : "bg-muted text-muted-foreground dark:bg-slate-700 dark:text-slate-300"
                      }`}
                    >
                      {category.count}
                    </Badge>
                  )}
                </Button>
              ))}
            </div>
          </div>
        </section>

        <section className="py-12 md:py-16 bg-background dark:bg-background">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              className="mb-8"
              initial={{ opacity: 0 }}
              animate={{ opacity: 1 }}
              transition={{ duration: 0.3 }}
            >
              <h2 className="text-2xl md:text-3xl font-bold text-foreground">
                {activeCategory === "all"
                  ? t("offerPage.allAttractionsCount", {
                      count: filteredAttractions.length.toString(),
                    })
                  : t("offerPage.categoryAttractionsCount", {
                      categoryName: t(activeCategoryName),
                      count: filteredAttractions.length.toString(),
                    })}
              </h2>
            </motion.div>

            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6 md:gap-8">
              {filteredAttractions.map((attraction, index) => (
                <AttractionCard
                  key={attraction.id}
                  attraction={attraction}
                  index={index}
                />
              ))}
            </div>

            {filteredAttractions.length === 0 && (
              <div className="text-center py-16">
                <div className="text-6xl mb-4">🎪</div>
                <h3 className="text-xl font-semibold text-foreground mb-2">
                  {t("offerPage.noAttractionsTitle")}
                </h3>
                <p className="text-muted-foreground">
                  {t("offerPage.noAttractionsDescription")}
                </p>
              </div>
            )}
          </div>
        </section>

        <section className="py-12 md:py-16 bg-muted dark:bg-muted">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-3 gap-10 md:gap-12">
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
                className="space-y-8"
              >
                <div id={getLocalizedSlug(PAGE_KEYS.OFFER_TENTS, language)}>
                  {" "}
                  {/* Używamy getLocalizedSlug dla id */}
                  <h2 className="text-2xl font-bold text-foreground dark:text-foreground mb-3 flex items-center">
                    {t("offerPage.sectionTentsTitle")}
                  </h2>
                  <p className="text-muted-foreground dark:text-muted-foreground leading-relaxed">
                    {t("offerPage.sectionTentsDescription")}
                  </p>
                </div>
                <div
                  id={getLocalizedSlug(
                    PAGE_KEYS.OFFER_TABLES_CHAIRS_LINENS,
                    language
                  )}
                >
                  {" "}
                  {/* Używamy getLocalizedSlug dla id */}
                  <h2 className="text-2xl font-bold text-foreground dark:text-foreground mb-3 flex items-center">
                    {t("offerPage.sectionTablesChairsTitle")}
                  </h2>
                  <p className="text-muted-foreground dark:text-muted-foreground leading-relaxed">
                    {t("offerPage.sectionTablesChairsDescription")}
                  </p>
                </div>
                <div
                  id={getLocalizedSlug(PAGE_KEYS.OFFER_INFLATABLES, language)}
                >
                  {" "}
                  {/* Używamy getLocalizedSlug dla id */}
                  <h2 className="text-2xl font-bold text-foreground dark:text-foreground mb-3 flex items-center">
                    {t("offerPage.sectionInflatablesTitle")}
                  </h2>
                  <p className="text-muted-foreground dark:text-muted-foreground leading-relaxed">
                    {t("offerPage.sectionInflatablesDescription")}
                  </p>
                </div>
                <div
                  id={getLocalizedSlug(PAGE_KEYS.OFFER_POPCORN, language)}
                  className="pt-2"
                >
                  {" "}
                  {/* Używamy getLocalizedSlug dla id */}
                  <h2 className="text-2xl font-bold text-foreground dark:text-foreground mb-3 flex items-center">
                    {t("nav.popcorn")}
                  </h2>
                  <p className="text-muted-foreground dark:text-muted-foreground leading-relaxed">
                    {t("attractionsData.popcorn.description")}
                  </p>
                </div>
                <div
                  id={getLocalizedSlug(PAGE_KEYS.OFFER_COTTON_CANDY, language)}
                  className="pt-2"
                >
                  {" "}
                  {/* Używamy getLocalizedSlug dla id */}
                  <h2 className="text-2xl font-bold text-foreground dark:text-foreground mb-3 flex items-center">
                    {t("nav.cottonCandy")}
                  </h2>
                  <p className="text-muted-foreground dark:text-muted-foreground leading-relaxed">
                    {t("attractionsData.wata-cukrowa.description")}
                  </p>
                </div>
                <div
                  id={getLocalizedSlug(
                    PAGE_KEYS.OFFER_CHOCOLATE_FOUNTAIN,
                    language
                  )}
                  className="pt-2"
                >
                  {" "}
                  {/* Używamy getLocalizedSlug dla id */}
                  <h2 className="text-2xl font-bold text-foreground dark:text-foreground mb-3 flex items-center">
                    {t("nav.chocolateFountain")}
                  </h2>
                  <p className="text-muted-foreground dark:text-muted-foreground leading-relaxed">
                    {t("attractionsData.fontanna-czekoladowa.description")}
                  </p>
                </div>
              </motion.div>

              <div className="lg:col-span-2">
                <motion.div
                  initial={{ opacity: 0, x: 30 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  transition={{ duration: 0.6 }}
                  viewport={{ once: true }}
                  className="bg-card rounded-xl p-6 md:p-8 shadow-lg"
                >
                  <h3 className="text-xl md:text-2xl font-bold text-foreground mb-6">
                    {t("offerPage.servicesIncludeTitle")}
                  </h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div className="space-y-4">
                      {[
                        {
                          titleKey: "offerPage.serviceTransport",
                          descKey: "offerPage.serviceTransportDesc",
                          color: "bg-sky-500",
                        },
                        {
                          titleKey: "offerPage.serviceProfessional",
                          descKey: "offerPage.serviceProfessionalDesc",
                          color: "bg-emerald-500",
                        },
                        {
                          titleKey: "offerPage.serviceInsurance",
                          descKey: "offerPage.serviceInsuranceDesc",
                          color: "bg-amber-500",
                        },
                      ].map((service) => (
                        <div
                          key={service.titleKey}
                          className="flex items-start space-x-3"
                        >
                          <div
                            className={`w-2 h-2 ${service.color} rounded-full mt-1.5 flex-shrink-0`}
                          ></div>
                          <div>
                            <h4 className="font-semibold text-foreground">
                              {t(service.titleKey)}
                            </h4>
                            <p className="text-sm text-muted-foreground">
                              {t(service.descKey)}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                    <div className="space-y-4">
                      {[
                        {
                          titleKey: "offerPage.serviceCertified",
                          descKey: "offerPage.serviceCertifiedDesc",
                          color: "bg-purple-500",
                        },
                        {
                          titleKey: "offerPage.serviceFlexible",
                          descKey: "offerPage.serviceFlexibleDesc",
                          color: "bg-pink-500",
                        },
                        {
                          titleKey: "offerPage.serviceConsultations",
                          descKey: "offerPage.serviceConsultationsDesc",
                          color: "bg-indigo-500",
                        },
                      ].map((service) => (
                        <div
                          key={service.titleKey}
                          className="flex items-start space-x-3"
                        >
                          <div
                            className={`w-2 h-2 ${service.color} rounded-full mt-1.5 flex-shrink-0`}
                          ></div>
                          <div>
                            <h4 className="font-semibold text-foreground">
                              {t(service.titleKey)}
                            </h4>
                            <p className="text-sm text-muted-foreground">
                              {t(service.descKey)}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </div>
                </motion.div>
              </div>
            </div>
          </div>
        </section>

        <CallToAction
          variant="secondary"
          className="mx-4 sm:mx-6 lg:mx-8 my-12 md:my-16"
        />
      </div>
    </>
  );
}

----------------------------------------

import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import {
  Users,
  Award,
  Heart,
  Zap,
  Shield,
  Star,
  CheckCircle,
} from "lucide-react";
import { motion } from "framer-motion";
import SEOHead from "@/components/SEOHead";
import CallToAction from "@/components/CallToAction";
import { useLanguage } from "@/hooks/useLanguage";

export default function ONas() {
  const { t } = useLanguage();

  const values = [
    {
      icon: <Heart className="h-8 w-8 text-red-500" />,
      titleKey: "aboutUsPage.valuePassionTitle",
      descriptionKey: "aboutUsPage.valuePassionDesc",
      bgColor: "bg-red-100",
    },
    {
      icon: <Shield className="h-8 w-8 text-blue-500" />,
      titleKey: "aboutUsPage.valueSafetyTitle",
      descriptionKey: "aboutUsPage.valueSafetyDesc",
      bgColor: "bg-blue-100",
    },
    {
      icon: <Zap className="h-8 w-8 text-yellow-500" />,
      titleKey: "aboutUsPage.valueProfessionalismTitle",
      descriptionKey: "aboutUsPage.valueProfessionalismDesc",
      bgColor: "bg-yellow-100",
    },
    {
      icon: <Star className="h-8 w-8 text-purple-500" />,
      titleKey: "aboutUsPage.valueQualityTitle",
      descriptionKey: "aboutUsPage.valueQualityDesc",
      bgColor: "bg-purple-100",
    },
  ];

  const achievements = [
    { number: "500+", labelKey: "aboutUsPage.achievementEvents", icon: "🎪" },
    { number: "5", labelKey: "aboutUsPage.achievementExperience", icon: "📅" },
    {
      number: "50+",
      labelKey: "aboutUsPage.achievementAttractions",
      icon: "🎨",
    },
    { number: "100 km", labelKey: "aboutUsPage.achievementRadius", icon: "🚛" },
    {
      number: "100%",
      labelKey: "aboutUsPage.achievementSatisfaction",
      icon: "😊",
    },
    {
      number: "24/7",
      labelKey: "aboutUsPage.achievementAvailability",
      icon: "📞",
    },
  ];

  const teamMembers = [
    {
      nameKey: "aboutUsPage.teamOwnerName",
      roleKey: "aboutUsPage.teamOwnerRole",
      descriptionKey: "aboutUsPage.teamOwnerDesc",
      icon: "👨‍💼",
    },
    {
      nameKey: "aboutUsPage.teamAssemblyName",
      roleKey: "aboutUsPage.teamAssemblyRole",
      descriptionKey: "aboutUsPage.teamAssemblyDesc",
      icon: "🔧",
    },
    {
      nameKey: "aboutUsPage.teamSupportName",
      roleKey: "aboutUsPage.teamSupportRole",
      descriptionKey: "aboutUsPage.teamSupportDesc",
      icon: "💬",
    },
  ];

  const certificates = [
    {
      nameKey: "aboutUsPage.certInsurance",
      descriptionKey: "aboutUsPage.certInsuranceDesc",
    },
    {
      nameKey: "aboutUsPage.certEquipment",
      descriptionKey: "aboutUsPage.certEquipmentDesc",
    },
    {
      nameKey: "aboutUsPage.certReviews",
      descriptionKey: "aboutUsPage.certReviewsDesc",
    },
    {
      nameKey: "aboutUsPage.certTraining",
      descriptionKey: "aboutUsPage.certTrainingDesc",
    },
  ];

  return (
    <>
      <SEOHead
        title={t("seo.aboutUsTitle")}
        description={t("seo.aboutUsDescription")}
        canonical="/o-nas"
      />

      <div className="pt-16">
        <section className="py-20 bg-gradient-to-br from-sky-50 to-emerald-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
            >
              <div className="flex justify-center mb-6">
                <div className="w-16 h-16 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-full flex items-center justify-center">
                  <Users className="h-8 w-8 text-white" />
                </div>
              </div>
              <h2 className="text-2xl md:text-4xl font-bold text-slate-800 mb-6">
                {t("aboutUsPage.heroTitle")}
              </h2>
              <p className="text-xl text-slate-600 max-w-3xl mx-auto mb-8">
                {t("aboutUsPage.heroDescription")}
              </p>
              <Badge variant="secondary" className="text-lg px-4 py-2">
                {t("aboutUsPage.badgeFounded")}
              </Badge>
            </motion.div>
          </div>
        </section>

        <section className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center">
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h2 className="text-3xl font-bold text-slate-800 mb-6">
                  {t("aboutUsPage.storyTitle")}
                </h2>
                <div className="space-y-4 text-slate-600 leading-relaxed">
                  <p>{t("aboutUsPage.storyPara1")}</p>
                  <p>{t("aboutUsPage.storyPara2")}</p>
                  <p>{t("aboutUsPage.storyPara3")}</p>
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
                className="space-y-6"
              >
                <Card className="border-l-4 border-l-sky-500">
                  <CardContent className="p-6">
                    <h3 className="text-xl font-bold text-slate-800 mb-3 flex items-center">
                      {t("aboutUsPage.missionTitle")}
                    </h3>
                    <p className="text-slate-600">
                      {t("aboutUsPage.missionDescription")}
                    </p>
                  </CardContent>
                </Card>

                <Card className="border-l-4 border-l-emerald-500">
                  <CardContent className="p-6">
                    <h3 className="text-xl font-bold text-slate-800 mb-3 flex items-center">
                      {t("aboutUsPage.visionTitle")}
                    </h3>
                    <p className="text-slate-600">
                      {t("aboutUsPage.visionDescription")}
                    </p>
                  </CardContent>
                </Card>
              </motion.div>
            </div>
          </div>
        </section>

        <section className="py-16 bg-slate-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-slate-800 mb-4">
                {t("aboutUsPage.valuesTitle")}
              </h2>
              <p className="text-xl text-slate-600 max-w-3xl mx-auto">
                {t("aboutUsPage.valuesDescription")}
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8">
              {values.map((value, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <Card className="h-full text-center hover:shadow-lg transition-shadow card-hover">
                    <CardContent className="p-6">
                      <div
                        className={`w-16 h-16 ${value.bgColor} rounded-full flex items-center justify-center mx-auto mb-4`}
                      >
                        {value.icon}
                      </div>
                      <h3 className="text-xl font-bold text-slate-800 mb-3">
                        {t(value.titleKey)}
                      </h3>
                      <p className="text-slate-600 text-sm leading-relaxed">
                        {t(value.descriptionKey)}
                      </p>
                    </CardContent>
                  </Card>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        <section className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-slate-800 mb-4">
                {t("aboutUsPage.achievementsTitle")}
              </h2>
              <p className="text-xl text-slate-600">
                {t("aboutUsPage.achievementsDescription")}
              </p>
            </motion.div>

            <div className="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-6 gap-6">
              {achievements.map((achievement, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, scale: 0.8 }}
                  whileInView={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="text-center"
                >
                  <div className="bg-gradient-to-br from-sky-50 to-emerald-50 rounded-xl p-6 hover:shadow-lg transition-shadow">
                    <div className="text-3xl mb-3">{achievement.icon}</div>
                    <div className="text-2xl md:text-3xl font-bold text-sky-600 mb-2">
                      {achievement.number}
                    </div>
                    <div className="text-slate-600 text-sm leading-tight">
                      {t(achievement.labelKey)}
                    </div>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        <section className="py-16 bg-slate-50">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="text-center mb-12"
            >
              <h2 className="text-3xl font-bold text-slate-800 mb-4">
                {t("aboutUsPage.teamTitle")}
              </h2>
              <p className="text-xl text-slate-600 max-w-3xl mx-auto">
                {t("aboutUsPage.teamDescription")}
              </p>
            </motion.div>

            <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
              {teamMembers.map((member, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 30 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.5, delay: index * 0.2 }}
                  viewport={{ once: true }}
                >
                  <Card className="h-full text-center hover:shadow-lg transition-shadow">
                    <CardContent className="p-6">
                      <div className="text-6xl mb-4">{member.icon}</div>
                      <h3 className="text-xl font-bold text-slate-800 mb-2">
                        {t(member.nameKey)}
                      </h3>
                      <Badge variant="secondary" className="mb-4">
                        {t(member.roleKey)}
                      </Badge>
                      <p className="text-slate-600 text-sm leading-relaxed">
                        {t(member.descriptionKey)}
                      </p>
                    </CardContent>
                  </Card>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        <section className="py-16 bg-white">
          <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
              <motion.div
                initial={{ opacity: 0, x: -30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h2 className="text-3xl font-bold text-slate-800 mb-6 flex items-center">
                  <Award className="h-8 w-8 text-amber-500 mr-3" />
                  {t("aboutUsPage.certsTitle")}
                </h2>
                <p className="text-slate-600 mb-6 leading-relaxed">
                  {t("aboutUsPage.certsDescription")}
                </p>
                <div className="space-y-4">
                  {certificates.map((cert, index) => (
                    <div key={index} className="flex items-start space-x-3">
                      <CheckCircle className="h-5 w-5 text-emerald-500 mt-0.5 flex-shrink-0" />
                      <div>
                        <h4 className="font-semibold text-slate-800">
                          {t(cert.nameKey)}
                        </h4>
                        <p className="text-sm text-slate-600">
                          {t(cert.descriptionKey)}
                        </p>
                      </div>
                    </div>
                  ))}
                </div>
              </motion.div>

              <motion.div
                initial={{ opacity: 0, x: 30 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <Card className="bg-gradient-to-br from-sky-500 to-emerald-500 text-white h-full">
                  <CardContent className="p-8">
                    <h3 className="text-2xl font-bold mb-6">
                      {t("aboutUsPage.whyChooseUsTitle")}
                    </h3>
                    <div className="space-y-6">
                      {[
                        {
                          icon: "⭐",
                          titleKey: "aboutUsPage.whyChooseExperience",
                          descKey: "aboutUsPage.whyChooseExperienceDesc",
                        },
                        {
                          icon: "🛡️",
                          titleKey: "aboutUsPage.whyChooseSafety",
                          descKey: "aboutUsPage.whyChooseSafetyDesc",
                        },
                        {
                          icon: "⚡",
                          titleKey: "aboutUsPage.whyChooseProfessionalism",
                          descKey: "aboutUsPage.whyChooseProfessionalismDesc",
                        },
                        {
                          icon: "💝",
                          titleKey: "aboutUsPage.whyChooseIndividual",
                          descKey: "aboutUsPage.whyChooseIndividualDesc",
                        },
                      ].map((item) => (
                        <div key={item.titleKey} className="flex items-start">
                          <div className="text-amber-300 text-xl mr-4 mt-1">
                            {item.icon}
                          </div>
                          <div>
                            <h4 className="font-semibold mb-2">
                              {t(item.titleKey)}
                            </h4>
                            <p className="text-white/90 text-sm">
                              {t(item.descKey)}
                            </p>
                          </div>
                        </div>
                      ))}
                    </div>
                  </CardContent>
                </Card>
              </motion.div>
            </div>
          </div>
        </section>

        <CallToAction />
      </div>
    </>
  );
}


-----------------------

import React, { createContext, useContext, useState, ReactNode } from "react";
import { Language, defaultLang } from "@/config/paths";

interface LanguageContextType {
  language: Language;
  setLanguage: (
    lang: Language,
    options?: { preventNavigation?: boolean }
  ) => void;
  t: (key: string, replacements?: Record<string, string | number>) => string;
}

const translations: Record<Language, Record<string, string>> = {
  pl: {
    "nav.home": "Start",
    "nav.about": "O Nas",
    "nav.offer": "Oferta",
    "nav.photo": "Foto",
    "nav.pricing": "Cennik",
    "nav.contact": "Kontakt",
    "nav.allAttractions": "Wszystkie Atrakcje",
    "nav.tents": "Namioty Imprezowe",
    "nav.tablesChairs": "Stoły i Krzesła",
    "nav.inflatables": "Dmuchańce",
    "nav.popcorn": "Popcorn",
    "nav.cottonCandy": "Wata Cukrowa",
    "nav.chocolateFountain": "Fontanna Czekoladowa",
    "nav.allPhotos": "Wszystkie Zdjęcia",
    "nav.photoTents": "Namioty",
    "nav.photoTablesChairs": "Stoły i Krzesła",
    "nav.photoInflatables": "Dmuchańce",
    "nav.photoCottonCandy": "Wata Cukrowa",
    "nav.photoPopcorn": "Popcorn",
    "nav.photoFountains": "Fontanny Czekoladowe",
    "nav.review": "Dodaj opinię",
    "hero.title": "SŁODKOLANDIA wita:",
    "hero.subtitle": "Niezapomniane Atrakcje na Twoją Imprezę!",
    "hero.description":
      "Gwarantujemy świetną zabawę i profesjonalną obsługę na każdym evencie!",
    "hero.seeOffer": "Zobacz naszą ofertę",
    "hero.askDate": "Zapytaj o termin",
    "services.title": "Nasze Główne Atrakcje",
    "services.description":
      "Oferujemy kompleksowy wynajem sprzętu eventowego i atrakcji, które sprawią, że Twoja impreza będzie niezapomniana",
    "services.seeAll": "Zobacz wszystkie atrakcje",
    "category.namioty": "Namioty",
    "category.wyposazenie": "Wyposażenie",
    "category.dmuchance": "Dmuchańce",
    "category.cukiernicze": "Słodkości",
    "category.uslugi": "Usługi",
    "whyUs.title": "Dlaczego SŁODKOLANDIA wita:?",
    "whyUs.description":
      "Łączymy pasję do tworzenia niezapomnianych chwil z profesjonalnym podejściem do każdego eventu",
    "whyUs.experience": "Doświadczenie",
    "whyUs.experienceDesc":
      "Lata doświadczenia w organizacji eventów różnej skali",
    "whyUs.safety": "Bezpieczeństwo",
    "whyUs.safetyDesc":
      "Certyfikowany sprzęt i pełne ubezpieczenie każdej atrakcji",
    "whyUs.punctuality": "Punktualność",
    "whyUs.punctualityDesc":
      "Zawsze na czasie - dotrzymujemy terminów dostaw i montażu",
    "whyUs.individual": "Indywidualne Podejście",
    "whyUs.individualDesc":
      "Każdy event jest wyjątkowy - dostosowujemy się do Twoich potrzeb",
    "cta.mainTitle": "Zorganizujmy razem Twoją wymarzą imprezę!",
    "cta.mainDescription":
      "Skontaktuj się z nami już dziś i sprawdź dostępność na Twój termin. Gwarantujemy profesjonalną obsługę i niezapomnianych wrażeń!",
    "cta.contactForm": "Formularz kontaktowy",
    "cta.secondaryTitle": "Gotowy na niezapomnianą imprezę?",
    "cta.secondaryDescription":
      "Skontaktuj się z nami już dziś i zarezerwuj termin!",
    "cta.callNow": "Zadzwoń teraz",
    "cta.askForDate": "Zapytaj o termin",
    "home.stats.eventsOrganized": "Eventów zorganizowanych",
    "home.stats.happyClientsMonthly": "Zadowolonych Klientów miesięcznie",
    "home.stats.yearsExperience": "lat doświadczenia",
    "home.stats.serviceRadius": "promień obsługi",
    "footer.companyName": "SŁODKOLANDIA wita:",
    "footer.companyDescription":
      "Profesjonalny wynajem atrakcji eventowych w Radomiu i okolicach. Tworzymy niezapomniane chwile dla Twoich Gości!",
    "footer.quickLinks": "Szybkie Linki",
    "footer.servicesTitle": "Nasze Usługi",
    "footer.serviceTents": "Namioty Imprezowe",
    "footer.serviceInflatables": "Dmuchańce",
    "footer.serviceCottonCandy": "Wata Cukrowa",
    "footer.servicePopcorn": "Maszyny do Popcornu",
    "footer.serviceFountains": "Fontanna Czekoladowa",
    "footer.serviceComprehensive": "Kompleksowa Obsługa",
    "footer.contactTitle": "Kontakt",
    "footer.address": "Radom i okolice",
    "footer.addressDetail": "(promień 100 km)",
    "footer.copyright": "Radom {year} SŁODKOLANDIA wita:. ",
    "footer.privacyPolicy": "Polityka Prywatności",
    "footer.terms": "Regulamin",
    "attractionCard.details": "Szczegóły",
    "attractionCard.priceFrom": "od ",
    "currencyUnit.zł": "zł",
    "pricing.perPeriod.dzień": " dzień",
    "pricing.perPeriod.impreza": " impreza",
    "pricing.perPeriod.event": " event",
    "pricing.perPeriod.sztuka/dzień": " sztuka/dzień",
    "pricing.perPeriod.od": "od",
    "pricing.perPeriod.gratis": "Gratis*",
    "cookieConsent.message":
      "Ta strona używa plików cookies w celu zapewnienia najlepszej jakości usług. Kontynuując przeglądanie zgadzasz się na ich użycie.",
    "cookieConsent.accept": "Akceptuję",
    "cookieConsent.reject": "Odrzuć",
    "inquiryForm.title": "Formularz Zapytania",
    "inquiryForm.nameLabel": "Imię i nazwisko *",
    "inquiryForm.namePlaceholder": "Twoje imię i nazwisko",
    "inquiryForm.nameError": "Imię i nazwisko musi mieć co najmniej 2 znaki",
    "inquiryForm.emailLabel": "Email *",
    "inquiryForm.emailPlaceholder": "twoj@email.pl",
    "inquiryForm.emailError": "Nieprawidłowy adres email",
    "inquiryForm.phoneLabel": "Telefon",
    "inquiryForm.phonePlaceholder": "+48 123 456 789",
    "inquiryForm.eventDateLabel": "Data eventu",
    "inquiryForm.attractionsLabel": "Interesujące atrakcje",
    "inquiryForm.messageLabel": "Wiadomość *",
    "inquiryForm.messagePlaceholder":
      "Opisz swój event, liczbę Gości, dodatkowe wymagania...",
    "inquiryForm.messageError": "Wiadomość musi mieć co najmniej 10 znaków",
    "inquiryForm.submitButton": "Wyślij Zapytanie",
    "inquiryForm.submittingButton": "Wysyłanie...",
    "inquiryForm.successTitle": "Zapytanie wysłane!",
    "inquiryForm.successDescription":
      "Dziękujemy za kontakt. Odpowiemy w ciągu 24 godzin.",
    "inquiryForm.errorTitle": "Błąd wysyłania",
    "inquiryForm.errorDescription":
      "Przepraszamy, wystąpił problem. Spróbuj ponownie lub zadzwoń.",
    "inquiryForm.attractionOptionTents": "Namioty Imprezowe",
    "inquiryForm.attractionOptionInflatables": "Dmuchane Atrakcje",
    "inquiryForm.attractionOptionCottonCandy": "Wata Cukrowa",
    "inquiryForm.attractionOptionPopcorn": "Maszyny do Popcornu",
    "inquiryForm.attractionOptionFountains": "Fontanny Czekoladowe",
    "inquiryForm.attractionOptionComprehensive": "Kompleksowa Obsługa",
    "pricingPage.heroTitle": "Cennik Naszych Usług",
    "pricingPage.heroDescription":
      "Oferujemy konkurencyjne ceny i indywidualne wyceny dostosowane do Twojego budżetu i potrzeb. Wszystkie ceny zawierają transport w promieniu 15km od Radomia.",
    "pricingPage.badgeTransportFree15km": "🚚 Darmowy transport do 15km",
    "pricingPage.badgeSetupIncluded": "🛠️ Montaż i demontaż w cenie",
    "pricingPage.badgeInsuranceOC": "🛡️ Ubezpieczenie OC",
    "pricingPage.packagesTitle": "Pakiety Promocyjne",
    "pricingPage.packagesDescription":
      "Oszczędź wynajmując pakiety atrakcji! Im więcej wynajmujesz, tym więcej oszczędzasz.",
    "pricingPage.popularPackage": "Najpopularniejszy",
    "pricingPage.packageNormally": "Normalnie",
    "pricingPage.packageSave": "Oszczędzasz {amount} zł",
    "pricingPage.packageIncludes": "W pakiecie:",
    "pricingPage.packageAsk": "Zapytaj o pakiet",
    "pricingPage.individualTitle": "Cennik Indywidualny",
    "pricingPage.individualDescription": "Ceny wynajmu pojedynczych atrakcji.",
    "pricingPage.categoryAll": "Wszystkie",
    "pricingPage.categoryGastro": "Słodkości i Wyposażenie",
    "pricingPage.itemizedPricingLabel": "Ceny jednostkowe",
    "pricingPage.additionalServicesTitle": "Usługi Dodatkowe",
    "pricingPage.discountsTitle": "Rabaty i Promocje",
    "pricingPage.discountPackages": "Pakiety Eventowe",
    "pricingPage.discountPackagesDesc":
      "Wynajmij 3 lub więcej atrakcji i otrzymaj 15% rabatu!",
    "pricingPage.discountLongTerm": "Długoterminowy Wynajem",
    "pricingPage.discountLongTermDesc":
      "Eventy powyżej 2 dni - specjalne ceny!",
    "pricingPage.discountLoyal": "Klienci Stali",
    "pricingPage.discountLoyalDesc":
      "Program lojalnościowy dla regularnych Klientów",
    "pricingPage.askForDiscount": "Zapytaj o Rabat",
    "pricingPage.importantInfoTitle": "Ważne Informacje",
    "pricingPage.rentalConditionsTitle": "📋 Warunki Wynajmu",
    "pricingPage.rentalCondition1":
      "• Rezerwacja wymaga wpłaty zadatku 30% wartości zamówienia",
    "pricingPage.rentalCondition2":
      "• Minimalna doba wynajmu - 1 dzień (24 godziny) dla namiotów, pozostałe atrakcje na czas trwania imprezy",
    "pricingPage.rentalCondition3":
      "• Możliwość anulowania do 48h przed eventem",
    "pricingPage.rentalCondition4": "• Ceny brutto",
    "pricingPage.rentalCondition5":
      "• Dla eventów w dni świąteczne - dopłata 20%",
    "pricingPage.transportSetupTitle": "🚚 Transport i Montaż",
    "pricingPage.transportSetup1": "• Darmowy transport do 15km od Radomia",
    "pricingPage.transportSetup2":
      "• Montaż i demontaż w standardowych godzinach (8:00-20:00)",
    "pricingPage.transportSetup3":
      "• Czas montażu: 1-4 godziny w zależności od atrakcji",
    "pricingPage.transportSetup4":
      "• Wymagane jest zapewnienie dostępu do prądu 230V",
    "pricingPage.transportSetup5":
      "• Dla dmuchańców - płaska powierzchnia min. 4x4m",
    "pricingPage.packageChildName": "Pakiet Dziecięcy",
    "pricingPage.packageChildDesc": "Idealny na urodziny dziecka",
    "pricingPage.packageChildItem1": "Zamek dmuchany",
    "pricingPage.packageChildItem2": "Wata cukrowa",
    "pricingPage.packageChildItem3": "Popcorn",
    "pricingPage.packageFamilyName": "Pakiet Rodzinny",
    "pricingPage.packageFamilyDesc": "Dla większych rodzinnych spotkań",
    "pricingPage.packageFamilyItem1": "Namiot 6x12m",
    "pricingPage.packageFamilyItem2": "Dmuchana zjeżdżalnia",
    "pricingPage.packageFamilyItem3": "Wata cukrowa",
    "pricingPage.packageFamilyItem4": "Fontanna czekoladowa",
    "pricingPage.packageEventName": "Pakiet Eventowy",
    "pricingPage.packageEventDesc": "Kompleksowa obsługa większych eventów",
    "pricingPage.packageEventItem1": "Namiot 10x20m",
    "pricingPage.packageEventItem2": "2x Dmuchańce",
    "pricingPage.packageEventItem3": "Wata cukrowa",
    "pricingPage.packageEventItem4": "Popcorn",
    "pricingPage.packageEventItem5": "Fontanna czekoladowa",
    "pricingPage.packageEventItem6": "Obsługa",
    "pricingPage.additionalServiceTransport15": "Transport (do 15km)",
    "pricingPage.additionalServiceTransport30": "Transport (15-30km)",
    "pricingPage.additionalServiceTransportOver30": "Transport (powyżej 30km)",
    "pricingPage.additionalServiceNightSetup": "Montaż w godzinach nocnych",
    "pricingPage.additionalServiceExtendRental":
      "Przedłużenie wynajmu (+1 dzień)",
    "pricingPage.additionalServiceOperator": "Obsługa dodatkowa (operator)",
    "pricingPage.unitPriceDefault": "zł",
    "pricingPage.unitPriceKm": "zł/km",
    "pricingPage.unitPricePercent": "% ceny bazowej",
    "galleryPage.heroTitle": "Zobacz Nasze Atrakcje w Akcji!",
    "galleryPage.heroDescription":
      "Galeria zdjęć z naszych realizacji eventowych. Odkryj, jak wyglądają nasze atrakcje na prawdziwych imprezach i eventach w Radomiu i okolicach.",
    "galleryPage.badgeEventsDone": "Ponad 500 zrealizowanych eventów",
    "galleryPage.filterLabel": "Kategorie:",
    "galleryPage.categoryAll": "Wszystkie",
    "galleryPage.categoryTents": "Namioty Imprezowe",
    "galleryPage.categoryTablesChairs": "Stoły i Krzesła",
    "galleryPage.categoryInflatables": "Dmuchane Atrakcje",
    "galleryPage.categoryCottonCandy": "Wata Cukrowa",
    "galleryPage.categoryPopcorn": "Popcorn",
    "galleryPage.categoryFountains": "Fontanny Czekoladowe",
    "galleryPage.categoryEventSetups": "Realizacje Eventów",
    "galleryPage.sectionTentsTitle": "🏕️ Namioty Imprezowe",
    "galleryPage.sectionTentsDesc":
      "Profesjonalne namioty w różnych konfiguracjach - od kameralnych przyjęć po duże eventy firmowe.",
    "galleryPage.sectionTablesChairsTitle": "🪑 Stoły, Krzesła i Obrusy",
    "galleryPage.sectionTablesChairsDescription":
      "Kompleksowe wyposażenie stołów, krzeseł, obrusów i więcej.",
    "galleryPage.sectionInflatablesTitle": "🏰 Zamki i Zjeżdżalnie Dmuchane",
    "galleryPage.sectionInflatablesDesc":
      "Bezpieczna zabawa dla dzieci - zjeżdżalnie, zamki dmuchane.",
    "galleryPage.sectionCottonCandyTitle": "🍭 Wata Cukrowa",
    "galleryPage.sectionCottonCandyDesc":
      "Kolorowa wata cukrowa w różnych smakach - słodka atrakcja dla Gości w każdym wieku.",
    "galleryPage.sectionPopcornTitle": "🍿 Popcorn",
    "galleryPage.sectionPopcornDesc":
      "Aromatyczny popcorn przygotowywany na żywo.",
    "galleryPage.sectionFountainsTitle": "🍫 Fontanna Czekoladowa",
    "galleryPage.sectionFountainsDesc":
      "Elegancka fontanna czekoladowa z dodatkami - wykwintna atrakcja dla smakoszy.",
    "galleryPage.sectionEventSetupsTitle": "🎉 Realizacje Eventów",
    "galleryPage.sectionEventSetupsDesc":
      "Zobacz jak wyglądają nasze kompleksowe realizacje - od małych przyjęć po duże eventy.",
    "galleryPage.currentCategoryInfo": "{count} zdjęć w tej kategorii",
    "galleryPage.statsTitle": "Nasze doświadczenie w liczbach",
    "galleryPage.statEvents": "Zrealizowanych eventów",
    "galleryPage.statKids": "Zadowolonych dzieci",
    "galleryPage.statAttractions": "Rodzajów atrakcji",
    "galleryPage.statRadius": "Promień obsługi",
    "contactPage.heroTitle": "Skontaktuj się z Nami",
    "contactPage.heroDescription":
      "Zorganizujmy razem Twoją niezapomnianą imprezę! Skontaktuj się z nami już dziś i sprawdź dostępność na Twój termin.",
    "contactPage.badgeQuickResponse": "⚡ Szybka odpowiedź",
    "contactPage.badgeFreeConsultation": "💬 Darmowa konsultacja",
    "contactPage.badgeIndividualQuotes": "📋 Indywidualne wyceny",
    "contactPage.quickContactTitle": "Wybierz Najwygodniejszy Sposób Kontaktu",
    "contactPage.quickContactDescription":
      "Jesteśmy dostępni przez cały tydzień. Odpowiadamy szybko na wszystkie zapytania!",
    "contactPage.phoneTitle": "Telefon",
    "contactPage.phoneDescription": "Najszybszy kontakt",
    "contactPage.emailTitle": "Email",
    "contactPage.emailDescription": "Napisz do nas",
    "contactPage.whatsappTitle": "WhatsApp",
    "contactPage.whatsappDescription": "Szybka wiadomość",
    "contactPage.meetingTitle": "Spotkanie",
    "contactPage.meetingDescription": "Umów się na prezentację",
    "contactPage.meetingDetails": "Po wcześniejszym kontakcie",
    "contactPage.callToActionTitle": "Zadzwoń już teraz!",
    "contactPage.callToActionDescription":
      "Sprawdzimy dostępność terminu i przygotujemy indywidualną wycenę",
    "contactPage.workingHoursTitle": "Godziny Pracy",
    "contactPage.workingHoursNote":
      "Uwaga: W przypadku pilnych spraw jesteśmy dostępni również poza godzinami pracy.",
    "contactPage.workingHoursMonFri": "Poniedziałek - Piątek",
    "contactPage.workingHoursSat": "Sobota",
    "contactPage.workingHoursSun": "Niedziela",
    "contactPage.workingHoursHoliday": "Dni świąteczne",
    "contactPage.workingHoursMonFriTime": "8:00 - 18:00",
    "contactPage.workingHoursSatTime": "9:00 - 18:00",
    "contactPage.workingHoursSunTime": "10:00 - 18:00",
    "contactPage.workingHoursHolidayTime": "Na umowę",
    "contactPage.serviceAreaTitle": "Obszar Obsługi",
    "contactPage.serviceAreaNote":
      "Obsługujemy też inne miasta! Skontaktuj się z nami, aby uzgodnić warunki transportu.",
    "contactPage.serviceAreaRadom": "Radom",
    "contactPage.serviceAreaRadomDist": "0km",
    "contactPage.serviceAreaRadomNote": "Siedziba firmy",
    "contactPage.serviceAreaBialobrzegi": "Białobrzegi",
    "contactPage.serviceAreaBialobrzegiDist": "25km",
    "contactPage.serviceAreaBialobrzegiNote": "Darmowy transport",
    "contactPage.serviceAreaSzydlowiec": "Szydłowiec",
    "contactPage.serviceAreaSzydlowiecDist": "30km",
    "contactPage.serviceAreaSzydlowiecNote": "Darmowy transport",
    "contactPage.serviceAreaKozienice": "Kozienice",
    "contactPage.serviceAreaKozieniceDist": "35km",
    "contactPage.serviceAreaKozieniceNote": "Dodatkowa opłata",
    "contactPage.serviceAreaOstrowiec": "Ostrowiec Św.",
    "contactPage.serviceAreaOstrowiecDist": "40km",
    "contactPage.serviceAreaOstrowiecNote": "Dodatkowa opłata",
    "contactPage.serviceAreaSkarzysko": "Skarżysko-Kamienna",
    "contactPage.serviceAreaSkarzyskoDist": "45km",
    "contactPage.serviceAreaSkarzyskoNote": "Dodatkowa opłata",
    "contactPage.additionalInfoTitle": "Dodatkowe Informacje",
    "contactPage.infoViewingTitle": "Oględziny sprzętu",
    "contactPage.infoViewingDesc":
      "Możliwość obejrzenia atrakcji przed wynajmem",
    "contactPage.infoFreeQuoteTitle": "Darmowa wycena",
    "contactPage.infoFreeQuoteDesc":
      "Przygotujemy bezpłatną ofertę dostosowaną do Twoich potrzeb",
    "contactPage.infoConsultationsTitle": "Konsultacje",
    "contactPage.infoConsultationsDesc": "Pomożemy w planowaniu całego eventu",
    "contactPage.infoOnlineBookingTitle": "Rezerwacja online",
    "contactPage.infoOnlineBookingDesc":
      "Możliwość rezerwacji przez formularz lub telefon",
    "contactPage.faqTitle": "Najczęściej Zadawane Pytania",
    "contactPage.faqDescription":
      "Odpowiedzi na pytania, które najczęściej otrzymujemy od naszych Klientów",
    "contactPage.faq1Question": "Jak wcześnie należy dokonać rezerwacji?",
    "contactPage.faq1Answer":
      "Zalecamy rezerwację co najmniej 2 tygodnie przed planowanym eventem, szczególnie w sezonie letnim i okresie świątecznym.",
    "contactPage.faq2Question": "Czy ceny zawierają montaż i transport?",
    "contactPage.faq2Answer":
      "Tak, wszystkie nasze ceny zawierają montaż, demontaż oraz transport w promieniu 100 km od Radomia. Za większe odległości pobieramy dodatkową opłatę.",
    "contactPage.faq3Question": "Co jeśli pogoda będzie niesprzyjająca?",
    "contactPage.faq3Answer":
      "Nasze namioty są odporne na warunki atmosferyczne. Dmuchańce można używać przy lekkim deszczu, ale nie podczas burzy ze względów bezpieczeństwa.",
    "contactPage.faq4Question": "Czy atrakcje są ubezpieczone?",
    "contactPage.faq4Answer":
      "Tak, wszystkie nasze atrakcje posiadają pełne ubezpieczenie OC. Dodatkowo regularnie przeprowadzamy przeglądy techniczne sprzętu.",
    "contactPage.faq5Question": "Jak wygląda proces rezerwacji?",
    "contactPage.faq5Answer":
      "Po kontakcie przygotowujemy wycenę, następnie wymagamy wpłaty zadatku 30%. Resztę kwoty można uregulować przy odbiorze sprzętu.",
    "aboutUsPage.heroTitle": "O Naszej Firmie",
    "aboutUsPage.heroDescription":
      "Jesteśmy firmą z pasją do tworzenia niezapomnianych chwil. Specializujemy się w wynajmie atrakcji eventowych, które sprawiają, że każda impreza staje się wyjątkowa.",
    "aboutUsPage.badgeFounded": "Radom i okolice 100 km",
    "aboutUsPage.storyTitle": "Nasza Historia",
    "aboutUsPage.storyPara1":
      "'SŁODKOLANDIA wita:' powstała z prostego przekonania, że każde wydarzenie zasługuje na to, aby być niezapomnianym. Rozpoczęliśmy działalność w 2014 roku z trzema dmuchańcami i wielką pasją do organizacji eventów.",
    "aboutUsPage.storyPara2":
      "Dziś jesteśmy rozpoznawalną marką w Radomiu i okolicach, oferującą kompleksowy wynajem atrakcji eventowych. Nasze doświadczenie obejmuje eventy dla firm, wesela, urodziny dzieci, festyny miejskie i wiele innych okazji.",
    "aboutUsPage.storyPara3":
      "To, co nas wyróżnia, to indywidualne podejście do każdego Klienta oraz nieustanna troska o bezpieczeństwo i jakość naszych usług.",
    "aboutUsPage.missionTitle": "🎯 Nasza Misja",
    "aboutUsPage.missionDescription":
      "Tworzymy niezapomniane momenty radości i zabawy, dostarczając najwyższej jakości atrakcje eventowe z pełną obsługą profesjonalną.",
    "aboutUsPage.visionTitle": "🔮 Nasza Wizja",
    "aboutUsPage.visionDescription":
      "Być pierwszym wyborem w regionie dla osób poszukujących profesjonalnych atrakcji eventowych i kompleksowej obsługi wydarzeń.",
    "aboutUsPage.valuesTitle": "Nasze Wartości",
    "aboutUsPage.valuesDescription":
      "Wartości, które wyznaczają nasz sposób działania i podejście do każdego Klienta",
    "aboutUsPage.valuePassionTitle": "Pasja",
    "aboutUsPage.valuePassionDesc":
      "Każdy event traktujemy jako wyjątkowe wydarzenie. Wkładamy serce w to, co robimy.",
    "aboutUsPage.valueSafetyTitle": "Bezpieczeństwo",
    "aboutUsPage.valueSafetyDesc":
      "Priorytetem jest bezpieczeństwo naszych Gości. Cały sprzęt jest certyfikowany i ubezpieczony.",
    "aboutUsPage.valueProfessionalismTitle": "Profesjonalizm",
    "aboutUsPage.valueProfessionalismDesc":
      "Punktualność, rzetelność i wysoka jakość usług to nasze znaki rozpoznawcze.",
    "aboutUsPage.valueQualityTitle": "Jakość",
    "aboutUsPage.valueQualityDesc":
      "Używamy tylko sprawdzonego sprzętu najwyższej jakości od renomowanych producentów.",
    "aboutUsPage.achievementsTitle": "Nasze Osiągnięcia",
    "aboutUsPage.achievementsDescription":
      "Liczby, które najlepiej opisują nasze doświadczenie i zaangażowanie",
    "aboutUsPage.achievementEvents": "Zrealizowanych eventów",
    "aboutUsPage.achievementExperience": "lat doświadczenia",
    "aboutUsPage.achievementAttractions": "rodzajów atrakcji",
    "aboutUsPage.achievementRadius": "promień obsługi",
    "aboutUsPage.achievementSatisfaction": "zadowolonych Klientów",
    "aboutUsPage.achievementAvailability": "dostępność telefoniczna",
    "aboutUsPage.teamTitle": "Nasz Zespół",
    "aboutUsPage.teamDescription":
      "Grupa pasjonatów, którzy dbają o to, aby każdy event był perfekcyjny",
    "aboutUsPage.teamOwnerName": "Właściciel firmy",
    "aboutUsPage.teamOwnerRole": "Założyciel i kierownik projektów",
    "aboutUsPage.teamOwnerDesc":
      "11 lat doświadczenia w branży eventowej. Pasjonat tworzenia niezapomnianych chwil.",
    "aboutUsPage.teamAssemblyName": "Zespół montażowy",
    "aboutUsPage.teamAssemblyRole": "Specjaliści od montażu",
    "aboutUsPage.teamAssemblyDesc":
      "Doświadczeni technicy zapewniający szybki i bezpieczny montaż wszystkich atrakcji.",
    "aboutUsPage.teamSupportName": "Obsługa Klienta",
    "aboutUsPage.teamSupportRole": "Konsultanci eventowi",
    "aboutUsPage.teamSupportDesc":
      "Pomożemy Ci w wyborze idealnych atrakcji i zaplanowaniu całego eventu.",
    "aboutUsPage.certsTitle": "Certyfikaty i Jakość",
    "aboutUsPage.certsDescription":
      "Bezpieczeństwo i jakość to podstawa naszej działalności. Wszystkie nasze atrakcje są regularnie kontrolowane i posiadają wymagane certyfikaty.",
    "aboutUsPage.certInsurance": "Ubezpieczenie OC",
    "aboutUsPage.certInsuranceDesc":
      "Pełne pokrycie odpowiedzialności cywilnej",
    "aboutUsPage.certEquipment": "Certyfikaty sprzętu",
    "aboutUsPage.certEquipmentDesc":
      "Wszystkie atrakcje posiadają wymagane certyfikaty",
    "aboutUsPage.certReviews": "Przeglądy techniczne",
    "aboutUsPage.certReviewsDesc": "Regularne kontrole bezpieczeństwa sprzętu",
    "aboutUsPage.certTraining": "Szkolenia zespołu",
    "aboutUsPage.certTrainingDesc":
      "Ciągłe podnoszenie kwalifikacji pracowników",
    "aboutUsPage.whyChooseUsTitle": "Dlaczego Klienci Nas Wybierają?",
    "aboutUsPage.whyChooseExperience": "Doświadczenie",
    "aboutUsPage.whyChooseExperienceDesc":
      "11 lat na rynku i setki udanych eventów",
    "aboutUsPage.whyChooseSafety": "Bezpieczeństwo",
    "aboutUsPage.whyChooseSafetyDesc":
      "Pełne ubezpieczenie i certyfikowany sprzęt",
    "aboutUsPage.whyChooseProfessionalism": "Profesjonalizm",
    "aboutUsPage.whyChooseProfessionalismDesc":
      "Punktualna dostawa i profesjonalna obsługa",
    "aboutUsPage.whyChooseIndividual": "Indywidualne podejście",
    "aboutUsPage.whyChooseIndividualDesc":
      "Każdy event traktujemy jako wyjątkowy",
    "offerPage.heroTitle": "Nasza Oferta Atrakcji Eventowych",
    "offerPage.heroDescription":
      "Odkryj pełną gamę profesjonalnych atrakcji i usług eventowych. Od namiotów imprezowych po kompleksową obsługę wydarzeń.",
    "offerPage.badgeLocation": "Radom i okolice (100 km)",
    "offerPage.filterLabel": "Kategorie:",
    "offerPage.allAttractionsCount": "Wszystkie atrakcje ({count})",
    "offerPage.categoryAttractionsCount": "{categoryName} ({count})",
    "offerPage.noAttractionsTitle": "Brak atrakcji w tej kategorii",
    "offerPage.noAttractionsDescription":
      "Wybierz inną kategorię lub skontaktuj się z nami w sprawie indywidualnych rozwiązań.",
    "offerPage.sectionTentsTitle": "🏕️ Namioty Imprezowe",
    "offerPage.sectionTentsDescription":
      "Profesjonalne namioty w różnych rozmiarach, idealne na wesela, urodziny i eventy firmowe. Oferujemy pełny serwis montażu i demontażu z możliwością dodania podłogi i oświetlenia.",
    "offerPage.sectionTablesChairsTitle": "🪑 Stoły, Krzesła i Obrusy",
    "offerPage.sectionTablesChairsDescription":
      "Kompleksowe wyposażenie stołów, krzeseł, obrusów, trawy i oświetlenia na Twoją imprezę.",
    "offerPage.sectionInflatablesTitle": "🏰 Dmuchane Atrakcje",
    "offerPage.sectionInflatablesDescription":
      "Bezpieczne i certyfikowane dmuchańce dla dzieci. Zjeżdżalnie, zamki z profesjonalną obsługą i ubezpieczeniem OC.",
    "offerPage.sectionEquipmentTitle": "🍭 Sprzęt Cukierniczy",
    "offerPage.sectionEquipmentDescription":
      "Maszyny do waty cukrowej, popcornu i elegancka fontanna czekoladowa. Wszystko z profesjonalną obsługą i świeżymi produktami.",
    "offerPage.servicesIncludeTitle": "Co zawierają nasze usługi?",
    "offerPage.serviceTransport": "Transport i montaż",
    "offerPage.serviceTransportDesc": "Pełny serwis dostawy i ustawienia",
    "offerPage.serviceProfessional": "Profesjonalna obsługa",
    "offerPage.serviceProfessionalDesc": "Doświadczony personel podczas eventu",
    "offerPage.serviceInsurance": "Ubezpieczenie OC",
    "offerPage.serviceInsuranceDesc": "Pełne pokrycie ubezpieczeniowe",
    "offerPage.serviceCertified": "Certyfikowany sprzęt",
    "offerPage.serviceCertifiedDesc": "Bezpieczne i sprawne urządzenia",
    "offerPage.serviceFlexible": "Elastyczne terminy",
    "offerPage.serviceFlexibleDesc": "Dostosowane do Twoich potrzeb",
    "offerPage.serviceConsultations": "Konsultacje",
    "offerPage.serviceConsultationsDesc": "Pomoc w planowaniu eventu",
    "offerPage.sectionDescriptionTitle": "Opis Atrakcji",
    "pricingPage.title": "Cennik",
    "modal.pricingIncludes":
      "Cena zawiera transport, montaż i obsługę w promieniu 100 km od Radomia.",
    "modal.featuresTitle": "Główne Cechy",
    "modal.pricingDetails": "Szczegóły Cennika",
    "modal.specificationsTitle": "Specyfikacja Techniczna",
    "galleryPage.title": "Galeria",
    "modal.ctaTitle": "Zainteresowany/a?",
    "modal.ctaDescription":
      "Skontaktuj się z nami już dziś, aby sprawdzić dostępność i otrzymać indywidualną wycenę.",
    "contact.phoneValue": "+48531890827",
    "modal.freeWithTent":
      "* Przy wynajmie namiotu lub indywidualnej wycenie pakietu",
    "seo.homeTitle": "'SŁODKOLANDIA wita:' - Event Attraction Rental Radom",
    "seo.homeDescription":
      "Professional rental of party tents, inflatables, cotton candy, and popcorn in Radom and surroundings. Organize an unforgettable party!",
    "seo.offerTitle": "Offer - Event Attraction Rental | 'SŁODKOLANDIA wita:'",
    "seo.offerDescription":
      "Discover our full range of event attractions: party tents, tables, chairs, inflatables, cotton candy, popcorn, chocolate fountains. Professional rental in Radom.",
    "seo.galleryTitle":
      "Photo Gallery - See Our Attractions in Action | 'SŁODKOLANDIA wita:'",
    "seo.galleryDescription":
      "View the photo gallery from our event productions. Party tents, tables, chairs, inflatables, cotton candy, popcorn, and chocolate fountains in action.",
    "seo.pricingTitle":
      "Pricing for Event Attraction Rental | 'SŁODKOLANDIA wita:' Radom",
    "seo.pricingDescription":
      "Check current rental prices for party tents, tables, chairs, inflatables, and catering equipment. Promotional packages and individual quotes.",
    "seo.contactTitle":
      "Contact - Event Attraction Rental Radom | 'SŁODKOLANDIA wita:'",
    "seo.contactDescription":
      "Contact us today! Phone: +48 531 890 827. Professional event attraction rental in Radom and surroundings.",
    "seo.aboutUsTitle":
      "About Us - 'SŁODKOLANDIA wita:' | Professional Event Attraction Rental Radom",
    "seo.aboutUsDescription":
      "Learn our history, values, and experience. 'SŁODKOLANDIA wita:' is a passion for creating unforgettable events in Radom and surroundings.",
    "attractionsData.namioty-imprezowe.name": "Namioty Imprezowe",
    "attractionsData.namioty-imprezowe.shortDescription":
      "Profesjonalne namioty imprezowe w różnych rozmiarach. Idealne na wesela, urodziny i eventy firmowe.",
    "attractionsData.namioty-imprezowe.description":
      "Profesjonalne namioty imprezowe w różnych rozmiarach, idealne na wesela, urodziny, eventy firmowe i inne okazje. Nasze namioty są wykonane z wysokiej jakości materiałów, odpornych na warunki atmosferyczne. Zapewniamy pełny serwis montażu i demontażu.",
    "attractionsData.stoly-krzesla-obrusy.name": "Stoły, Krzesła i Obrusy",
    "attractionsData.stoly-krzesla-obrusy.shortDescription":
      "Kompleksowe wyposażenie stołów, krzeseł, obrusów, trawy i oświetlenia na Twoją imprezę.",
    "attractionsData.stoly-krzesla-obrusy.description":
      "Oferujemy wynajem solidnych stołów bankietowych, wygodnych krzeseł oraz eleganckich obrusów, idealnych do każdego rodzaju namiotu i okazji. Dodatkowo, zapewniamy dekoracyjną trawę oraz oświetlenie nocne, aby stworzyć niepowtarzalny klimat.",
    "attractionsData.dmuchane-atrakcje.name": "Dmuchane Atrakcje",
    "attractionsData.dmuchane-atrakcje.shortDescription":
      "Zjeżdżalnie, zamki dmuchane. Gwarantowana radość dla dzieci w każdym wieku!",
    "attractionsData.dmuchane-atrakcje.description":
      "Kolorowe zjeżdżalnie, zamki dmuchane dla dzieci. Nasze atrakcje są bezpieczne, regularnie serwisowane i posiadają wszystkie wymagane certyfikaty. Gwarantujemy radość i bezpieczną zabawę dla dzieci w każdym wieku.",
    "attractionsData.wata-cukrowa.name": "Wata Cukrowa",
    "attractionsData.wata-cukrowa.shortDescription":
      "Profesjonalne maszyny do waty cukrowej. Słodka atrakcja dla Gości!",
    "attractionsData.wata-cukrowa.description":
      "Profesjonalne maszyny do waty cukrowej z kolorowymi smakami i aromatami. Nasza wata cukrowa to nie tylko słodka przekąska, ale także atrakcja wizualna, która zachwyci Gości w każdym wieku. Oferujemy różne smaki i kolory.",
    "attractionsData.popcorn.name": "Popcorn",
    "attractionsData.popcorn.shortDescription":
      "Maszyny do popcornu. Świeży, aromatyczny popcorn na Twoim evencie.",
    "attractionsData.popcorn.description":
      "Maszyny do popcornu, które dodają wyjątkowego charakteru każdemu eventowi. Świeży, aromatyczny popcorn przygotowywany na żywo podczas imprezy. Dostępne różne smaki - słony, słodki, karmelowy.",
    "attractionsData.fontanna-czekoladowa.name": "Fontanna Czekoladowa",
    "attractionsData.fontanna-czekoladowa.shortDescription":
      "Elegancka fontanna czekoladowa z dodatkami. Wykwintna atrakcja dla prawdziwych smakoszy.",
    "attractionsData.fontanna-czekoladowa.description":
      "Elegancka fontanna czekoladowa z różnymi rodzajami czekolady - mleczna, gorzka, biała. W zestawie świeże owoce, ciasteczka i inne dodatki do maczania. Idealne na wesela, bankiety i eleganckie przyjęcia.",
    "attractionsData.kompleksowa-obsluga.name": "Kompleksowa Obsługa Eventów",
    "attractionsData.kompleksowa-obsluga.shortDescription":
      "Pełna organizacja eventów z naszym doświadczonym zespołem.",
    "attractionsData.kompleksowa-obsluga.description":
      "Pełna organizacja eventów z naszym doświadczonym zespołem. Od planowania po realizację.",
    "feature.variousSizes": "Różne rozmiary dostępne",
    "feature.weatherResistant": "Odporne na warunki atmosferyczne",
    "feature.professionalSetup": "Profesjonalny montaż i demontaż",
    "feature.optionalFloor": "Możliwość dodania podłogi",
    "feature.ledLighting": "Oświetlenie LED",
    "feature.weddingDecorations": "Dekoracje ślubne i eventowe",
    "feature.tablesFor6": "Stoły dla 6-8 osób",
    "feature.comfortableChairs": "Wygodne krzesła bankietowe",
    "feature.elegantTablecloths": "Eleganckie obrusy",
    "feature.decorativeGrass": "Sztuczna trawa dekoracyjna",
    "feature.nightLighting": "Oświetlenie nocne (girlandy świetlne)",
    "feature.variousConfigurations": "Możliwość różnych konfiguracji",
    "feature.certifiedSafe": "Certyfikowane i bezpieczne",
    "feature.variousThemes": "Różne motywy i rozmiary",
    "feature.eventSupport": "Obsługa podczas eventu",
    "feature.liabilityInsurance": "Ubezpieczenie OC",
    "feature.generatorIncluded": "Agregat prądotwórczy w zestawie",
    "feature.protectiveMats": "Maty ochronne",
    "feature.variousFlavorsColors": "Wata cukrowa w kolorze białym",
    "feature.professionalService": "Profesjonalna obsługa",
    "feature.hygienicPackaging": "Ekologiczne, jednorazowe patyczki drewniane",
    "feature.visualAttraction": "Atrakcja wizualna",
    "feature.fastProduction": "Szybka produkcja",
    "feature.ecoSugars": "Ekologiczne cukry",
    "feature.popcornMachines": "Maszyny do popcornu",
    "feature.freshPopcornLive": "Świeży popcorn na żywo",
    "feature.variousFlavors": "Różne smaki dostępne",
    "feature.attractivePackaging": "Atrakcyjne opakowania",
    "feature.hygieneQuality": "Higiena i jakość",
    "feature.variousChocolateTypes": "Różne rodzaje czekolady",
    "feature.freshFruitIncluded": "Świeże owoce w zestawie",
    "feature.elegantPresentation": "Elegancka prezentacja",
    "feature.hygieneSafety": "Higiena i bezpieczeństwo",
    "feature.toppings": "Dodatki do maczania",
    "feature.consultationPlanning": "Konsultacja i planowanie",
    "feature.spaceDesign": "Projekt aranżacji przestrzeni",
    "feature.deliveryCoordination": "Koordynacja dostaw",
    "feature.comprehensiveInsurance": "Ubezpieczenie kompleksowe",
    "specification.label.sizes": "Rozmiary",
    "specification.label.material": "Materiał",
    "specification.label.height": "Wysokość",
    "specification.label.assemblyTime": "Montaż",
    "specification.label.capacity": "Pojemność",
    "specification.label.tableRentalItem": "Wynajem stołu (180x75cm)",
    "specification.value.tableRentalDesc": "Solidny stół bankietowy.",
    "specification.value.tableRentalPrice": "od 25 zł/szt.",
    "specification.label.chairRentalItem": "Wynajem krzesła",
    "specification.value.chairRentalDesc": "Wygodne krzesło bankietowe.",
    "specification.value.chairRentalPrice": "od 10 zł/szt.",
    "specification.label.tableclothRentalItem": "Wynajem obrusa",
    "specification.value.tableclothRentalDesc": "Elegancki biały obrus.",
    "specification.value.tableclothRentalPrice": "od 20 zł/szt.",
    "specification.label.grassRentalItem": "Trawa dekoracyjna (rolka)",
    "specification.value.grassRentalDesc": "Dekoracyjna sztuczna trawa.",
    "specification.value.grassRentalFreeItem": "Gratis*",
    "specification.label.lightingRentalItem": "Oświetlenie nocne (girlandy)",
    "specification.value.lightingRentalDesc": "Girlandy świetlne.",
    "specification.value.lightingRentalFreeItem": "Gratis*",
    "specification.label.age": "Wiek dzieci",
    "specification.label.dimensions": "Wymiary",
    "specification.label.power": "Zasilanie",
    "specification.label.flavors": "Smaki",
    "specification.label.colors": "Kolory",
    "specification.label.efficiency": "Wydajność",
    "specification.label.operator": "Obsługa",
    "specification.label.machineType": "Typ maszyny",
    "specification.label.packaging": "Opakowania",
    "specification.label.chocolateTypes": "Rodzaje czekolady",
    "specification.label.fountainHeight": "Wysokość fontanny",
    "specification.label.chocolateCapacity": "Pojemność",
    "specification.label.toppings": "Dodatki",
    "specification.label.waiter": "Kelner",
    "specification.label.experience": "Doświadczenie",
    "specification.label.team": "Zespół",
    "specification.label.area": "Obszar",
    "specification.label.eventTypes": "Rodzaje eventów",
    "specification.label.realizationTime": "Czas realizacji",
    "specification.value.assemblyTime24": "2-4 godziny",
    "specification.value.capacity50200": "50-200 osób",
    "specification.value.capacity815children": "8-15 dzieci jednocześnie",
    "specification.value.flavorsCottonCandy":
      "Truskawka, wanilia, malina, jabłko",
    "specification.value.colorsCottonCandy":
      "Różowy, niebieski, żółty, zielony",
    "specification.value.efficiency100150Portions": "100-150 porcji/godzinę",
    "specification.value.operatorIncluded": "Operator w zestawie",
    "specification.value.flavorsPopcorn": "Słony, słodki, karmelowy, serowy",
    "specification.value.efficiency200Portions": "200 porcji/godzinę",
    "specification.value.machineTypePopcorn": "Do popcornu",
    "specification.value.packagingPaper": "Papierowe torby i pudełka",
    "specification.value.chocolateTypesFull": "Mleczna, gorzka, biała",
    "specification.value.fountainHeightCm": "60-80 cm",
    "specification.value.chocolateCapacityKg": "3-5 kg czekolady",
    "specification.value.toppingsFull": "Owoce, ciasteczka, marshmallows",
    "specification.value.waiterIncluded":
      "Profesjonalna obsługa fontanny czekoladowej",
    "specification.value.experienceYears": "Ponad 11 lat",
    "specification.value.teamProfessional": "Profesjonalni organizatorzy",
    "specification.value.areaKm": "Radom i okolice 100 km",
    "specification.value.eventTypesFull": "Wesela, urodziny, eventy firmowe",
    "specification.value.realizationTimeHours": "2-8 godzin",
  },
  en: {
    "nav.home": "Home",
    "nav.about": "About Us",
    "nav.offer": "Offer",
    "nav.photo": "Photos",
    "nav.pricing": "Pricing",
    "nav.contact": "Contact",
    "nav.allAttractions": "All Attractions",
    "nav.tents": "Party Tents",
    "nav.tablesChairs": "Tables & Chairs",
    "nav.inflatables": "Inflatables",
    "nav.popcorn": "Popcorn",
    "nav.cottonCandy": "Cotton Candy",
    "nav.chocolateFountain": "Chocolate Fountain",
    "nav.allPhotos": "All Photos",
    "nav.photoTents": "Tents",
    "nav.photoTablesChairs": "Tables & Chairs",
    "nav.photoInflatables": "Inflatables",
    "nav.photoCottonCandy": "Cotton Candy",
    "nav.photoPopcorn": "Popcorn",
    "nav.photoFountains": "Chocolate Fountains",
    "nav.review": "Add Review",
    "hero.title": "SŁODKOLANDIA wita:",
    "hero.subtitle": "Unforgettable Attractions for Your Event!",
    "hero.description":
      "We guarantee great fun and professional service at every event!",
    "hero.seeOffer": "See our offer",
    "hero.askDate": "Ask about availability",
    "services.title": "Our Main Attractions",
    "services.description":
      "We offer comprehensive rental of event equipment and attractions that will make your party unforgettable",
    "services.seeAll": "See all attractions",
    "category.namioty": "Tents",
    "category.wyposazenie": "Equipment",
    "category.dmuchance": "Inflatables",
    "category.cukiernicze": "Confectionery",
    "category.uslugi": "Services",
    "whyUs.title": "Why 'SŁODKOLANDIA wita:'?",
    "whyUs.description":
      "We combine passion for creating unforgettable moments with a professional approach to every event",
    "whyUs.experience": "Experience",
    "whyUs.experienceDesc":
      "Years of experience in organizing events of various scales",
    "whyUs.safety": "Safety",
    "whyUs.safetyDesc":
      "Certified equipment and full insurance for every attraction",
    "whyUs.punctuality": "Punctuality",
    "whyUs.punctualityDesc":
      "Always on time - we meet delivery and assembly deadlines",
    "whyUs.individual": "Individual Approach",
    "whyUs.individualDesc": "Every event is unique - we adapt to your needs",
    "cta.mainTitle": "Let's organize your dream event together!",
    "cta.mainDescription":
      "Contact us today and check availability for your date. We guarantee professional service and unforgettable experiences!",
    "cta.contactForm": "Contact Form",
    "cta.secondaryTitle": "Ready for an unforgettable party?",
    "cta.secondaryDescription": "Contact us today and book your date!",
    "cta.callNow": "Call now",
    "cta.askForDate": "Ask for date",
    "home.stats.eventsOrganized": "Events organized",
    "home.stats.happyClientsMonthly": "Satisfied clients monthly",
    "home.stats.yearsExperience": "years of experience",
    "home.stats.serviceRadius": "service radius",
    "footer.companyName": "'SŁODKOLANDIA wita:'",
    "footer.companyDescription":
      "Professional rental of event attractions in Radom and surroundings. We create unforgettable moments for your guests!",
    "footer.quickLinks": "Quick Links",
    "footer.servicesTitle": "Our Services",
    "footer.serviceTents": "Party Tents",
    "footer.serviceInflatables": "Inflatables",
    "footer.serviceCottonCandy": "Cotton Candy",
    "footer.servicePopcorn": "Popcorn Machines",
    "footer.serviceFountains": "Chocolate Fountains",
    "footer.serviceComprehensive": "Comprehensive Service",
    "footer.contactTitle": "Contact",
    "footer.address": "Radom and surroundings",
    "footer.addressDetail": "(100km radius)",
    "footer.copyright": "© {year} SŁODKOLANDIA wita:. All rights reserved.",
    "footer.privacyPolicy": "Privacy Policy",
    "footer.terms": "Terms of Service",
    "attractionCard.priceFrom": "from ",
    "attractionCard.details": "Details",
    "currencyUnit.zł": "PLN ",
    "pricing.perPeriod.dzień": " day",
    "pricing.perPeriod.impreza": " party",
    "pricing.perPeriod.event": " event",
    "pricing.perPeriod.sztuka/dzień": " pc./day",
    "pricing.perPeriod.od": "from",
    "pricing.perPeriod.gratis": "Free*",
    "cookieConsent.message":
      "This site uses cookies to ensure the best quality of service. By continuing to browse, you agree to their use.",
    "cookieConsent.accept": "Accept",
    "cookieConsent.reject": "Reject",
    "inquiryForm.title": "Inquiry Form",
    "inquiryForm.nameLabel": "Name and surname *",
    "inquiryForm.namePlaceholder": "Your name and surname",
    "inquiryForm.nameError":
      "Name and surname must be at least 2 characters long",
    "inquiryForm.emailLabel": "Email *",
    "inquiryForm.emailPlaceholder": "your@email.com",
    "inquiryForm.emailError": "Invalid email address",
    "inquiryForm.phoneLabel": "Phone",
    "inquiryForm.phonePlaceholder": "+48 123 456 789",
    "inquiryForm.eventDateLabel": "Event date",
    "inquiryForm.attractionsLabel": "Interesting attractions",
    "inquiryForm.messageLabel": "Message *",
    "inquiryForm.messagePlaceholder":
      "Describe your event, number of guests, additional requirements...",
    "inquiryForm.messageError": "Message must be at least 10 characters long",
    "inquiryForm.submitButton": "Send Inquiry",
    "inquiryForm.submittingButton": "Sending...",
    "inquiryForm.successTitle": "Inquiry sent!",
    "inquiryForm.successDescription":
      "Thank you for your contact. We will reply within 24 hours.",
    "inquiryForm.errorTitle": "Sending error",
    "inquiryForm.errorDescription":
      "Sorry, there was a problem. Please try again or call us.",
    "inquiryForm.attractionOptionTents": "Party Tents",
    "inquiryForm.attractionOptionInflatables": "Inflatable Attractions",
    "inquiryForm.attractionOptionCottonCandy": "Cotton Candy",
    "inquiryForm.attractionOptionPopcorn": "Popcorn Machines",
    "inquiryForm.attractionOptionFountains": "Chocolate Fountains",
    "inquiryForm.attractionOptionComprehensive": "Comprehensive Service",
    "pricingPage.heroTitle": "Our Service Pricing",
    "pricingPage.heroDescription":
      "We offer competitive prices and individual quotes tailored to your budget and needs. All prices include transport within a 15km radius of Radom.",
    "pricingPage.badgeTransportFree15km": "🚚 Free transport up to 100 km",
    "pricingPage.badgeSetupIncluded": "🛠️ Setup and dismantling included",
    "pricingPage.badgeInsuranceOC": "🛡️ Liability insurance",
    "pricingPage.packagesTitle": "Promotional Packages",
    "pricingPage.packagesDescription":
      "Save by renting attraction packages! The more you rent, the more you save.",
    "pricingPage.popularPackage": "Most Popular",
    "pricingPage.packageNormally": "Normally",
    "pricingPage.packageSave": "You save {amount} PLN",
    "pricingPage.packageIncludes": "Included in package:",
    "pricingPage.packageAsk": "Ask about package",
    "pricingPage.individualTitle": "Individual Pricing",
    "pricingPage.individualDescription":
      "Rental prices for individual attractions.",
    "pricingPage.categoryAll": "All",
    "pricingPage.categoryGastro": "Confectionery & Equipment",
    "pricingPage.itemizedPricingLabel": "Itemized Pricing",
    "pricingPage.additionalServicesTitle": "Additional Services",
    "pricingPage.discountsTitle": "Discounts and Promotions",
    "pricingPage.discountPackages": "Event Packages",
    "pricingPage.discountPackagesDesc":
      "Rent 3 or more attractions and get a 15% discount!",
    "pricingPage.discountLongTerm": "Long-term Rental",
    "pricingPage.discountLongTermDesc":
      "Events longer than 2 days - special prices!",
    "pricingPage.discountLoyal": "Loyal Customers",
    "pricingPage.discountLoyalDesc": "Loyalty program for regular customers",
    "pricingPage.askForDiscount": "Ask for Discount",
    "pricingPage.importantInfoTitle": "Important Information",
    "pricingPage.rentalConditionsTitle": "📋 Rental Conditions",
    "pricingPage.rentalCondition1":
      "• Reservation requires a 30% deposit of the order value",
    "pricingPage.rentalCondition2":
      "• Minimum rental period - 1 day (24 hours) for tents, other attractions for the duration of the party",
    "pricingPage.rentalCondition3":
      "• Cancellation possible up to 48h before the event",
    "pricingPage.rentalCondition4": "• Gross prices (VAT included)",
    "pricingPage.rentalCondition5":
      "• For events on public holidays - 20% surcharge",
    "pricingPage.transportSetupTitle": "🚚 Transport and Setup",
    "pricingPage.transportSetup1": "• Free transport up to 100 km from Radom",
    "pricingPage.transportSetup2":
      "• Setup and dismantling during standard hours (8:00 AM - 6:00 PM)",
    "pricingPage.transportSetup3":
      "• Setup time: 2-4 hours depending on the attraction",
    "pricingPage.transportSetup4": "• Access to 230V power supply required",
    "pricingPage.transportSetup5":
      "• For inflatables - flat grassy surface min. 10x10m",
    "pricingPage.packageChildName": "Kids Package",
    "pricingPage.packageChildDesc": "Perfect for a child's birthday",
    "pricingPage.packageChildItem1": "Bouncy castle",
    "pricingPage.packageChildItem2": "Cotton candy",
    "pricingPage.packageChildItem3": "Popcorn",
    "pricingPage.packageFamilyName": "Family Package",
    "pricingPage.packageFamilyDesc": "For larger family gatherings",
    "pricingPage.packageFamilyItem1": "Tent 6x12m",
    "pricingPage.packageFamilyItem2": "Inflatable slide",
    "pricingPage.packageFamilyItem3": "Cotton candy",
    "pricingPage.packageFamilyItem4": "Chocolate fountain",
    "pricingPage.packageEventName": "Event Package",
    "pricingPage.packageEventDesc": "Comprehensive service for larger events",
    "pricingPage.packageEventItem1": "Tent 10x20m",
    "pricingPage.packageEventItem2": "2x Inflatables",
    "pricingPage.packageEventItem3": "Cotton candy",
    "pricingPage.packageEventItem4": "Popcorn",
    "pricingPage.packageEventItem5": "Chocolate fountain",
    "pricingPage.packageEventItem6": "Service staff",
    "pricingPage.additionalServiceTransport15": "Transport (up to 15km)",
    "pricingPage.additionalServiceTransport30": "Transport (15-30km)",
    "pricingPage.additionalServiceTransportOver30": "Transport (over 30km)",
    "pricingPage.additionalServiceNightSetup": "Night-time setup",
    "pricingPage.additionalServiceExtendRental": "Extend rental (+1 day)",
    "pricingPage.additionalServiceOperator": "Additional operator",
    "pricingPage.unitPriceDefault": "PLN",
    "pricingPage.unitPriceKm": "PLN/km",
    "pricingPage.unitPricePercent": "% of base price",
    "galleryPage.heroTitle": "See Our Attractions in Action!",
    "galleryPage.heroDescription":
      "Photo gallery from our event productions. Discover how our attractions look at real parties and events in Radom and the surrounding area.",
    "galleryPage.badgeEventsDone": "Over 500 events completed",
    "galleryPage.filterLabel": "Categories:",
    "galleryPage.categoryAll": "All",
    "galleryPage.categoryTents": "Party Tents",
    "galleryPage.categoryTablesChairs": "Tables & Chairs",
    "galleryPage.categoryInflatables": "Inflatable Attractions",
    "galleryPage.categoryCottonCandy": "Cotton Candy",
    "galleryPage.categoryPopcorn": "Popcorn",
    "galleryPage.categoryFountains": "Chocolate Fountains",
    "galleryPage.categoryEventSetups": "Event Productions",
    "galleryPage.sectionTentsTitle": "🏕️ Party Tents",
    "galleryPage.sectionTentsDesc":
      "Professional tents in various configurations - from intimate parties to large corporate events.",
    "galleryPage.sectionTablesChairsTitle": "🪑 Tables, Chairs & Linens",
    "galleryPage.sectionTablesChairsDescription":
      "Comprehensive equipment of tables, chairs, tablecloths, and more for your event.",
    "galleryPage.sectionInflatablesTitle": "🏰 Inflatable Attractions",
    "galleryPage.sectionInflatablesDesc":
      "Safe fun for children - slides, bouncy castles, and playgrounds.",
    "galleryPage.sectionCottonCandyTitle": "🍭 Cotton Candy",
    "galleryPage.sectionCottonCandyDesc":
      "Colorful cotton candy in various flavors - a sweet attraction for guests of all ages.",
    "galleryPage.sectionPopcornTitle": "🍿 Popcorn",
    "galleryPage.sectionPopcornDesc":
      "Aromatic popcorn prepared live in machines.",
    "galleryPage.sectionFountainsTitle": "🍫 Chocolate Fountains",
    "galleryPage.sectionFountainsDesc":
      "Elegant chocolate fountains with toppings - an exquisite attraction for connoisseurs.",
    "galleryPage.sectionEventSetupsTitle": "🎉 Event Productions",
    "galleryPage.sectionEventSetupsDesc":
      "See what our comprehensive productions look like - from small parties to large events.",
    "galleryPage.currentCategoryInfo": "{count} photos in this category",
    "galleryPage.statsTitle": "Our experience in numbers",
    "galleryPage.statEvents": "Events completed",
    "galleryPage.statKids": "Happy children",
    "galleryPage.statAttractions": "Types of attractions",
    "galleryPage.statRadius": "Service radius",
    "contactPage.heroTitle": "Contact Us",
    "contactPage.heroDescription":
      "Let's organize your unforgettable party together! Contact us today and check availability for your date.",
    "contactPage.badgeQuickResponse": "⚡ Quick response",
    "contactPage.badgeFreeConsultation": "💬 Free consultation",
    "contactPage.badgeIndividualQuotes": "📋 Individual quotes",
    "contactPage.quickContactTitle":
      "Choose the Most Convenient Way to Contact Us",
    "contactPage.quickContactDescription":
      "We are available all week. We respond quickly to all inquiries!",
    "contactPage.phoneTitle": "Phone",
    "contactPage.phoneDescription": "Fastest contact",
    "contactPage.emailTitle": "Email",
    "contactPage.emailDescription": "Write to us",
    "contactPage.whatsappTitle": "WhatsApp",
    "contactPage.whatsappDescription": "Quick message",
    "contactPage.meetingTitle": "Meeting",
    "contactPage.meetingDescription": "Arrange a presentation",
    "contactPage.meetingDetails": "By prior contact",
    "contactPage.callToActionTitle": "Call us now!",
    "contactPage.callToActionDescription":
      "We will check date availability and prepare an individual quote",
    "contactPage.workingHoursTitle": "Working Hours",
    "contactPage.workingHoursNote":
      "Note: For urgent matters, we are also available outside working hours.",
    "contactPage.workingHoursMonFri": "Monday - Friday",
    "contactPage.workingHoursSat": "Saturday",
    "contactPage.workingHoursSun": "Sunday",
    "contactPage.workingHoursHoliday": "Public holidays",
    "contactPage.workingHoursMonFriTime": "8:00 AM - 6:00 PM",
    "contactPage.workingHoursSatTime": "9:00 AM - 6:00 PM",
    "contactPage.workingHoursSunTime": "10:00 AM - 6:00 PM",
    "contactPage.workingHoursHolidayTime": "By appointment",
    "contactPage.serviceAreaTitle": "Service Area",
    "contactPage.serviceAreaNote":
      "We also serve other cities! Contact us to arrange transport conditions.",
    "contactPage.serviceAreaRadom": "Radom",
    "contactPage.serviceAreaRadomDist": "0km",
    "contactPage.serviceAreaRadomNote": "Company headquarters",
    "contactPage.serviceAreaBialobrzegi": "Białobrzegi",
    "contactPage.serviceAreaBialobrzegiDist": "25km",
    "contactPage.serviceAreaBialobrzegiNote": "Free transport",
    "contactPage.serviceAreaSzydlowiec": "Szydłowiec",
    "contactPage.serviceAreaSzydlowiecDist": "30km",
    "contactPage.serviceAreaSzydlowiecNote": "Free transport",
    "contactPage.serviceAreaKozienice": "Kozienice",
    "contactPage.serviceAreaKozieniceDist": "35km",
    "contactPage.serviceAreaKozieniceNote": "Additional fee",
    "contactPage.serviceAreaOstrowiec": "Ostrowiec Św.",
    "contactPage.serviceAreaOstrowiecDist": "40km",
    "contactPage.serviceAreaOstrowiecNote": "Additional fee",
    "contactPage.serviceAreaSkarzysko": "Skarżysko-Kamienna",
    "contactPage.serviceAreaSkarzyskoDist": "45km",
    "contactPage.serviceAreaSkarzyskoNote": "Additional fee",
    "contactPage.additionalInfoTitle": "Additional Information",
    "contactPage.infoViewingTitle": "Equipment viewing",
    "contactPage.infoViewingDesc":
      "Possibility to view attractions before renting",
    "contactPage.infoFreeQuoteTitle": "Free quote",
    "contactPage.infoFreeQuoteDesc":
      "We will prepare a free offer tailored to your needs",
    "contactPage.infoConsultationsTitle": "Consultations",
    "contactPage.infoConsultationsDesc":
      "We will help in planning the entire event",
    "contactPage.infoOnlineBookingTitle": "Online booking",
    "contactPage.infoOnlineBookingDesc":
      "Possibility to book via form or phone",
    "contactPage.faqTitle": "Frequently Asked Questions",
    "contactPage.faqDescription":
      "Answers to questions we most often receive from our clients",
    "contactPage.faq1Question": "How early should I make a reservation?",
    "contactPage.faq1Answer":
      "We recommend booking at least 2 weeks before the planned event, especially during the summer season and holidays.",
    "contactPage.faq2Question": "Do prices include setup and transport?",
    "contactPage.faq2Answer":
      "Yes, all our prices include setup, dismantling, and transport within a 100 km radius of Radom. We charge an additional fee for longer distances.",
    "contactPage.faq3Question": "What if the weather is unfavorable?",
    "contactPage.faq3Answer":
      "Our tents are weather-resistant. Inflatables can be used in light rain, but not during a storm for safety reasons.",
    "contactPage.faq4Question": "Are the attractions insured?",
    "contactPage.faq4Answer":
      "Yes, all our attractions have full liability insurance. Additionally, we regularly conduct technical inspections of the equipment.",
    "contactPage.faq5Question": "What is the reservation process?",
    "contactPage.faq5Answer":
      "After contact, we prepare a quote, then we require a 30% deposit. The remaining amount can be settled upon equipment pickup.",
    "aboutUsPage.heroTitle": "About Our Company",
    "aboutUsPage.heroDescription":
      "We are a company with a passion for creating unforgettable moments. We specialize in renting event attractions that make every party unique.",
    "aboutUsPage.badgeFounded": "Radom and surroundings 100 km",
    "aboutUsPage.storyTitle": "Our Story",
    "aboutUsPage.storyPara1":
      "'SŁODKOLANDIA wita:' was created from a simple belief that every event deserves to be unforgettable. We started our business in 2014 with three inflatables and a great passion for organizing events.",
    "aboutUsPage.storyPara2":
      "Today, we are a recognizable brand in Radom and the surrounding areas, offering comprehensive rental of event attractions. Our experience includes corporate events, weddings, children's birthdays, city festivals, and many other occasions.",
    "aboutUsPage.storyPara3":
      "What sets us apart is our individual approach to each client and our constant concern for the safety and quality of our services.",
    "aboutUsPage.missionTitle": "🎯 Our Mission",
    "aboutUsPage.missionDescription":
      "We create unforgettable moments of joy and fun by providing the highest quality event attractions with full professional service.",
    "aboutUsPage.visionTitle": "🔮 Our Vision",
    "aboutUsPage.visionDescription":
      "To be the first choice in the region for people looking for professional event attractions and comprehensive event management.",
    "aboutUsPage.valuesTitle": "Our Values",
    "aboutUsPage.valuesDescription":
      "The values that guide our way of working and our approach to every client",
    "aboutUsPage.valuePassionTitle": "Passion",
    "aboutUsPage.valuePassionDesc":
      "We treat every event as a unique occasion. We put our heart into what we do.",
    "aboutUsPage.valueSafetyTitle": "Safety",
    "aboutUsPage.valueSafetyDesc":
      "The safety of our guests is a priority. All equipment is certified and insured.",
    "aboutUsPage.valueProfessionalismTitle": "Professionalism",
    "aboutUsPage.valueProfessionalismDesc":
      "Punctuality, reliability, and high-quality services are our hallmarks.",
    "aboutUsPage.valueQualityTitle": "Quality",
    "aboutUsPage.valueQualityDesc":
      "We use only proven, top-quality equipment from reputable manufacturers.",
    "aboutUsPage.achievementsTitle": "Our Achievements",
    "aboutUsPage.achievementsDescription":
      "Numbers that best describe our experience and commitment",
    "aboutUsPage.achievementEvents": "Events completed",
    "aboutUsPage.achievementExperience": "years of experience",
    "aboutUsPage.achievementAttractions": "types of attractions",
    "aboutUsPage.achievementRadius": "service radius",
    "aboutUsPage.achievementSatisfaction": "satisfied clients",
    "aboutUsPage.achievementAvailability": "phone availability",
    "aboutUsPage.teamTitle": "Our Team",
    "aboutUsPage.teamDescription":
      "A group of enthusiasts who ensure every event is perfect",
    "aboutUsPage.teamOwnerName": "Company Owner",
    "aboutUsPage.teamOwnerRole": "Founder and Project Manager",
    "aboutUsPage.teamOwnerDesc":
      "11 years of experience in the event industry. Passionate about creating unforgettable moments.",
    "aboutUsPage.teamAssemblyName": "Assembly Team",
    "aboutUsPage.teamAssemblyRole": "Assembly Specialists",
    "aboutUsPage.teamAssemblyDesc":
      "Experienced technicians ensuring quick and safe assembly of all attractions.",
    "aboutUsPage.teamSupportName": "Customer Support",
    "aboutUsPage.teamSupportRole": "Event Consultants",
    "aboutUsPage.teamSupportDesc":
      "We will help you choose the ideal attractions and plan the entire event.",
    "aboutUsPage.certsTitle": "Certificates and Quality",
    "aboutUsPage.certsDescription":
      "Safety and quality are the foundation of our business. All our attractions are regularly inspected and have the required certificates.",
    "aboutUsPage.certInsurance": "Liability Insurance",
    "aboutUsPage.certInsuranceDesc": "Full civil liability coverage",
    "aboutUsPage.certEquipment": "Equipment Certificates",
    "aboutUsPage.certEquipmentDesc":
      "All attractions have the required certificates",
    "aboutUsPage.certReviews": "Technical Inspections",
    "aboutUsPage.certReviewsDesc": "Regular safety checks of equipment",
    "aboutUsPage.certTraining": "Team Training",
    "aboutUsPage.certTrainingDesc":
      "Continuous improvement of employee qualifications",
    "aboutUsPage.whyChooseUsTitle": "Why Clients Choose Us?",
    "aboutUsPage.whyChooseExperience": "Experience",
    "aboutUsPage.whyChooseExperienceDesc":
      "11 years on the market and hundreds of successful events",
    "aboutUsPage.whyChooseSafety": "Safety",
    "aboutUsPage.whyChooseSafetyDesc": "Full insurance and certified equipment",
    "aboutUsPage.whyChooseProfessionalism": "Professionalism",
    "aboutUsPage.whyChooseProfessionalismDesc":
      "Punctual delivery and professional service",
    "aboutUsPage.whyChooseIndividual": "Individual Approach",
    "aboutUsPage.whyChooseIndividualDesc": "We treat every event as unique",
    "offerPage.heroTitle": "Our Event Attraction Offer",
    "offerPage.heroDescription":
      "Discover our full range of professional event attractions and services. From party tents to comprehensive event management.",
    "offerPage.badgeLocation": "Radom and surroundings (100 km)",
    "offerPage.filterLabel": "Categories:",
    "offerPage.allAttractionsCount": "All attractions ({count})",
    "offerPage.categoryAttractionsCount": "{categoryName} ({count})",
    "offerPage.noAttractionsTitle": "No attractions in this category",
    "offerPage.noAttractionsDescription":
      "Choose another category or contact us for individual solutions.",
    "offerPage.sectionTentsTitle": "🏕️ Party Tents",
    "offerPage.sectionTentsDescription":
      "Professional tents in various sizes, ideal for weddings, birthdays, and corporate events. We offer full assembly and dismantling service with options for flooring and lighting.",
    "offerPage.sectionTablesChairsTitle": "🪑 Tables, Chairs & Linens",
    "offerPage.sectionTablesChairsDescription":
      "Comprehensive equipment of tables, chairs, tablecloths, grass, and lighting for your event.",
    "offerPage.sectionInflatablesTitle": "🏰 Inflatable Attractions",
    "offerPage.sectionInflatablesDescription":
      "Safe and certified inflatables for children. Slides, castles, and playgrounds with professional service and liability insurance.",
    "offerPage.sectionEquipmentTitle": "🍭 Confectionery Equipment",
    "offerPage.sectionEquipmentDescription":
      "Cotton candy and popcorn machines, and elegant chocolate fountains. All with professional service and fresh products.",
    "offerPage.servicesIncludeTitle": "What do our services include?",
    "offerPage.serviceTransport": "Transport and assembly",
    "offerPage.serviceTransportDesc": "Full delivery and setup service",
    "offerPage.serviceProfessional": "Professional service",
    "offerPage.serviceProfessionalDesc": "Experienced staff during the event",
    "offerPage.serviceInsurance": "Liability insurance",
    "offerPage.serviceInsuranceDesc": "Full insurance coverage",
    "offerPage.serviceCertified": "Certified equipment",
    "offerPage.serviceCertifiedDesc": "Safe and functional devices",
    "offerPage.serviceFlexible": "Flexible dates",
    "offerPage.serviceFlexibleDesc": "Tailored to your needs",
    "offerPage.serviceConsultations": "Consultations",
    "offerPage.serviceConsultationsDesc": "Help in planning the event",
    "offerPage.sectionDescriptionTitle": "Attraction Description",
    "pricingPage.title": "Pricing",
    "modal.pricingIncludes":
      "Price includes transport, setup, and service within a 100 km radius of Radom.",
    "modal.featuresTitle": "Main Features",
    "modal.pricingDetails": "Pricing Details",
    "modal.specificationsTitle": "Technical Specifications",
    "galleryPage.title": "Gallery",
    "modal.ctaTitle": "Interested?",
    "modal.ctaDescription":
      "Contact us today to check availability and get an individual quote.",
    "contact.phoneValue": "+48531890827",
    "modal.freeWithTent": "* With tent rental or individual package quote",
    "seo.homeTitle": "'SŁODKOLANDIA wita:' - Event Attraction Rental Radom",
    "seo.homeDescription":
      "Professional rental of party tents, inflatables, cotton candy, and popcorn in Radom and surroundings. Organize an unforgettable party!",
    "seo.offerTitle": "Offer - Event Attraction Rental | 'SŁODKOLANDIA wita:'",
    "seo.offerDescription":
      "Discover our full range of event attractions: party tents, tables, chairs, inflatables, cotton candy, popcorn, chocolate fountains. Professional rental in Radom.",
    "seo.galleryTitle":
      "Photo Gallery - See Our Attractions in Action | 'SŁODKOLANDIA wita:'",
    "seo.galleryDescription":
      "View the photo gallery from our event productions. Party tents, tables, chairs, inflatables, cotton candy, popcorn, and chocolate fountains in action.",
    "seo.pricingTitle":
      "Pricing for Event Attraction Rental | 'SŁODKOLANDIA wita:' Radom",
    "seo.pricingDescription":
      "Check current rental prices for party tents, tables, chairs, inflatables, and catering equipment. Promotional packages and individual quotes.",
    "seo.contactTitle":
      "Contact - Event Attraction Rental Radom | 'SŁODKOLANDIA wita:'",
    "seo.contactDescription":
      "Contact us today! Phone: +48 531 890 827. Professional event attraction rental in Radom and surroundings.",
    "seo.aboutUsTitle":
      "About Us - 'SŁODKOLANDIA wita:' | Professional Event Attraction Rental Radom",
    "seo.aboutUsDescription":
      "Learn our history, values, and experience. 'SŁODKOLANDIA wita:' is a passion for creating unforgettable events in Radom and surroundings.",
    "attractionsData.namioty-imprezowe.name": "Party Tents",
    "attractionsData.namioty-imprezowe.shortDescription":
      "Professional party tents in various sizes. Perfect for weddings, birthdays, and corporate events.",
    "attractionsData.namioty-imprezowe.description":
      "Professional party tents in various sizes, ideal for weddings, birthdays, corporate events, and other occasions. Our tents are made of high-quality, weather-resistant materials. We provide full assembly and disassembly service.",
    "attractionsData.stoly-krzesla-obrusy.name": "Tables, Chairs & Linens",
    "attractionsData.stoly-krzesla-obrusy.shortDescription":
      "Comprehensive equipment of tables, chairs, tablecloths, grass, and lighting for your event.",
    "attractionsData.stoly-krzesla-obrusy.description":
      "We offer rental of sturdy banquet tables, comfortable chairs, and elegant tablecloths, perfect for any type of tent and occasion. Additionally, we provide decorative artificial grass and night lighting to create a unique atmosphere.",
    "attractionsData.dmuchane-atrakcje.name": "Inflatable Attractions",
    "attractionsData.dmuchane-atrakcje.shortDescription":
      "Slides, bouncy castles. Guaranteed fun for children of all ages!",
    "attractionsData.dmuchane-atrakcje.description":
      "Colorful slides, bouncy castles for children. Our attractions are safe, regularly serviced, and have all required certificates. We guarantee joy and safe fun for children of all ages.",
    "attractionsData.wata-cukrowa.name": "Cotton Candy",
    "attractionsData.wata-cukrowa.shortDescription":
      "Professional cotton candy machines. A sweet treat for guests!",
    "attractionsData.wata-cukrowa.description":
      "Professional cotton candy machines with colorful flavors and aromas. Our cotton candy is not only a sweet snack but also a visual attraction that will delight guests of all ages. We offer various flavors and colors.",
    "attractionsData.popcorn.name": "Popcorn",
    "attractionsData.popcorn.shortDescription":
      "Popcorn machines. Fresh, aromatic popcorn at your event.",
    "attractionsData.popcorn.description":
      "Popcorn machines that add a unique character to any event. Fresh, aromatic popcorn prepared live during the party. Various flavors available - salty, sweet, caramel.",
    "attractionsData.fontanna-czekoladowa.name": "Chocolate Fountain",
    "attractionsData.fontanna-czekoladowa.shortDescription":
      "Elegant chocolate fountain with toppings. An exquisite attraction for true connoisseurs.",
    "attractionsData.fontanna-czekoladowa.description":
      "Elegant chocolate fountain with various types of chocolate - milk, dark, white. Includes fresh fruits, cookies, and other dipping extras. Perfect for weddings, banquets, and elegant parties.",
    "attractionsData.kompleksowa-obsluga.name": "Comprehensive Event Service",
    "attractionsData.kompleksowa-obsluga.shortDescription":
      "Full event organization with our experienced team.",
    "attractionsData.kompleksowa-obsluga.description":
      "Full event organization with our experienced team. From planning to execution.",
    "feature.variousSizes": "Various sizes available",
    "feature.weatherResistant": "Weather resistant",
    "feature.professionalSetup": "Professional assembly & disassembly",
    "feature.optionalFloor": "Optional flooring",
    "feature.ledLighting": "LED lighting",
    "feature.weddingDecorations": "Wedding & event decorations",
    "feature.tablesFor6": "Tables for 6-8 people",
    "feature.comfortableChairs": "Comfortable banquet chairs",
    "feature.elegantTablecloths": "Elegant tablecloths",
    "feature.decorativeGrass": "Decorative artificial grass",
    "feature.nightLighting": "Night lighting (string lights)",
    "feature.variousConfigurations": "Various configurations available",
    "feature.certifiedSafe": "Certified and safe",
    "feature.variousThemes": "Various themes and sizes",
    "feature.eventSupport": "On-site event support",
    "feature.liabilityInsurance": "Liability insurance (OC)",
    "feature.generatorIncluded": "Power generator included",
    "feature.protectiveMats": "Protective mats",
    "feature.variousFlavorsColors": "Cotton candy in various flavors & colors",
    "feature.professionalService": "Professional service",
    "feature.hygienicPackaging": "Hygienic packaging",
    "feature.visualAttraction": "Visual attraction",
    "feature.fastProduction": "Fast production",
    "feature.ecoSugars": "Ecological sugars",
    "feature.popcornMachines": "Popcorn machines",
    "feature.freshPopcornLive": "Fresh popcorn made live",
    "feature.variousFlavors": "Various flavors available",
    "feature.attractivePackaging": "Attractive packaging",
    "feature.hygieneQuality": "Hygiene and quality",
    "feature.variousChocolateTypes": "Various types of chocolate",
    "feature.freshFruitIncluded": "Fresh fruit included",
    "feature.elegantPresentation": "Elegant presentation",
    "feature.hygieneSafety": "Hygiene and safety",
    "feature.toppings": "Dipping extras",
    "feature.consultationPlanning": "Consultation & planning",
    "feature.spaceDesign": "Space arrangement design",
    "feature.deliveryCoordination": "Delivery coordination",
    "feature.comprehensiveInsurance": "Comprehensive insurance",
    "specification.label.sizes": "Sizes",
    "specification.label.material": "Material",
    "specification.label.height": "Height",
    "specification.label.assemblyTime": "Assembly",
    "specification.label.capacity": "Capacity",
    "specification.label.tableRentalItem": "Table rental (180x75cm)",
    "specification.value.tableRentalDesc": "Sturdy banquet table.",
    "specification.value.tableRentalPrice": "from PLN 25/pc.",
    "specification.label.chairRentalItem": "Chair rental",
    "specification.value.chairRentalDesc": "Comfortable banquet chair.",
    "specification.value.chairRentalPrice": "from PLN 10/pc.",
    "specification.label.tableclothRentalItem": "Tablecloth rental",
    "specification.value.tableclothRentalDesc": "Elegant white tablecloth.",
    "specification.value.tableclothRentalPrice": "from PLN 20/pc.",
    "specification.label.grassRentalItem": "Grass rental (roll)",
    "specification.value.grassRentalDesc": "Decorative artificial grass.",
    "specification.value.grassRentalFreeItem": "Free*",
    "specification.label.lightingRentalItem": "Lighting rental (string lights)",
    "specification.value.lightingRentalDesc": "String lights for atmosphere.",
    "specification.value.lightingRentalFreeItem": "Free*",
    "specification.label.age": "Children's Age",
    "specification.label.dimensions": "Dimensions",
    "specification.label.power": "Power Supply",
    "specification.label.flavors": "Flavors",
    "specification.label.colors": "Colors",
    "specification.label.efficiency": "Efficiency",
    "specification.label.operator": "Operator",
    "specification.label.machineType": "Machine Type",
    "specification.label.packaging": "Packaging",
    "specification.label.chocolateTypes": "Chocolate Types",
    "specification.label.fountainHeight": "Fountain Height",
    "specification.label.chocolateCapacity": "Capacity",
    "specification.label.toppings": "Extras",
    "specification.label.waiter": "Waiter",
    "specification.label.experience": "Experience",
    "specification.label.team": "Team",
    "specification.label.area": "Service Area",
    "specification.label.eventTypes": "Event Types",
    "specification.label.realizationTime": "Realization Time",
    "specification.value.assemblyTime24": "2-4 hours",
    "specification.value.capacity50200": "50-200 people",
    "specification.value.capacity815children": "8-15 children simultaneously",
    "specification.value.flavorsCottonCandy":
      "Strawberry, vanilla, raspberry, apple",
    "specification.value.colorsCottonCandy": "Pink, blue, yellow, green",
    "specification.value.efficiency100150Portions": "100-150 servings/hour",
    "specification.value.operatorIncluded": "Operator included",
    "specification.value.flavorsPopcorn": "Salty, sweet, caramel, cheese",
    "specification.value.efficiency200Portions": "200 servings/hour",
    "specification.value.machineTypePopcorn": "Popcorn machine",
    "specification.value.packagingPaper": "Paper bags and boxes",
    "specification.value.chocolateTypesFull": "Milk, dark, white",
    "specification.value.fountainHeightCm": "60-80 cm",
    "specification.value.chocolateCapacityKg": "3-5 kg of chocolate",
    "specification.value.toppingsFull": "Fruits, cookies, marshmallows",
    "specification.value.waiterIncluded":
      "Professional chocolate fountain service",
    "specification.value.experienceYears": "Over 11 years",
    "specification.value.teamProfessional": "Professional organizers",
    "specification.value.areaKm": "Radom and 100 km surroundings",
    "specification.value.eventTypesFull":
      "Weddings, birthdays, corporate events",
    "specification.value.realizationTimeHours": "2-8 hours",
  },
};

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({
  children,
}) => {
  const [language, setLanguageState] = useState<Language>(defaultLang);

  const setLanguage = (
    newLang: Language,
    options?: { preventNavigation?: boolean }
  ) => {
    setLanguageState(newLang);
  };

  const t = (
    key: string,
    replacements?: Record<string, string | number>
  ): string => {
    let translation = translations[language]?.[key] || key;
    if (replacements && typeof translation === "string") {
      Object.keys(replacements).forEach((placeholder) => {
        const regex = new RegExp(`{${placeholder}}`, "g");
        translation = translation.replace(
          regex,
          String(replacements[placeholder])
        );
      });
    }
    return translation || key;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};
