import React, { useState, useEffect, useRef } from "react";
import { Link, useLocation } from "wouter";
import {
  Menu,
  X,
  Phone,
  ChevronDown,
  Globe,
  MessageCircle,
  Star,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { cn } from "@/lib/utils";
import { useLanguage } from "@/hooks/useLanguage";
import ThemeToggle from "./ThemeToggle";

export default function Navbar() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [mobileDropdownsOpen, setMobileDropdownsOpen] = useState<{
    oferta?: boolean;
    foto?: boolean;
  }>({});
  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);
  const [location] = useLocation();
  const { language, setLanguage, t } = useLanguage();
  const navRef = useRef<HTMLElement>(null);
  const [scrollbarWidth, setScrollbarWidth] = useState(0);

  useEffect(() => {
    const calculateScrollbarWidth = () => {
      const width = window.innerWidth - document.documentElement.clientWidth;
      setScrollbarWidth(width > 0 ? width : 0);
    };
    calculateScrollbarWidth();
    window.addEventListener("resize", calculateScrollbarWidth);
    return () => window.removeEventListener("resize", calculateScrollbarWidth);
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    const body = document.body;
    const navElement = navRef.current;
    if (!navElement || scrollbarWidth === undefined) return;

    const initialNavRight = navElement.style.right || "";
    const initialNavPaddingRight = navElement.style.paddingRight || "";

    const observer = new MutationObserver(() => {
      const dialogIsOpen =
        body.hasAttribute("data-scroll-locked") &&
        body.style.overflow === "hidden";

      if (dialogIsOpen) {
        navElement.style.right = `${scrollbarWidth}px`;
        navElement.style.paddingRight = "0px";
      } else {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    });

    observer.observe(body, {
      attributes: true,
      attributeFilter: ["style", "data-scroll-locked"],
    });

    return () => {
      observer.disconnect();
      if (navElement) {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    };
  }, [scrollbarWidth]);

  const isActive = (path: string) => {
    if (path === "/") {
      return location === path;
    }
    return location.startsWith(path);
  };

  const handleLinkClick = (closeMobileMenu = true) => {
    if (closeMobileMenu) {
      setIsMobileMenuOpen(false);
      setMobileDropdownsOpen({});
    }
  };

  const toggleMobileDropdown = (key: "oferta" | "foto") => {
    setMobileDropdownsOpen((prev) => ({
      // oferta: key === 'oferta' ? !prev.oferta : false, // Close other dropdowns
      // foto: key === 'foto' ? !prev.foto : false,
      ...prev, // Keep other dropdown states if you want multiple open
      [key]: !prev[key],
    }));
  };

  const ofertaLinks = [
    { href: "/oferta", labelKey: "nav.allAttractions" },
    { href: "/oferta#namioty", labelKey: "nav.tents" },
    { href: "/oferta#dmuchance", labelKey: "nav.inflatables" },
    { href: "/oferta#wata-cukrowa", labelKey: "nav.cottonCandy" },
    { href: "/oferta#popcorn", labelKey: "nav.popcorn" },
    { href: "/oferta#fontanna-czekoladowa", labelKey: "nav.chocolateFountain" },
  ];

  const galeriaLinks = [
    { href: "/galeria", labelKey: "nav.allPhotos" },
    { href: "/galeria#foto-namioty", labelKey: "nav.photoTents" },
    { href: "/galeria#foto-dmuchance", labelKey: "nav.photoInflatables" },
    { href: "/galeria#foto-wata", labelKey: "nav.photoCottonCandy" },
    { href: "/galeria#foto-popcorn", labelKey: "nav.photoPopcorn" },
    { href: "/galeria#foto-fontanna", labelKey: "nav.photoFountains" },
  ];

  return (
    <nav
      ref={navRef}
      className={cn(
        "fixed top-0 left-0 right-0 z-50 transition-all duration-300",
        isScrolled
          ? "bg-white/95 dark:bg-slate-900/95 backdrop-blur-md shadow-lg"
          : "bg-white dark:bg-slate-900"
      )}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          <Link href="/" onClick={() => handleLinkClick()}>
            <div className="flex items-center space-x-3 hover:opacity-80 transition-opacity">
              <div className="w-10 h-10 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-lg">S</span>
              </div>
              <span className="brand-title text-xl font-bold text-slate-800 dark:text-white whitespace-nowrap">
                {t("hero.title")}
              </span>
            </div>
          </Link>

          <div className="hidden lg:flex items-center space-x-4">
            <Link href="/">
              <Button
                variant={isActive("/") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("/") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.home")}
              </Button>
            </Link>

            <Link href="/o-nas">
              <Button
                variant={isActive("/o-nas") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("/o-nas") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.about")}
              </Button>
            </Link>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button
                  variant={isActive("/oferta") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("/oferta") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                >
                  {t("nav.offer")} <ChevronDown className="ml-1 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="start" className="w-56">
                {ofertaLinks.map((link) => (
                  <DropdownMenuItem asChild key={link.href}>
                    <Link
                      href={link.href}
                      onClick={() => handleLinkClick()}
                      className="w-full"
                    >
                      {t(link.labelKey)}
                    </Link>
                  </DropdownMenuItem>
                ))}
              </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button
                  variant={isActive("/galeria") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("/galeria") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                >
                  {t("nav.photo")}
                  <ChevronDown className="ml-1 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="start" className="w-56">
                {galeriaLinks.map((link) => (
                  <DropdownMenuItem asChild key={link.href}>
                    <Link
                      href={link.href}
                      onClick={() => handleLinkClick()}
                      className="w-full"
                    >
                      {t(link.labelKey)}
                    </Link>
                  </DropdownMenuItem>
                ))}
              </DropdownMenuContent>
            </DropdownMenu>

            <Link href="/cennik">
              <Button
                variant={isActive("/cennik") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("/cennik") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.pricing")}
              </Button>
            </Link>

            <Link href="/kontakt">
              <Button
                variant={isActive("/kontakt") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("/kontakt") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.contact")}
              </Button>
            </Link>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="icon">
                  <Globe className="h-5 w-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem onClick={() => setLanguage("pl")}>
                  🇵🇱 Polski
                </DropdownMenuItem>
                <DropdownMenuItem onClick={() => setLanguage("en")}>
                  🇬🇧 English
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>

            <ThemeToggle />

            <a
              href="https://m.me/slodkolandiawita"
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-600 hover:text-blue-700 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors"
              title="Messenger"
            >
              <MessageCircle className="h-5 w-5" />
            </a>

            <Dialog
              modal={false}
              open={isReviewModalOpen}
              onOpenChange={(open) => {
                setIsReviewModalOpen(open);
              }}
            >
              <DialogTrigger asChild>
                <Button
                  variant="ghost"
                  size="icon"
                  className="text-amber-600 hover:text-amber-700 hover:bg-amber-100 dark:hover:bg-amber-900/20"
                  title={t("nav.review")}
                >
                  <Star className="h-5 w-5" />
                </Button>
              </DialogTrigger>
              <DialogContent className="sm:max-w-md">
                <DialogHeader>
                  <DialogTitle className="text-center">
                    Dodaj opinię o "{t("hero.title")}"!
                  </DialogTitle>
                  <DialogDescription className="text-center">
                    Zeskanuj kod QR, aby dodać opinię na Google Maps.
                  </DialogDescription>
                </DialogHeader>
                <div className="flex flex-col items-center space-y-4 py-4">
                  <div className="bg-white p-4 rounded-lg shadow-inner">
                    <img
                      src="/qr-opinia.png"
                      alt="QR Code - Dodaj opinię"
                      className="w-48 h-48"
                    />
                  </div>
                  <p className="text-sm text-gray-600 dark:text-gray-300 text-center">
                    Kod QR - Dodaj opinię
                    <br />
                    lub kliknij w link:
                  </p>
                  <a
                    href="https://g.page/r/CWM4dGuLyfXlEAE/review"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors"
                  >
                    Dodaj opinię na Google
                  </a>
                </div>
              </DialogContent>
            </Dialog>

            <a
              href="tel:+48531890827"
              className="btn-gradient text-white px-3 py-2 rounded-lg font-semibold hover:shadow-lg transition-all flex items-center space-x-2 whitespace-nowrap text-sm"
            >
              <Phone className="h-4 w-4" />
              <span>531 890 827</span>
            </a>
          </div>

          <div className="lg:hidden">
            <Button
              variant="ghost"
              size="icon"
              onClick={() => {
                setIsMobileMenuOpen(!isMobileMenuOpen);
                if (isMobileMenuOpen) setMobileDropdownsOpen({}); // Close dropdowns when closing main menu
              }}
              aria-label="Toggle mobile menu"
            >
              {isMobileMenuOpen ? (
                <X className="h-6 w-6" />
              ) : (
                <Menu className="h-6 w-6" />
              )}
            </Button>
          </div>
        </div>
      </div>

      {isMobileMenuOpen && (
        <div
          className="lg:hidden fixed inset-x-0 top-16 bottom-0 z-40 bg-white/95 dark:bg-slate-900/95 backdrop-blur-md overflow-y-auto"
          style={{ WebkitOverflowScrolling: "touch" }}
        >
          <div className="px-4 pt-2 pb-24 space-y-1">
            <Link href="/">
              <Button
                variant={isActive("/") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("/") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.home")}
              </Button>
            </Link>

            <Link href="/o-nas">
              <Button
                variant={isActive("/o-nas") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("/o-nas") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.about")}
              </Button>
            </Link>

            <div>
              <Button
                variant="ghost"
                className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                onClick={() => toggleMobileDropdown("oferta")}
              >
                {t("nav.offer")}
                <ChevronDown
                  className={cn(
                    "h-5 w-5 transition-transform",
                    mobileDropdownsOpen.oferta && "rotate-180"
                  )}
                />
              </Button>
              {mobileDropdownsOpen.oferta && (
                <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                  {ofertaLinks.map((link) => (
                    <Link href={link.href} key={link.href}>
                      <Button
                        variant="ghost"
                        className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                        onClick={() => handleLinkClick()}
                      >
                        {t(link.labelKey)}
                      </Button>
                    </Link>
                  ))}
                </div>
              )}
            </div>

            <div>
              <Button
                variant="ghost"
                className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                onClick={() => toggleMobileDropdown("foto")}
              >
                {t("nav.photo")}
                <ChevronDown
                  className={cn(
                    "h-5 w-5 transition-transform",
                    mobileDropdownsOpen.foto && "rotate-180"
                  )}
                />
              </Button>
              {mobileDropdownsOpen.foto && (
                <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                  {galeriaLinks.map((link) => (
                    <Link href={link.href} key={link.href}>
                      <Button
                        variant="ghost"
                        className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                        onClick={() => handleLinkClick()}
                      >
                        {t(link.labelKey)}
                      </Button>
                    </Link>
                  ))}
                </div>
              )}
            </div>

            <Link href="/cennik">
              <Button
                variant={isActive("/cennik") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("/cennik") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.pricing")}
              </Button>
            </Link>

            <Link href="/kontakt">
              <Button
                variant={isActive("/kontakt") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("/kontakt") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.contact")}
              </Button>
            </Link>

            <div className="pt-4 space-y-3 border-t border-slate-200 dark:border-slate-700 mt-3">
              <div className="flex justify-center space-x-4">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => {
                    setLanguage("pl");
                    handleLinkClick(false);
                  }}
                  className={
                    language === "pl" ? "bg-sky-100 dark:bg-sky-900" : ""
                  }
                >
                  🇵🇱 PL
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => {
                    setLanguage("en");
                    handleLinkClick(false);
                  }}
                  className={
                    language === "en" ? "bg-sky-100 dark:bg-sky-900" : ""
                  }
                >
                  🇬🇧 EN
                </Button>
                <ThemeToggle />
              </div>
              <Button
                onClick={() => {
                  setIsReviewModalOpen(true);
                  handleLinkClick();
                }}
                className="w-full bg-amber-600 hover:bg-amber-700 text-white font-semibold flex items-center justify-center space-x-2"
              >
                <Star className="h-4 w-4" />
                <span>{t("nav.review")}</span>
              </Button>
              <a
                href="https://m.me/slodkolandiawita"
                target="_blank"
                rel="noopener noreferrer"
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                onClick={() => handleLinkClick()}
              >
                <MessageCircle className="h-4 w-4" />
                <span>Messenger</span>
              </a>
              <a
                href="tel:+48531890827"
                className="btn-gradient text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                onClick={() => handleLinkClick()}
              >
                <Phone className="h-4 w-4" />
                <span>Zadzwoń: 531 890 827</span>
              </a>
            </div>
          </div>
        </div>
      )}
    </nav>
  );
}

---------------------------

export type Language = "pl" | "en";

export type PageKey =
  | "HOME"
  | "ABOUT"
  | "OFFER"
  | "GALLERY"
  | "PRICING"
  | "CONTACT"
  | "PRIVACY_POLICY"
  | "TERMS"
  | "NOT_FOUND"; // Klucz dla strony 404, jeśli chcesz ją lokalizować

export type OfferHashKey =
  | "TENTS"
  | "INFLATABLES"
  | "POPCORN"
  | "COTTON_CANDY"
  | "CHOCOLATE_FOUNTAIN";

export type GalleryHashKey =
  | "PHOTO_TENTS"
  | "PHOTO_INFLATABLES"
  | "PHOTO_COTTON_CANDY"
  | "PHOTO_POPCORN"
  | "PHOTO_FOUNTAINS";

export type HashKey = OfferHashKey | GalleryHashKey;

export const basePaths: Record<PageKey, Record<Language, string>> = {
  HOME: { pl: "/", en: "/" },
  ABOUT: { pl: "/o-nas", en: "/about-us" },
  OFFER: { pl: "/oferta", en: "/offer" },
  GALLERY: { pl: "/galeria", en: "/gallery" },
  PRICING: { pl: "/cennik", en: "/pricing" },
  CONTACT: { pl: "/kontakt", en: "/contact" },
  PRIVACY_POLICY: { pl: "/polityka-prywatnosci", en: "/privacy-policy" },
  TERMS: { pl: "/regulamin", en: "/terms-of-service" },
  NOT_FOUND: { pl: "/404", en: "/404" }, // Przykładowa ścieżka dla 404
};

export const hashSlugs: Record<HashKey, Record<Language, string>> = {
  TENTS: { pl: "namioty", en: "tents" },
  INFLATABLES: { pl: "dmuchance", en: "inflatables" },
  POPCORN: { pl: "popcorn", en: "popcorn" },
  COTTON_CANDY: { pl: "wata-cukrowa", en: "cotton-candy" },
  CHOCOLATE_FOUNTAIN: { pl: "fontanna-czekoladowa", en: "chocolate-fountain" },
  PHOTO_TENTS: { pl: "foto-namioty", en: "photo-tents" },
  PHOTO_INFLATABLES: { pl: "foto-dmuchance", en: "photo-inflatables" },
  PHOTO_COTTON_CANDY: { pl: "foto-wata", en: "photo-cotton-candy" },
  PHOTO_POPCORN: { pl: "foto-popcorn", en: "photo-popcorn" },
  PHOTO_FOUNTAINS: { pl: "foto-fontanny", en: "photo-fountains" },
};

export function getBasePath(pageKey: PageKey, lang: Language): string {
  return (
    basePaths[pageKey]?.[lang] ||
    basePaths[pageKey]?.["pl"] ||
    basePaths["NOT_FOUND"]["pl"]
  );
}

export function getHashSlug(hashKey: HashKey, lang: Language): string {
  return hashSlugs[hashKey]?.[lang] || hashSlugs[hashKey]?.["pl"] || "";
}

export function getLocalizedPath(
  pageKey: PageKey,
  lang: Language,
  hashKey?: HashKey
): string {
  let path = getBasePath(pageKey, lang);
  if (hashKey) {
    const slug = getHashSlug(hashKey, lang);
    if (slug) {
      path += `#${slug}`;
    }
  }
  return path;
}

export function findPageKeyByPath(currentPath: string): {
  pageKey: PageKey | null;
  lang: Language | null;
  hash: string | null;
} {
  const [pathOnly, hashValue] = currentPath.split("#");

  for (const lang of ["en", "pl"] as Language[]) {
    // Sprawdź najpierw angielski, potem polski, aby dać priorytet zlokalizowanym
    for (const key in basePaths) {
      const pageKey = key as PageKey;
      if (basePaths[pageKey] && basePaths[pageKey][lang] === pathOnly) {
        // Znaleziono dopasowanie. Teraz znajdź oryginalny klucz hasha, jeśli istnieje.
        let originalHashKeyFound: HashKey | null = null;
        if (hashValue) {
          for (const hKey in hashSlugs) {
            const currentHashKey = hKey as HashKey;
            if (
              hashSlugs[currentHashKey] &&
              hashSlugs[currentHashKey][lang] === hashValue
            ) {
              originalHashKeyFound = currentHashKey; // To jest klucz enum, a nie string
              break;
            }
          }
        }
        // Zwracamy wartość hasha (string), nie klucz
        return { pageKey, lang, hash: hashValue || null };
      }
    }
  }
  // Jeśli nie znaleziono zlokalizowanej, spróbuj dopasować do domyślnej polskiej jako fallback
  // (chociaż powyższa pętla już to częściowo robi)
  for (const key in basePaths) {
    const pageKey = key as PageKey;
    if (basePaths[pageKey] && basePaths[pageKey]["pl"] === pathOnly) {
      return { pageKey, lang: "pl", hash: hashValue || null };
    }
  }

  return { pageKey: null, lang: null, hash: null };
}


------------------------

import { useEffect } from "react";
import { Switch, Route, useLocation } from "wouter";
import { QueryClientProvider } from "@tanstack/react-query";
import { HelmetProvider } from "react-helmet-async";
import { queryClient } from "./lib/queryClient";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";
import Navbar from "./components/Navbar";
import Footer from "./components/Footer";
import ScrollToTopButton from "./components/ScrollToTopButton";
import CookieConsent from "./components/CookieConsent";
import Home from "./pages/Home";
import Oferta from "./pages/Oferta";
import Galeria from "./pages/Galeria";
import Cennik from "./pages/Cennik";
import Kontakt from "./pages/Kontakt";
import ONas from "./pages/ONas";
// Załóżmy, że masz te komponenty dla polityki prywatności i regulaminu
// import PrivacyPolicyPage from "./pages/PrivacyPolicyPage";
// import TermsOfServicePage from "./pages/TermsOfServicePage";
import NotFound from "./pages/not-found"; // Twój komponent 404
import { LanguageProvider, useLanguage } from "@/hooks/useLanguage";
import {
  basePaths,
  PageKey,
  Language,
  findPageKeyByPath,
  HashKey,
  getBasePath,
} from "@/config/paths"; // Dodano getBasePath

function ScrollRestoration() {
  const [location] = useLocation();

  useEffect(() => {
    const [pathOnly, hashValue] = location.split("#");

    if (!hashValue) {
      window.scrollTo(0, 0);
    } else {
      // Opóźnienie, aby dać DOM czas na renderowanie, zwłaszcza po zmianie strony
      setTimeout(() => {
        const element = document.getElementById(hashValue);
        if (element) {
          const navbarHeight =
            document.querySelector("nav")?.offsetHeight || 70;
          const yOffset = -navbarHeight - 20; // Dodatkowy margines
          const y =
            element.getBoundingClientRect().top + window.pageYOffset + yOffset;
          window.scrollTo({ top: y, behavior: "smooth" });
        } else {
          // Jeśli elementu nie ma, a jest hash, przewiń na górę (może to być stary hash)
          window.scrollTo(0, 0);
        }
      }, 100);
    }
  }, [location]); // Uruchom przy każdej zmianie lokalizacji (w tym hash)

  return null;
}

function AppRoutes() {
  const [wouterLocation, setWouterLocation] = useLocation();
  const { language, setLanguage: setGlobalLanguage } = useLanguage();

  useEffect(() => {
    // Ta funkcja jest wywoływana przy każdej zmianie wouterLocation lub language
    // Jej celem jest synchronizacja stanu języka z URL i zapewnienie,
    // że wouter renderuje poprawny komponent na podstawie kanonicznej ścieżki.

    const currentBrowserPath = window.location.pathname + window.location.hash;
    const {
      pageKey: detectedPageKey,
      lang: detectedLang,
      hash: detectedHashValue,
    } = findPageKeyByPath(currentBrowserPath);

    if (detectedPageKey) {
      // Jeśli znaleziono klucz strony na podstawie URL w przeglądarce
      if (detectedLang && detectedLang !== language) {
        // Jeśli język w URL jest inny niż aktualny globalny język, zaktualizuj globalny język.
        // To obsłuży przypadek, gdy użytkownik wchodzi na zlokalizowany URL bezpośrednio.
        // setGlobalLanguage NIE powinno tutaj zmieniać URL w przeglądarce, bo już tam jesteśmy.
        // Funkcja setLanguage w useLanguage.tsx powinna być tak napisana, by nie powodować pętli.
        // Rozważ przekazanie opcjonalnego argumentu do setGlobalLanguage, aby nie aktualizować URL.
        // Na razie zakładamy, że setGlobalLanguage tylko ustawia stan.
        // Bezpieczniej jest, jeśli setGlobalLanguage nie modyfikuje window.history.
        // Odpowiedzialność za zmianę URL w pasku powinna być np. w Navbarze przy kliknięciu.
      }

      // Zawsze używaj kanonicznej (np. polskiej) ścieżki dla wewnętrznego routingu woutera
      const canonicalPathForWouter = getBasePath(detectedPageKey, "pl"); // Zawsze 'pl' dla <Route path>
      let wouterShouldBePath = canonicalPathForWouter;

      if (detectedHashValue) {
        // Hashy generalnie nie lokalizujemy w samym <Route path>, przeglądarka je obsługuje.
        // Ale jeśli findPageKeyByPath zwraca zlokalizowany hash, a my potrzebujemy
        // kanonicznego dla jakiejś logiki, to trzeba by go tu przetłumaczyć.
        // Na razie zakładamy, że detectedHashValue jest tym, czego potrzebujemy dla woutera.
        wouterShouldBePath += `#${detectedHashValue}`;
      }

      // Jeśli ścieżka bazowa, którą "widzi" wouter, nie jest kanoniczną ścieżką polską,
      // zaktualizuj wewnętrzną lokalizację woutera.
      // To jest potrzebne, gdy URL w przeglądarce jest np. /en/about-us,
      // a wouter musi renderować komponent zdefiniowany dla <Route path="/o-nas">.
      if (wouterLocation.split("#")[0] !== canonicalPathForWouter) {
        setWouterLocation(wouterShouldBePath, { replace: true });
      }
    } else {
      // Nie znaleziono klucza strony dla aktualnego URL w przeglądarce.
      // Może to być prawdziwy 404 lub sytuacja początkowa.
      // Jeśli wouterLocation jest czymś innym niż "/", a nie jest znaną ścieżką,
      // to możemy to potraktować jako 404.
      const currentWouterBasePath = wouterLocation.split("#")[0];
      const isKnownWouterPath = Object.values(basePaths).some((langPaths) =>
        Object.values(langPaths).includes(currentWouterBasePath)
      );
      if (currentWouterBasePath !== "/" && !isKnownWouterPath) {
        // Wouter jest na nieznanej ścieżce. Pozwólmy, aby <Route><NotFound/></Route> to obsłużyło.
      }
    }
  }, [wouterLocation, language, setGlobalLanguage, setWouterLocation]); // Dodano setWouterLocation

  return (
    <Switch>
      <Route path={basePaths["HOME"]["pl"]} component={Home} />
      <Route path={basePaths["ABOUT"]["pl"]} component={ONas} />
      <Route path={basePaths["OFFER"]["pl"]} component={Oferta} />
      <Route path={basePaths["GALLERY"]["pl"]} component={Galeria} />
      <Route path={basePaths["PRICING"]["pl"]} component={Cennik} />
      <Route path={basePaths["CONTACT"]["pl"]} component={Kontakt} />
      {/*
      Upewnij się, że masz `PageKey` "PRIVACY_POLICY" i "TERMS" w `paths.ts`
      oraz odpowiednie komponenty stron.
      <Route path={basePaths["PRIVACY_POLICY"]["pl"]} component={PrivacyPolicyPage} />
      <Route path={basePaths["TERMS"]["pl"]} component={TermsOfServicePage} />
      */}
      <Route>
        <NotFound />
      </Route>
    </Switch>
  );
}

function App() {
  return (
    <HelmetProvider>
      <QueryClientProvider client={queryClient}>
        <LanguageProvider>
          <TooltipProvider>
            <Toaster />
            <RouterComponent />
          </TooltipProvider>
        </LanguageProvider>
      </QueryClientProvider>
    </HelmetProvider>
  );
}

// Zmieniono nazwę komponentu Router na RouterComponent, aby uniknąć konfliktu z wouter
function RouterComponent() {
  return (
    <div className="min-h-screen flex flex-col">
      <ScrollRestoration />
      <Navbar />
      <main className="flex-1">
        <AppRoutes />
      </main>
      <Footer />
      <ScrollToTopButton />
      <CookieConsent />
    </div>
  );
}

export default App;


-----------------------------

import React, {
  createContext,
  useContext,
  useState,
  ReactNode,
  useEffect,
} from "react";
import { useLocation } from "wouter";
import {
  basePaths,
  PageKey,
  Language,
  getLocalizedPath,
  findPageKeyByPath,
  HashKey,
  getHashSlug,
  hashSlugs,
} from "@/config/paths";

interface LanguageContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string, replacements?: Record<string, string | number>) => string;
}

// ... (translations - bez zmian) ...
const translations: Record<Language, Record<string, string>> = {
  pl: {
    "nav.home": "Start",
    "nav.about": "O Nas",
    "nav.offer": "Oferta",
    "nav.photo": "Foto",
    "nav.pricing": "Cennik",
    "nav.contact": "Kontakt",
    "nav.allAttractions": "Wszystkie Atrakcje",
    "nav.tents": "Namioty Imprezowe",
    "nav.inflatables": "Dmuchańce",
    "nav.popcorn": "Popcorn",
    "nav.cottonCandy": "Wata Cukrowa",
    "nav.chocolateFountain": "Fontanna Czekoladowa",
    "nav.allPhotos": "Wszystkie Zdjęcia",
    "nav.photoTents": "Namioty",
    "nav.photoInflatables": "Dmuchańce",
    "nav.photoCottonCandy": "Wata Cukrowa",
    "nav.photoPopcorn": "Popcorn",
    "nav.photoFountains": "Fontanny Czekoladowe",
    "nav.review": "Dodaj opinię",
    "hero.title": "SŁODKOLANDIA wita:",
    "hero.subtitle": "Niezapomniane Atrakcje na Twoją Imprezę!",
    "hero.description":
      "Gwarantujemy świetną zabawę i profesjonalną obsługę na każdym evencie!",
    "hero.seeOffer": "Zobacz naszą ofertę",
    "hero.askDate": "Zapytaj o termin",
    "services.title": "Nasze Główne Atrakcje",
    "services.description":
      "Oferujemy kompleksowy wynajem sprzętu eventowego i atrakcji, które sprawią, że Twoja impreza będzie niezapomniana",
    "services.seeAll": "Zobacz wszystkie atrakcje",
    "category.namioty": "namioty",
    "category.dmuchance": "dmuchańce",
    "category.cukiernicze": "cukiernicze",
    "category.kompleksowa": "kompleksowa",
    "category.gastro": "gastro",
    "category.inflatables": "dmuchańce",
    "category.confectionery": "cukiernicze",
    "whyUs.title": "Dlaczego SŁODKOLANDIA wita:?",
    "whyUs.description":
      "Łączymy pasję do tworzenia niezapomnianych chwil z profesjonalnym podejściem do każdego eventu",
    "whyUs.experience": "Doświadczenie",
    "whyUs.experienceDesc":
      "Lata doświadczenia w organizacji eventów różnej skali",
    "whyUs.safety": "Bezpieczeństwo",
    "whyUs.safetyDesc":
      "Certyfikowany sprzęt i pełne ubezpieczenie każdej atrakcji",
    "whyUs.punctuality": "Punktualność",
    "whyUs.punctualityDesc":
      "Zawsze na czasie - dotrzymujemy terminów dostaw i montażu",
    "whyUs.individual": "Indywidualne Podejście",
    "whyUs.individualDesc":
      "Każdy event jest wyjątkowy - dostosowujemy się do Twoich potrzeb",
    "cta.mainTitle": "Zorganizujmy razem Twoją wymarzą imprezę!",
    "cta.mainDescription":
      "Skontaktuj się z nami już dziś i sprawdź dostępność na Twój termin. Gwarantujemy profesjonalną obsługę i niezapomnianych wrażeń!",
    "cta.contactForm": "Formularz kontaktowy",
    "cta.secondaryTitle": "Gotowy na niezapomnianą imprezę?",
    "cta.secondaryDescription":
      "Skontaktuj się z nami już dziś i zarezerwuj termin!",
    "cta.callNow": "Zadzwoń teraz",
    "cta.askForDate": "Zapytaj o termin",
    "home.stats.eventsOrganized": "Eventów zorganizowanych",
    "home.stats.happyClientsMonthly": "Zadowolonych klientów miesięcznie",
    "home.stats.yearsExperience": "lat doświadczenia",
    "home.stats.serviceRadius": "promień obsługi",
    "footer.companyName": "SŁODKOLANDIA wita:",
    "footer.companyDescription":
      "Profesjonalny wynajem atrakcji eventowych w Radomiu i okolicach. Tworzymy niezapomniane chwile dla Twoich gości!",
    "footer.quickLinks": "Szybkie Linki",
    "footer.servicesTitle": "Nasze Usługi",
    "footer.serviceTents": "Namioty Imprezowe",
    "footer.serviceInflatables": "Dmuchańce",
    "footer.serviceCottonCandy": "Wata Cukrowa",
    "footer.servicePopcorn": "Maszyny do Popcornu",
    "footer.serviceFountains": "Fontanna Czekoladowa",
    "footer.serviceComprehensive": "Kompleksowa Obsługa",
    "footer.contactTitle": "Kontakt",
    "footer.address": "Radom i okolice",
    "footer.addressDetail": "(promień 100km)",
    "footer.copyright": "Radom {year} SŁODKOLANDIA wita:. ",
    "footer.privacyPolicy": "Polityka Prywatności",
    "footer.terms": "Regulamin",
    "attractionCard.details": "Szczegóły",
    "attractionCard.priceFrom": "od",
    "currencyUnit.zł": "zł",
    "pricing.perPeriod.dzień": "/ dzień",
    "pricing.perPeriod.impreza": "/ impreza",
    "pricing.perPeriod.event": "/ event",
    "cookieConsent.message":
      "Ta strona używa plików cookies w celu zapewnienia najlepszej jakości usług. Kontynuując przeglądanie zgadzasz się na ich użycie.",
    "cookieConsent.accept": "Akceptuję",
    "cookieConsent.reject": "Odrzuć",
    "inquiryForm.title": "Formularz Zapytania",
    "inquiryForm.nameLabel": "Imię i nazwisko *",
    "inquiryForm.namePlaceholder": "Twoje imię i nazwisko",
    "inquiryForm.nameError": "Imię i nazwisko musi mieć co najmniej 2 znaki",
    "inquiryForm.emailLabel": "Email *",
    "inquiryForm.emailPlaceholder": "twoj@email.pl",
    "inquiryForm.emailError": "Nieprawidłowy adres email",
    "inquiryForm.phoneLabel": "Telefon",
    "inquiryForm.phonePlaceholder": "+48 123 456 789",
    "inquiryForm.eventDateLabel": "Data eventu",
    "inquiryForm.attractionsLabel": "Interesujące atrakcje",
    "inquiryForm.messageLabel": "Wiadomość *",
    "inquiryForm.messagePlaceholder":
      "Opisz swój event, liczbę gości, dodatkowe wymagania...",
    "inquiryForm.messageError": "Wiadomość musi mieć co najmniej 10 znaków",
    "inquiryForm.submitButton": "Wyślij Zapytanie",
    "inquiryForm.submittingButton": "Wysyłanie...",
    "inquiryForm.successTitle": "Zapytanie wysłane!",
    "inquiryForm.successDescription":
      "Dziękujemy za kontakt. Odpowiemy w ciągu 24 godzin.",
    "inquiryForm.errorTitle": "Błąd wysyłania",
    "inquiryForm.errorDescription":
      "Przepraszamy, wystąpił problem. Spróbuj ponownie lub zadzwoń.",
    "inquiryForm.attractionOptionTents": "Namioty Imprezowe",
    "inquiryForm.attractionOptionInflatables": "Dmuchane Atrakcje",
    "inquiryForm.attractionOptionCottonCandy": "Wata Cukrowa",
    "inquiryForm.attractionOptionPopcorn": "Maszyny do Popcornu",
    "inquiryForm.attractionOptionFountains": "Fontanny Czekoladowe",
    "inquiryForm.attractionOptionComprehensive": "Kompleksowa Obsługa",
    "pricingPage.heroTitle": "Cennik Naszych Usług",
    "pricingPage.heroDescription":
      "Oferujemy konkurencyjne ceny i indywidualne wyceny dostosowane do Twojego budżetu i potrzeb. Wszystkie ceny zawierają transport w promieniu 15km od Radomia.",
    "pricingPage.badgeTransportFree15km": "🚚 Darmowy transport do 15km",
    "pricingPage.badgeSetupIncluded": "🛠️ Montaż i demontaż w cenie",
    "pricingPage.badgeInsuranceOC": "🛡️ Ubezpieczenie OC",
    "pricingPage.packagesTitle": "Pakiety Promocyjne",
    "pricingPage.packagesDescription":
      "Oszczędź wynajmując pakiety atrakcji! Im więcej wynajmujesz, tym więcej oszczędzasz.",
    "pricingPage.popularPackage": "Najpopularniejszy",
    "pricingPage.packageNormally": "Normalnie",
    "pricingPage.packageSave": "Oszczędzasz {amount} zł",
    "pricingPage.packageIncludes": "W pakiecie:",
    "pricingPage.packageAsk": "Zapytaj o pakiet",
    "pricingPage.individualTitle": "Cennik Indywidualny",
    "pricingPage.individualDescription": "Ceny wynajmu pojedynczych atrakcji",
    "pricingPage.categoryAll": "Wszystkie",
    "pricingPage.categoryGastro": "Gastro",
    "pricingPage.additionalServicesTitle": "Usługi Dodatkowe",
    "pricingPage.discountsTitle": "Rabaty i Promocje",
    "pricingPage.discountPackages": "Pakiety Eventowe",
    "pricingPage.discountPackagesDesc":
      "Wynajmij 3 lub więcej atrakcji i otrzymaj 15% rabatu!",
    "pricingPage.discountLongTerm": "Długoterminowy Wynajem",
    "pricingPage.discountLongTermDesc":
      "Eventy powyżej 2 dni - specjalne ceny!",
    "pricingPage.discountLoyal": "Klienci Stali",
    "pricingPage.discountLoyalDesc":
      "Program lojalnościowy dla regularnych klientów",
    "pricingPage.askForDiscount": "Zapytaj o Rabat",
    "pricingPage.importantInfoTitle": "Ważne Informacje",
    "pricingPage.rentalConditionsTitle": "📋 Warunki Wynajmu",
    "pricingPage.rentalCondition1":
      "• Rezerwacja wymaga wpłaty zadatku 30% wartości zamówienia",
    "pricingPage.rentalCondition2":
      "• Minimalna doba wynajmu - 1 dzień (24 godziny) dla namiotów, pozostałe atrakcje na czas trwania imprezy",
    "pricingPage.rentalCondition3":
      "• Możliwość anulowania do 48h przed eventem",
    "pricingPage.rentalCondition4": "• Ceny brutto",
    "pricingPage.rentalCondition5":
      "• Dla eventów w dni świąteczne - dopłata 20%",
    "pricingPage.transportSetupTitle": "🚚 Transport i Montaż",
    "pricingPage.transportSetup1": "• Darmowy transport do 15km od Radomia",
    "pricingPage.transportSetup2":
      "• Montaż i demontaż w standardowych godzinach (8:00-20:00)",
    "pricingPage.transportSetup3":
      "• Czas montażu: 1-4 godziny w zależności od atrakcji",
    "pricingPage.transportSetup4":
      "• Wymagane jest zapewnienie dostępu do prądu 230V",
    "pricingPage.transportSetup5":
      "• Dla dmuchańców - płaska powierzchnia min. 4x4m",
    "pricingPage.packageChildName": "Pakiet Dziecięcy",
    "pricingPage.packageChildDesc": "Idealny na urodziny dziecka",
    "pricingPage.packageChildItem1": "Zamek dmuchany",
    "pricingPage.packageChildItem2": "Wata cukrowa",
    "pricingPage.packageChildItem3": "Popcorn",
    "pricingPage.packageFamilyName": "Pakiet Rodzinny",
    "pricingPage.packageFamilyDesc": "Dla większych rodzinnych spotkań",
    "pricingPage.packageFamilyItem1": "Namiot 6x12m",
    "pricingPage.packageFamilyItem2": "Dmuchana zjeżdżalnia",
    "pricingPage.packageFamilyItem3": "Wata cukrowa",
    "pricingPage.packageFamilyItem4": "Fontanna czekoladowa",
    "pricingPage.packageEventName": "Pakiet Eventowy",
    "pricingPage.packageEventDesc": "Kompleksowa obsługa większych eventów",
    "pricingPage.packageEventItem1": "Namiot 10x20m",
    "pricingPage.packageEventItem2": "2x Dmuchańce",
    "pricingPage.packageEventItem3": "Wata cukrowa",
    "pricingPage.packageEventItem4": "Popcorn",
    "pricingPage.packageEventItem5": "Fontanna czekoladowa",
    "pricingPage.packageEventItem6": "Obsługa",
    "pricingPage.additionalServiceTransport15": "Transport (do 15km)",
    "pricingPage.additionalServiceTransport30": "Transport (15-30km)",
    "pricingPage.additionalServiceTransportOver30": "Transport (powyżej 30km)",
    "pricingPage.additionalServiceNightSetup": "Montaż w godzinach nocnych",
    "pricingPage.additionalServiceExtendRental":
      "Przedłużenie wynajmu (+1 dzień)",
    "pricingPage.additionalServiceOperator": "Obsługa dodatkowa (operator)",
    "pricingPage.unitPriceDefault": "zł",
    "pricingPage.unitPriceKm": "zł/km",
    "pricingPage.unitPricePercent": "% ceny bazowej",
    "galleryPage.heroTitle": "Zobacz Nasze Atrakcje w Akcji!",
    "galleryPage.heroDescription":
      "Galeria zdjęć z naszych realizacji eventowych. Odkryj, jak wyglądają nasze atrakcje na prawdziwych imprezach i eventach w Radomiu i okolicach.",
    "galleryPage.badgeEventsDone": "Ponad 500 zrealizowanych eventów",
    "galleryPage.filterLabel": "Kategorie:",
    "galleryPage.categoryAll": "Wszystkie",
    "galleryPage.categoryTents": "Namioty Imprezowe",
    "galleryPage.categoryInflatables": "Dmuchane Atrakcje",
    "galleryPage.categoryCottonCandy": "Wata Cukrowa",
    "galleryPage.categoryPopcorn": "Popcorn",
    "galleryPage.categoryFountains": "Fontanny Czekoladowe",
    "galleryPage.categoryEventSetups": "Realizacje Eventów",
    "galleryPage.sectionTentsTitle": "🏕️ Namioty Imprezowe",
    "galleryPage.sectionTentsDesc":
      "Profesjonalne namioty w różnych konfiguracjach - od kameralnych przyjęć po duże eventy firmowe.",
    "galleryPage.sectionInflatablesTitle": "🏰 Dmuchane Atrakcje",
    "galleryPage.sectionInflatablesDesc":
      "Bezpieczna zabawa dla dzieci - zjeżdżalnie, zamki dmuchane.",
    "galleryPage.sectionCottonCandyTitle": "🍭 Wata Cukrowa",
    "galleryPage.sectionCottonCandyDesc":
      "Kolorowa wata cukrowa w różnych smakach - słodka atrakcja dla gości w każdym wieku.",
    "galleryPage.sectionPopcornTitle": "🍿 Popcorn",
    "galleryPage.sectionPopcornDesc":
      "Aromatyczny popcorn przygotowywany na żywo.",
    "galleryPage.sectionFountainsTitle": "🍫 Fontanna Czekoladowa",
    "galleryPage.sectionFountainsDesc":
      "Elegancka fontanna czekoladowa z dodatkami - wykwintna atrakcja dla smakoszy.",
    "galleryPage.sectionEventSetupsTitle": "🎉 Realizacje Eventów",
    "galleryPage.sectionEventSetupsDesc":
      "Zobacz jak wyglądają nasze kompleksowe realizacje - od małych przyjęć po duże eventy.",
    "galleryPage.currentCategoryInfo": "{count} zdjęć w tej kategorii",
    "galleryPage.statsTitle": "Nasze Doświadczenie w Liczbach",
    "galleryPage.statEvents": "Zrealizowanych eventów",
    "galleryPage.statKids": "Zadowolonych dzieci",
    "galleryPage.statAttractions": "Rodzajów atrakcji",
    "galleryPage.statRadius": "Promień obsługi",
    "contactPage.heroTitle": "Skontaktuj się z Nami",
    "contactPage.heroDescription":
      "Zorganizujmy razem Twoją niezapomnianą imprezę! Skontaktuj się z nami już dziś i sprawdź dostępność na Twój termin.",
    "contactPage.badgeQuickResponse": "⚡ Szybka odpowiedź",
    "contactPage.badgeFreeConsultation": "💬 Darmowa konsultacja",
    "contactPage.badgeIndividualQuotes": "📋 Indywidualne wyceny",
    "contactPage.quickContactTitle": "Wybierz Najwygodniejszy Sposób Kontaktu",
    "contactPage.quickContactDescription":
      "Jesteśmy dostępni przez cały tydzień. Odpowiadamy szybko na wszystkie zapytania!",
    "contactPage.phoneTitle": "Telefon",
    "contactPage.phoneDescription": "Najszybszy kontakt",
    "contactPage.emailTitle": "Email",
    "contactPage.emailDescription": "Napisz do nas",
    "contactPage.whatsappTitle": "WhatsApp",
    "contactPage.whatsappDescription": "Szybka wiadomość",
    "contactPage.meetingTitle": "Spotkanie",
    "contactPage.meetingDescription": "Umów się na prezentację",
    "contactPage.meetingDetails": "Po wcześniejszym kontakcie",
    "contactPage.callToActionTitle": "Zadzwoń już teraz!",
    "contactPage.callToActionDescription":
      "Sprawdzimy dostępność terminu i przygotujemy indywidualną wycenę",
    "contactPage.workingHoursTitle": "Godziny Pracy",
    "contactPage.workingHoursNote":
      "Uwaga: W przypadku pilnych spraw jesteśmy dostępni również poza godzinami pracy.",
    "contactPage.workingHoursMonFri": "Poniedziałek - Piątek",
    "contactPage.workingHoursSat": "Sobota",
    "contactPage.workingHoursSun": "Niedziela",
    "contactPage.workingHoursHoliday": "Dni świąteczne",
    "contactPage.workingHoursMonFriTime": "8:00 - 20:00",
    "contactPage.workingHoursSatTime": "9:00 - 18:00",
    "contactPage.workingHoursSunTime": "10:00 - 16:00",
    "contactPage.workingHoursHolidayTime": "Na umowę",
    "contactPage.serviceAreaTitle": "Obszar Obsługi",
    "contactPage.serviceAreaNote":
      "Obsługujemy też inne miasta! Skontaktuj się z nami, aby uzgodnić warunki transportu.",
    "contactPage.serviceAreaRadom": "Radom",
    "contactPage.serviceAreaRadomDist": "0km",
    "contactPage.serviceAreaRadomNote": "Siedziba firmy",
    "contactPage.serviceAreaBialobrzegi": "Białobrzegi",
    "contactPage.serviceAreaBialobrzegiDist": "25km",
    "contactPage.serviceAreaBialobrzegiNote": "Darmowy transport",
    "contactPage.serviceAreaSzydlowiec": "Szydłowiec",
    "contactPage.serviceAreaSzydlowiecDist": "30km",
    "contactPage.serviceAreaSzydlowiecNote": "Darmowy transport",
    "contactPage.serviceAreaKozienice": "Kozienice",
    "contactPage.serviceAreaKozieniceDist": "35km",
    "contactPage.serviceAreaKozieniceNote": "Dodatkowa opłata",
    "contactPage.serviceAreaOstrowiec": "Ostrowiec Św.",
    "contactPage.serviceAreaOstrowiecDist": "40km",
    "contactPage.serviceAreaOstrowiecNote": "Dodatkowa opłata",
    "contactPage.serviceAreaSkarzysko": "Skarżysko-Kamienna",
    "contactPage.serviceAreaSkarzyskoDist": "45km",
    "contactPage.serviceAreaSkarzyskoNote": "Dodatkowa opłata",
    "contactPage.additionalInfoTitle": "Dodatkowe Informacje",
    "contactPage.infoViewingTitle": "Oględziny sprzętu",
    "contactPage.infoViewingDesc":
      "Możliwość obejrzenia atrakcji przed wynajmem",
    "contactPage.infoFreeQuoteTitle": "Darmowa wycena",
    "contactPage.infoFreeQuoteDesc":
      "Przygotujemy bezpłatną ofertę dostosowaną do Twoich potrzeb",
    "contactPage.infoConsultationsTitle": "Konsultacje",
    "contactPage.infoConsultationsDesc": "Pomożemy w planowaniu całego eventu",
    "contactPage.infoOnlineBookingTitle": "Rezerwacja online",
    "contactPage.infoOnlineBookingDesc":
      "Możliwość rezerwacji przez formularz lub telefon",
    "contactPage.faqTitle": "Najczęściej Zadawane Pytania",
    "contactPage.faqDescription":
      "Odpowiedzi na pytania, które najczęściej otrzymujemy od naszych klientów",
    "contactPage.faq1Question": "Jak wcześnie należy dokonać rezerwacji?",
    "contactPage.faq1Answer":
      "Zalecamy rezerwację co najmniej 2 tygodnie przed planowanym eventem, szczególnie w sezonie letnim i okresie świątecznym.",
    "contactPage.faq2Question": "Czy ceny zawierają montaż i transport?",
    "contactPage.faq2Answer":
      "Tak, wszystkie nasze ceny zawierają montaż, demontaż oraz transport w promieniu 15km od Radomia. Za większe odległości pobieramy dodatkową opłatę.",
    "contactPage.faq3Question": "Co jeśli pogoda będzie niesprzyjająca?",
    "contactPage.faq3Answer":
      "Nasze namioty są odporne na warunki atmosferyczne. Dmuchańce można używać przy lekkim deszczu, ale nie podczas burzy ze względów bezpieczeństwa.",
    "contactPage.faq4Question": "Czy atrakcje są ubezpieczone?",
    "contactPage.faq4Answer":
      "Tak, wszystkie nasze atrakcje posiadają pełne ubezpieczenie OC. Dodatkowo regularnie przeprowadzamy przeglądy techniczne sprzętu.",
    "contactPage.faq5Question": "Jak wygląda proces rezerwacji?",
    "contactPage.faq5Answer":
      "Po kontakcie przygotowujemy wycenę, następnie wymagamy wpłaty zadatku 30%. Resztę kwoty można uregulować przy odbiorze sprzętu.",
    "aboutUsPage.heroTitle": "O Naszej Firmie",
    "aboutUsPage.heroDescription":
      "Jesteśmy firmą z pasją do tworzenia niezapomnianych chwil. Specializujemy się w wynajmie atrakcji eventowych, które sprawiają, że każda impreza staje się wyjątkowa.",
    "aboutUsPage.badgeFounded": "Radom i okolice od 2019 roku",
    "aboutUsPage.storyTitle": "Nasza Historia",
    "aboutUsPage.storyPara1":
      "'SŁODKOLANDIA wita:' powstała z prostego przekonania, że każde wydarzenie zasługuje na to, aby być niezapomnianym. Rozpoczęliśmy działalność w 2019 roku z jedną dmuchańcą i wielką pasją do organizacji eventów.",
    "aboutUsPage.storyPara2":
      "Dziś jesteśmy rozpoznawalną marką w Radomiu i okolicach, oferującą kompleksowy wynajem atrakcji eventowych. Nasze doświadczenie obejmuje eventy dla firm, wesela, urodziny dzieci, festyny miejskie i wiele innych okazji.",
    "aboutUsPage.storyPara3":
      "To, co nas wyróżnia, to indywidualne podejście do każdego klienta oraz nieustanna troska o bezpieczeństwo i jakość naszych usług.",
    "aboutUsPage.missionTitle": "🎯 Nasza Misja",
    "aboutUsPage.missionDescription":
      "Tworzymy niezapomniane momenty radości i zabawy, dostarczając najwyższej jakości atrakcje eventowe z pełną obsługą profesjonalną.",
    "aboutUsPage.visionTitle": "🔮 Nasza Wizja",
    "aboutUsPage.visionDescription":
      "Być pierwszym wyborem w regionie dla osób poszukujących profesjonalnych atrakcji eventowych i kompleksowej obsługi wydarzeń.",
    "aboutUsPage.valuesTitle": "Nasze Wartości",
    "aboutUsPage.valuesDescription":
      "Wartości, które wyznaczają nasz sposób działania i podejście do każdego klienta",
    "aboutUsPage.valuePassionTitle": "Pasja",
    "aboutUsPage.valuePassionDesc":
      "Każdy event traktujemy jako wyjątkowe wydarzenie. Wkładamy serce w to, co robimy.",
    "aboutUsPage.valueSafetyTitle": "Bezpieczeństwo",
    "aboutUsPage.valueSafetyDesc":
      "Priorytetem jest bezpieczeństwo naszych gości. Cały sprzęt jest certyfikowany i ubezpieczony.",
    "aboutUsPage.valueProfessionalismTitle": "Profesjonalizm",
    "aboutUsPage.valueProfessionalismDesc":
      "Punktualność, rzetelność i wysoka jakość usług to nasze znaki rozpoznawcze.",
    "aboutUsPage.valueQualityTitle": "Jakość",
    "aboutUsPage.valueQualityDesc":
      "Używamy tylko sprawdzonego sprzętu najwyższej jakości od renomowanych producentów.",
    "aboutUsPage.achievementsTitle": "Nasze Osiągnięcia",
    "aboutUsPage.achievementsDescription":
      "Liczby, które najlepiej opisują nasze doświadczenie i zaangażowanie",
    "aboutUsPage.achievementEvents": "Zrealizowanych eventów",
    "aboutUsPage.achievementExperience": "lat doświadczenia",
    "aboutUsPage.achievementAttractions": "rodzajów atrakcji",
    "aboutUsPage.achievementRadius": "promień obsługi",
    "aboutUsPage.achievementSatisfaction": "zadowolonych klientów",
    "aboutUsPage.achievementAvailability": "dostępność telefoniczna",
    "aboutUsPage.teamTitle": "Nasz Zespół",
    "aboutUsPage.teamDescription":
      "Grupa pasjonatów, którzy dbają o to, aby każdy event był perfekcyjny",
    "aboutUsPage.teamOwnerName": "Właściciel firmy",
    "aboutUsPage.teamOwnerRole": "Założyciel i kierownik projektów",
    "aboutUsPage.teamOwnerDesc":
      "5 lat doświadczenia w branży eventowej. Pasjonat tworzenia niezapomnianych chwil.",
    "aboutUsPage.teamAssemblyName": "Zespół montażowy",
    "aboutUsPage.teamAssemblyRole": "Specjaliści od montażu",
    "aboutUsPage.teamAssemblyDesc":
      "Doświadczeni technicy zapewniający szybki i bezpieczny montaż wszystkich atrakcji.",
    "aboutUsPage.teamSupportName": "Obsługa klienta",
    "aboutUsPage.teamSupportRole": "Konsultanci eventowi",
    "aboutUsPage.teamSupportDesc":
      "Pomożemy Ci w wyborze idealnych atrakcji i zaplanowaniu całego eventu.",
    "aboutUsPage.certsTitle": "Certyfikaty i Jakość",
    "aboutUsPage.certsDescription":
      "Bezpieczeństwo i jakość to podstawa naszej działalności. Wszystkie nasze atrakcje są regularnie kontrolowane i posiadają wymagane certyfikaty.",
    "aboutUsPage.certInsurance": "Ubezpieczenie OC",
    "aboutUsPage.certInsuranceDesc":
      "Pełne pokrycie odpowiedzialności cywilnej",
    "aboutUsPage.certEquipment": "Certyfikaty sprzętu",
    "aboutUsPage.certEquipmentDesc":
      "Wszystkie atrakcje posiadają wymagane certyfikaty",
    "aboutUsPage.certReviews": "Przeglądy techniczne",
    "aboutUsPage.certReviewsDesc": "Regularne kontrole bezpieczeństwa sprzętu",
    "aboutUsPage.certTraining": "Szkolenia zespołu",
    "aboutUsPage.certTrainingDesc":
      "Ciągłe podnoszenie kwalifikacji pracowników",
    "aboutUsPage.whyChooseUsTitle": "Dlaczego Klienci Nas Wybierają?",
    "aboutUsPage.whyChooseExperience": "Doświadczenie",
    "aboutUsPage.whyChooseExperienceDesc":
      "5 lat na rynku i setki udanych eventów",
    "aboutUsPage.whyChooseSafety": "Bezpieczeństwo",
    "aboutUsPage.whyChooseSafetyDesc":
      "Pełne ubezpieczenie i certyfikowany sprzęt",
    "aboutUsPage.whyChooseProfessionalism": "Profesjonalizm",
    "aboutUsPage.whyChooseProfessionalismDesc":
      "Punktualna dostawa i profesjonalna obsługa",
    "aboutUsPage.whyChooseIndividual": "Indywidualne podejście",
    "aboutUsPage.whyChooseIndividualDesc":
      "Każdy event traktujemy jako wyjątkowy",
    "offerPage.heroTitle": "Nasza Oferta Atrakcji Eventowych",
    "offerPage.heroDescription":
      "Odkryj pełną gamę profesjonalnych atrakcji i usług eventowych. Od namiotów imprezowych po kompleksową obsługę wydarzeń.",
    "offerPage.badgeLocation": "Radom i okolice (30km)",
    "offerPage.filterLabel": "Kategorie:",
    "offerPage.allAttractionsCount": "Wszystkie atrakcje ({count})",
    "offerPage.categoryAttractionsCount": "{categoryName} ({count})",
    "offerPage.noAttractionsTitle": "Brak atrakcji w tej kategorii",
    "offerPage.noAttractionsDescription":
      "Wybierz inną kategorię lub skontaktuj się z nami w sprawie indywidualnych rozwiązań.",
    "offerPage.sectionTentsTitle": "🏕️ Namioty Imprezowe",
    "offerPage.sectionTentsDescription":
      "Profesjonalne namioty w różnych rozmiarach, idealne na wesela, urodziny i eventy firmowe. Oferujemy pełny serwis montażu i demontażu z możliwością dodania podłogi i oświetlenia.",
    "offerPage.sectionInflatablesTitle": "🏰 Dmuchane Atrakcje",
    "offerPage.sectionInflatablesDescription":
      "Bezpieczne i certyfikowane dmuchańce dla dzieci. Zjeżdżalnie, zamki z profesjonalną obsługą i ubezpieczeniem OC.",
    "offerPage.sectionEquipmentTitle": "🍭 Sprzęt Cukierniczy",
    "offerPage.sectionEquipmentDescription":
      "Maszyny do waty cukrowej, popcornu i elegancka fontanna czekoladowa. Wszystko z profesjonalną obsługą i świeżymi produktami.",
    "offerPage.servicesIncludeTitle": "Co zawierają nasze usługi?",
    "offerPage.serviceTransport": "Transport i montaż",
    "offerPage.serviceTransportDesc": "Pełny serwis dostawy i ustawienia",
    "offerPage.serviceProfessional": "Profesjonalna obsługa",
    "offerPage.serviceProfessionalDesc": "Doświadczony personel podczas eventu",
    "offerPage.serviceInsurance": "Ubezpieczenie OC",
    "offerPage.serviceInsuranceDesc": "Pełne pokrycie ubezpieczeniowe",
    "offerPage.serviceCertified": "Certyfikowany sprzęt",
    "offerPage.serviceCertifiedDesc": "Bezpieczne i sprawne urządzenia",
    "offerPage.serviceFlexible": "Elastyczne terminy",
    "offerPage.serviceFlexibleDesc": "Dostosowane do Twoich potrzeb",
    "offerPage.serviceConsultations": "Konsultacje",
    "offerPage.serviceConsultationsDesc": "Pomoc w planowaniu eventu",
    "seo.homeTitle": "'SŁODKOLANDIA wita:' - Event Attraction Rental Radom",
    "seo.homeDescription":
      "Professional rental of party tents, inflatables, cotton candy, and popcorn in Radom and surroundings. Organize an unforgettable party!",
    "seo.offerTitle": "Offer - Event Attraction Rental | 'SŁODKOLANDIA wita:'",
    "seo.offerDescription":
      "Discover our full range of event attractions: party tents, inflatables, cotton candy, popcorn, chocolate fountains. Professional rental in Radom.",
    "seo.galleryTitle":
      "Photo Gallery - See Our Attractions in Action | 'SŁODKOLANDIA wita:'",
    "seo.galleryDescription":
      "View the photo gallery from our event productions. Party tents, inflatables, cotton candy, popcorn, and chocolate fountains in action.",
    "seo.pricingTitle":
      "Pricing for Event Attraction Rental | 'SŁODKOLANDIA wita:' Radom",
    "seo.pricingDescription":
      "Check current rental prices for party tents, inflatables, and catering equipment. Promotional packages and individual quotes.",
    "seo.contactTitle":
      "Contact - Event Attraction Rental Radom | 'SŁODKOLANDIA wita:'",
    "seo.contactDescription":
      "Contact us today! Phone: +48 531 890 827. Professional event attraction rental in Radom and surroundings.",
    "seo.aboutUsTitle":
      "About Us - 'SŁODKOLANDIA wita:' | Professional Event Attraction Rental Radom",
    "seo.aboutUsDescription":
      "Learn our history, values, and experience. 'SŁODKOLANDIA wita:' is a passion for creating unforgettable events in Radom and surroundings.",
    "attractionsData.namioty-imprezowe.name": "Namioty Imprezowe",
    "attractionsData.namioty-imprezowe.description":
      "Profesjonalne namioty imprezowe w różnych rozmiarach. Idealne na wesela, urodziny i eventy firmowe.",
    "attractionsData.dmuchane-atrakcje.name": "Dmuchane Atrakcje",
    "attractionsData.dmuchane-atrakcje.description":
      "Zjeżdżalnie, zamki dmuchane. Gwarantowana radość dla dzieci w każdym wieku!",
    "attractionsData.wata-cukrowa.name": "Wata Cukrowa",
    "attractionsData.wata-cukrowa.description":
      "Profesjonalne maszyny do waty cukrowej z kolorowymi smakami. Słodka atrakcja dla gości!",
    "attractionsData.popcorn.name": "Popcorn",
    "attractionsData.popcorn.description":
      "Maszyny do popcornu. Świeży, aromatyczny popcorn na Twoim evencie.",
    "attractionsData.fontanna-czekoladowa.name": "Fontanna Czekoladowa",
    "attractionsData.fontanna-czekoladowa.description":
      "Elegancka fontanna czekoladowa z dodatkami. Wykwintna atrakcja dla prawdziwych smakoszy.",
    "attractionsData.kompleksowa-obsluga.name": "Kompleksowa Obsługa Eventów",
    "attractionsData.kompleksowa-obsluga.description":
      "Pełna organizacja eventów z naszym doświadczonym zespołem. Od planowania po realizację.",
  },
  en: {
    "nav.home": "Home",
    "nav.about": "About Us",
    "nav.offer": "Offer",
    "nav.photo": "Photos",
    "nav.pricing": "Pricing",
    "nav.contact": "Contact",
    "nav.allAttractions": "All Attractions",
    "nav.tents": "Party Tents",
    "nav.inflatables": "Inflatables",
    "nav.popcorn": "Popcorn",
    "nav.cottonCandy": "Cotton Candy",
    "nav.chocolateFountain": "Chocolate Fountain",
    "nav.allPhotos": "All Photos",
    "nav.photoTents": "Tents",
    "nav.photoInflatables": "Inflatables",
    "nav.photoCottonCandy": "Cotton Candy",
    "nav.photoPopcorn": "Popcorn",
    "nav.photoFountains": "Chocolate Fountains",
    "nav.review": "Add Review",
    "hero.title": "SŁODKOLANDIA wita:",
    "hero.subtitle": "Unforgettable Attractions for Your Event!",
    "hero.description":
      "We guarantee great fun and professional service at every event!",
    "hero.seeOffer": "See our offer",
    "hero.askDate": "Ask about availability",
    "services.title": "Our Main Attractions",
    "services.description":
      "We offer comprehensive rental of event equipment and attractions that will make your party unforgettable",
    "services.seeAll": "See all attractions",
    "category.namioty": "tents",
    "category.dmuchance": "inflatables",
    "category.cukiernicze": "confectionery",
    "category.kompleksowa": "comprehensive",
    "category.gastro": "gastro",
    "category.inflatables": "inflatables",
    "category.confectionery": "confectionery",
    "whyUs.title": "Why 'SŁODKOLANDIA wita:'?",
    "whyUs.description":
      "We combine passion for creating unforgettable moments with a professional approach to every event",
    "whyUs.experience": "Experience",
    "whyUs.experienceDesc":
      "Years of experience in organizing events of various scales",
    "whyUs.safety": "Safety",
    "whyUs.safetyDesc":
      "Certified equipment and full insurance for every attraction",
    "whyUs.punctuality": "Punctuality",
    "whyUs.punctualityDesc":
      "Always on time - we meet delivery and assembly deadlines",
    "whyUs.individual": "Individual Approach",
    "whyUs.individualDesc": "Every event is unique - we adapt to your needs",
    "cta.mainTitle": "Let's organize your dream event together!",
    "cta.mainDescription":
      "Contact us today and check availability for your date. We guarantee professional service and unforgettable experiences!",
    "cta.contactForm": "Contact Form",
    "cta.secondaryTitle": "Ready for an unforgettable party?",
    "cta.secondaryDescription": "Contact us today and book your date!",
    "cta.callNow": "Call now",
    "cta.askForDate": "Ask for date",
    "home.stats.eventsOrganized": "Events organized",
    "home.stats.happyClientsMonthly": "Satisfied clients monthly",
    "home.stats.yearsExperience": "years of experience",
    "home.stats.serviceRadius": "service radius",
    "footer.companyName": "'SŁODKOLANDIA wita:'",
    "footer.companyDescription":
      "Professional rental of event attractions in Radom and surroundings. We create unforgettable moments for your guests!",
    "footer.quickLinks": "Quick Links",
    "footer.servicesTitle": "Our Services",
    "footer.serviceTents": "Party Tents",
    "footer.serviceInflatables": "Inflatables",
    "footer.serviceCottonCandy": "Cotton Candy",
    "footer.servicePopcorn": "Popcorn Machines",
    "footer.serviceFountains": "Chocolate Fountains",
    "footer.serviceComprehensive": "Comprehensive Service",
    "footer.contactTitle": "Contact",
    "footer.address": "Radom and surroundings",
    "footer.addressDetail": "(30km radius)", // Utrzymano promień z wersji PL
    "footer.copyright": "© {year} SŁODKOLANDIA. All rights reserved.",
    "footer.privacyPolicy": "Privacy Policy",
    "footer.terms": "Terms of Service",
    "attractionCard.details": "Details",
    "attractionCard.priceFrom": "from",
    "currencyUnit.zł": "PLN", // PLN jest bardziej międzynarodowe niż zł
    "pricing.perPeriod.dzień": "/ day",
    "pricing.perPeriod.impreza": "/ party", // Można by przetłumaczyć 'impreza' na 'event' lub 'party'
    "pricing.perPeriod.event": "/ event",
    "cookieConsent.message":
      "This site uses cookies to ensure the best quality of service. By continuing to browse, you agree to their use.",
    "cookieConsent.accept": "Accept",
    "cookieConsent.reject": "Reject",
    "inquiryForm.title": "Inquiry Form",
    "inquiryForm.nameLabel": "Name and surname *",
    "inquiryForm.namePlaceholder": "Your name and surname",
    "inquiryForm.nameError":
      "Name and surname must be at least 2 characters long",
    "inquiryForm.emailLabel": "Email *",
    "inquiryForm.emailPlaceholder": "your@email.com",
    "inquiryForm.emailError": "Invalid email address",
    "inquiryForm.phoneLabel": "Phone",
    "inquiryForm.phonePlaceholder": "+48 123 456 789",
    "inquiryForm.eventDateLabel": "Event date",
    "inquiryForm.attractionsLabel": "Interesting attractions",
    "inquiryForm.messageLabel": "Message *",
    "inquiryForm.messagePlaceholder":
      "Describe your event, number of guests, additional requirements...",
    "inquiryForm.messageError": "Message must be at least 10 characters long",
    "inquiryForm.submitButton": "Send Inquiry",
    "inquiryForm.submittingButton": "Sending...",
    "inquiryForm.successTitle": "Inquiry sent!",
    "inquiryForm.successDescription":
      "Thank you for your contact. We will reply within 24 hours.",
    "inquiryForm.errorTitle": "Sending error",
    "inquiryForm.errorDescription":
      "Sorry, there was a problem. Please try again or call us.",
    "inquiryForm.attractionOptionTents": "Party Tents",
    "inquiryForm.attractionOptionInflatables": "Inflatable Attractions",
    "inquiryForm.attractionOptionCottonCandy": "Cotton Candy",
    "inquiryForm.attractionOptionPopcorn": "Popcorn Machines",
    "inquiryForm.attractionOptionFountains": "Chocolate Fountains",
    "inquiryForm.attractionOptionComprehensive": "Comprehensive Service",
    "pricingPage.heroTitle": "Our Service Pricing",
    "pricingPage.heroDescription":
      "We offer competitive prices and individual quotes tailored to your budget and needs. All prices include transport within a 15km radius of Radom.",
    "pricingPage.badgeTransportFree15km": "🚚 Free transport up to 15km",
    "pricingPage.badgeSetupIncluded": "🛠️ Setup and dismantling included",
    "pricingPage.badgeInsuranceOC": "🛡️ Liability insurance",
    "pricingPage.packagesTitle": "Promotional Packages",
    "pricingPage.packagesDescription":
      "Save by renting attraction packages! The more you rent, the more you save.",
    "pricingPage.popularPackage": "Most Popular",
    "pricingPage.packageNormally": "Normally",
    "pricingPage.packageSave": "You save {amount} PLN",
    "pricingPage.packageIncludes": "Included in package:",
    "pricingPage.packageAsk": "Ask about package",
    "pricingPage.individualTitle": "Individual Pricing",
    "pricingPage.individualDescription":
      "Rental prices for individual attractions",
    "pricingPage.categoryAll": "All",
    "pricingPage.categoryGastro": "Gastro",
    "pricingPage.additionalServicesTitle": "Additional Services",
    "pricingPage.discountsTitle": "Discounts and Promotions",
    "pricingPage.discountPackages": "Event Packages",
    "pricingPage.discountPackagesDesc":
      "Rent 3 or more attractions and get a 15% discount!",
    "pricingPage.discountLongTerm": "Long-term Rental",
    "pricingPage.discountLongTermDesc":
      "Events longer than 2 days - special prices!",
    "pricingPage.discountLoyal": "Loyal Customers",
    "pricingPage.discountLoyalDesc": "Loyalty program for regular customers",
    "pricingPage.askForDiscount": "Ask for Discount",
    "pricingPage.importantInfoTitle": "Important Information",
    "pricingPage.rentalConditionsTitle": "📋 Rental Conditions",
    "pricingPage.rentalCondition1":
      "• Reservation requires a 30% deposit of the order value",
    "pricingPage.rentalCondition2":
      "• Minimum rental period - 1 day (24 hours) for tents, other attractions for the duration of the party",
    "pricingPage.rentalCondition3":
      "• Cancellation possible up to 48h before the event",
    "pricingPage.rentalCondition4": "• Prices include 23% VAT", // Można to usunąć dla EN lub zmienić na "Gross prices"
    "pricingPage.rentalCondition5":
      "• For events on public holidays - 20% surcharge",
    "pricingPage.transportSetupTitle": "🚚 Transport and Setup",
    "pricingPage.transportSetup1": "• Free transport up to 15km from Radom",
    "pricingPage.transportSetup2":
      "• Setup and dismantling during standard hours (8:00 AM - 8:00 PM)",
    "pricingPage.transportSetup3":
      "• Setup time: 1-4 hours depending on the attraction",
    "pricingPage.transportSetup4": "• Access to 230V power supply required",
    "pricingPage.transportSetup5": "• For inflatables - flat surface min. 4x4m",
    "pricingPage.packageChildName": "Kids Package",
    "pricingPage.packageChildDesc": "Perfect for a child's birthday",
    "pricingPage.packageChildItem1": "Bouncy castle",
    "pricingPage.packageChildItem2": "Cotton candy",
    "pricingPage.packageChildItem3": "Popcorn",
    "pricingPage.packageFamilyName": "Family Package",
    "pricingPage.packageFamilyDesc": "For larger family gatherings",
    "pricingPage.packageFamilyItem1": "Tent 6x12m",
    "pricingPage.packageFamilyItem2": "Inflatable slide",
    "pricingPage.packageFamilyItem3": "Cotton candy",
    "pricingPage.packageFamilyItem4": "Chocolate fountain",
    "pricingPage.packageEventName": "Event Package",
    "pricingPage.packageEventDesc": "Comprehensive service for larger events",
    "pricingPage.packageEventItem1": "Tent 10x20m",
    "pricingPage.packageEventItem2": "2x Inflatables",
    "pricingPage.packageEventItem3": "Cotton candy",
    "pricingPage.packageEventItem4": "Popcorn",
    "pricingPage.packageEventItem5": "Chocolate fountain",
    "pricingPage.packageEventItem6": "Service staff",
    "pricingPage.additionalServiceTransport15": "Transport (up to 15km)",
    "pricingPage.additionalServiceTransport30": "Transport (15-30km)",
    "pricingPage.additionalServiceTransportOver30": "Transport (over 30km)",
    "pricingPage.additionalServiceNightSetup": "Night-time setup",
    "pricingPage.additionalServiceExtendRental": "Extend rental (+1 day)",
    "pricingPage.additionalServiceOperator": "Additional operator",
    "pricingPage.unitPriceDefault": "PLN",
    "pricingPage.unitPriceKm": "PLN/km",
    "pricingPage.unitPricePercent": "% of base price",
    "galleryPage.heroTitle": "See Our Attractions in Action!",
    "galleryPage.heroDescription":
      "Photo gallery from our event productions. Discover how our attractions look at real parties and events in Radom and the surrounding area.",
    "galleryPage.badgeEventsDone": "Over 500 events completed",
    "galleryPage.filterLabel": "Categories:",
    "galleryPage.categoryAll": "All",
    "galleryPage.categoryTents": "Party Tents",
    "galleryPage.categoryInflatables": "Inflatable Attractions",
    "galleryPage.categoryCottonCandy": "Cotton Candy",
    "galleryPage.categoryPopcorn": "Popcorn",
    "galleryPage.categoryFountains": "Chocolate Fountains",
    "galleryPage.categoryEventSetups": "Event Productions",
    "galleryPage.sectionTentsTitle": "🏕️ Party Tents",
    "galleryPage.sectionTentsDesc":
      "Professional tents in various configurations - from intimate parties to large corporate events.",
    "galleryPage.sectionInflatablesTitle": "🏰 Inflatable Attractions",
    "galleryPage.sectionInflatablesDesc":
      "Safe fun for children - slides, bouncy castles, and playgrounds.",
    "galleryPage.sectionCottonCandyTitle": "🍭 Cotton Candy",
    "galleryPage.sectionCottonCandyDesc":
      "Colorful cotton candy in various flavors - a sweet attraction for guests of all ages.",
    "galleryPage.sectionPopcornTitle": "🍿 Popcorn",
    "galleryPage.sectionPopcornDesc":
      "Aromatic popcorn prepared live in machines.",
    "galleryPage.sectionFountainsTitle": "🍫 Chocolate Fountains",
    "galleryPage.sectionFountainsDesc":
      "Elegant chocolate fountains with toppings - an exquisite attraction for connoisseurs.",
    "galleryPage.sectionEventSetupsTitle": "🎉 Event Productions",
    "galleryPage.sectionEventSetupsDesc":
      "See what our comprehensive productions look like - from small parties to large events.",
    "galleryPage.currentCategoryInfo": "{count} photos in this category",
    "galleryPage.statsTitle": "Our Experience in Numbers",
    "galleryPage.statEvents": "Events completed",
    "galleryPage.statKids": "Happy children",
    "galleryPage.statAttractions": "Types of attractions",
    "galleryPage.statRadius": "Service radius",
    "contactPage.heroTitle": "Contact Us",
    "contactPage.heroDescription":
      "Let's organize your unforgettable party together! Contact us today and check availability for your date.",
    "contactPage.badgeQuickResponse": "⚡ Quick response",
    "contactPage.badgeFreeConsultation": "💬 Free consultation",
    "contactPage.badgeIndividualQuotes": "📋 Individual quotes",
    "contactPage.quickContactTitle":
      "Choose the Most Convenient Way to Contact Us",
    "contactPage.quickContactDescription":
      "We are available all week. We respond quickly to all inquiries!",
    "contactPage.phoneTitle": "Phone",
    "contactPage.phoneDescription": "Fastest contact",
    "contactPage.emailTitle": "Email",
    "contactPage.emailDescription": "Write to us",
    "contactPage.whatsappTitle": "WhatsApp",
    "contactPage.whatsappDescription": "Quick message",
    "contactPage.meetingTitle": "Meeting",
    "contactPage.meetingDescription": "Arrange a presentation",
    "contactPage.meetingDetails": "By prior contact",
    "contactPage.callToActionTitle": "Call us now!",
    "contactPage.callToActionDescription":
      "We will check date availability and prepare an individual quote",
    "contactPage.workingHoursTitle": "Working Hours",
    "contactPage.workingHoursNote":
      "Note: For urgent matters, we are also available outside working hours.",
    "contactPage.workingHoursMonFri": "Monday - Friday",
    "contactPage.workingHoursSat": "Saturday",
    "contactPage.workingHoursSun": "Sunday",
    "contactPage.workingHoursHoliday": "Public holidays",
    "contactPage.workingHoursMonFriTime": "8:00 AM - 8:00 PM",
    "contactPage.workingHoursSatTime": "9:00 AM - 6:00 PM",
    "contactPage.workingHoursSunTime": "10:00 AM - 4:00 PM",
    "contactPage.workingHoursHolidayTime": "By appointment",
    "contactPage.serviceAreaTitle": "Service Area",
    "contactPage.serviceAreaNote":
      "We also serve other cities! Contact us to arrange transport conditions.",
    "contactPage.serviceAreaRadom": "Radom",
    "contactPage.serviceAreaRadomDist": "0km",
    "contactPage.serviceAreaRadomNote": "Company headquarters",
    "contactPage.serviceAreaBialobrzegi": "Białobrzegi",
    "contactPage.serviceAreaBialobrzegiDist": "25km",
    "contactPage.serviceAreaBialobrzegiNote": "Free transport",
    "contactPage.serviceAreaSzydlowiec": "Szydłowiec",
    "contactPage.serviceAreaSzydlowiecDist": "30km",
    "contactPage.serviceAreaSzydlowiecNote": "Free transport",
    "contactPage.serviceAreaKozienice": "Kozienice",
    "contactPage.serviceAreaKozieniceDist": "35km",
    "contactPage.serviceAreaKozieniceNote": "Additional fee",
    "contactPage.serviceAreaOstrowiec": "Ostrowiec Św.",
    "contactPage.serviceAreaOstrowiecDist": "40km",
    "contactPage.serviceAreaOstrowiecNote": "Additional fee",
    "contactPage.serviceAreaSkarzysko": "Skarżysko-Kamienna",
    "contactPage.serviceAreaSkarzyskoDist": "45km",
    "contactPage.serviceAreaSkarzyskoNote": "Additional fee",
    "contactPage.additionalInfoTitle": "Additional Information",
    "contactPage.infoViewingTitle": "Equipment viewing",
    "contactPage.infoViewingDesc":
      "Possibility to view attractions before renting",
    "contactPage.infoFreeQuoteTitle": "Free quote",
    "contactPage.infoFreeQuoteDesc":
      "We will prepare a free offer tailored to your needs",
    "contactPage.infoConsultationsTitle": "Consultations",
    "contactPage.infoConsultationsDesc":
      "We will help in planning the entire event",
    "contactPage.infoOnlineBookingTitle": "Online booking",
    "contactPage.infoOnlineBookingDesc":
      "Possibility to book via form or phone",
    "contactPage.faqTitle": "Frequently Asked Questions",
    "contactPage.faqDescription":
      "Answers to questions we most often receive from our clients",
    "contactPage.faq1Question": "How early should I make a reservation?",
    "contactPage.faq1Answer":
      "We recommend booking at least 2 weeks before the planned event, especially during the summer season and holidays.",
    "contactPage.faq2Question": "Do prices include setup and transport?",
    "contactPage.faq2Answer":
      "Yes, all our prices include setup, dismantling, and transport within a 15km radius of Radom. We charge an additional fee for longer distances.",
    "contactPage.faq3Question": "What if the weather is unfavorable?",
    "contactPage.faq3Answer":
      "Our tents are weather-resistant. Inflatables can be used in light rain, but not during a storm for safety reasons.",
    "contactPage.faq4Question": "Are the attractions insured?",
    "contactPage.faq4Answer":
      "Yes, all our attractions have full liability insurance. Additionally, we regularly conduct technical inspections of the equipment.",
    "contactPage.faq5Question": "What is the reservation process?",
    "contactPage.faq5Answer":
      "After contact, we prepare a quote, then we require a 30% deposit. The remaining amount can be settled upon equipment pickup.",
    "aboutUsPage.heroTitle": "About Our Company",
    "aboutUsPage.heroDescription":
      "We are a company with a passion for creating unforgettable moments. We specialize in renting event attractions that make every party unique.",
    "aboutUsPage.badgeFounded": "Radom and surroundings since 2019",
    "aboutUsPage.storyTitle": "Our Story",
    "aboutUsPage.storyPara1":
      "SŁODKOLANDIA was founded on the simple belief that every event deserves to be unforgettable. We started in 2019 with one inflatable and a great passion for organizing events.",
    "aboutUsPage.storyPara2":
      "Today, we are a recognizable brand in Radom and the surrounding areas, offering comprehensive rental of event attractions. Our experience includes corporate events, weddings, children's birthdays, city festivals, and many other occasions.",
    "aboutUsPage.storyPara3":
      "What sets us apart is our individual approach to each client and our constant concern for the safety and quality of our services.",
    "aboutUsPage.missionTitle": "🎯 Our Mission",
    "aboutUsPage.missionDescription":
      "We create unforgettable moments of joy and fun by providing the highest quality event attractions with full professional service.",
    "aboutUsPage.visionTitle": "🔮 Our Vision",
    "aboutUsPage.visionDescription":
      "To be the first choice in the region for people looking for professional event attractions and comprehensive event management.",
    "aboutUsPage.valuesTitle": "Our Values",
    "aboutUsPage.valuesDescription":
      "The values that guide our way of working and our approach to every client",
    "aboutUsPage.valuePassionTitle": "Passion",
    "aboutUsPage.valuePassionDesc":
      "We treat every event as a unique occasion. We put our heart into what we do.",
    "aboutUsPage.valueSafetyTitle": "Safety",
    "aboutUsPage.valueSafetyDesc":
      "The safety of our guests is a priority. All equipment is certified and insured.",
    "aboutUsPage.valueProfessionalismTitle": "Professionalism",
    "aboutUsPage.valueProfessionalismDesc":
      "Punctuality, reliability, and high-quality services are our hallmarks.",
    "aboutUsPage.valueQualityTitle": "Quality",
    "aboutUsPage.valueQualityDesc":
      "We use only proven, top-quality equipment from reputable manufacturers.",
    "aboutUsPage.achievementsTitle": "Our Achievements",
    "aboutUsPage.achievementsDescription":
      "Numbers that best describe our experience and commitment",
    "aboutUsPage.achievementEvents": "Events completed",
    "aboutUsPage.achievementExperience": "years of experience",
    "aboutUsPage.achievementAttractions": "types of attractions",
    "aboutUsPage.achievementRadius": "service radius",
    "aboutUsPage.achievementSatisfaction": "satisfied clients",
    "aboutUsPage.achievementAvailability": "phone availability",
    "aboutUsPage.teamTitle": "Our Team",
    "aboutUsPage.teamDescription":
      "A group of enthusiasts who ensure every event is perfect",
    "aboutUsPage.teamOwnerName": "Company Owner",
    "aboutUsPage.teamOwnerRole": "Founder and Project Manager",
    "aboutUsPage.teamOwnerDesc":
      "5 years of experience in the event industry. Passionate about creating unforgettable moments.",
    "aboutUsPage.teamAssemblyName": "Assembly Team",
    "aboutUsPage.teamAssemblyRole": "Assembly Specialists",
    "aboutUsPage.teamAssemblyDesc":
      "Experienced technicians ensuring quick and safe assembly of all attractions.",
    "aboutUsPage.teamSupportName": "Customer Support",
    "aboutUsPage.teamSupportRole": "Event Consultants",
    "aboutUsPage.teamSupportDesc":
      "We will help you choose the ideal attractions and plan the entire event.",
    "aboutUsPage.certsTitle": "Certificates and Quality",
    "aboutUsPage.certsDescription":
      "Safety and quality are the foundation of our business. All our attractions are regularly inspected and have the required certificates.",
    "aboutUsPage.certInsurance": "Liability Insurance",
    "aboutUsPage.certInsuranceDesc": "Full civil liability coverage",
    "aboutUsPage.certEquipment": "Equipment Certificates",
    "aboutUsPage.certEquipmentDesc":
      "All attractions have the required certificates",
    "aboutUsPage.certReviews": "Technical Inspections",
    "aboutUsPage.certReviewsDesc": "Regular safety checks of equipment",
    "aboutUsPage.certTraining": "Team Training",
    "aboutUsPage.certTrainingDesc":
      "Continuous improvement of employee qualifications",
    "aboutUsPage.whyChooseUsTitle": "Why Clients Choose Us?",
    "aboutUsPage.whyChooseExperience": "Experience",
    "aboutUsPage.whyChooseExperienceDesc":
      "5 years on the market and hundreds of successful events",
    "aboutUsPage.whyChooseSafety": "Safety",
    "aboutUsPage.whyChooseSafetyDesc": "Full insurance and certified equipment",
    "aboutUsPage.whyChooseProfessionalism": "Professionalism",
    "aboutUsPage.whyChooseProfessionalismDesc":
      "Punctual delivery and professional service",
    "aboutUsPage.whyChooseIndividual": "Individual Approach",
    "aboutUsPage.whyChooseIndividualDesc": "We treat every event as unique",
    "offerPage.heroTitle": "Our Event Attraction Offer",
    "offerPage.heroDescription":
      "Discover our full range of professional event attractions and services. From party tents to comprehensive event management.",
    "offerPage.badgeLocation": "Radom and surroundings (30km)",
    "offerPage.filterLabel": "Categories:",
    "offerPage.allAttractionsCount": "All attractions ({count})",
    "offerPage.categoryAttractionsCount": "{categoryName} ({count})",
    "offerPage.noAttractionsTitle": "No attractions in this category",
    "offerPage.noAttractionsDescription":
      "Choose another category or contact us for individual solutions.",
    "offerPage.sectionTentsTitle": "🏕️ Party Tents",
    "offerPage.sectionTentsDescription":
      "Professional tents in various sizes, ideal for weddings, birthdays, and corporate events. We offer full assembly and dismantling service with options for flooring and lighting.",
    "offerPage.sectionInflatablesTitle": "🏰 Inflatable Attractions",
    "offerPage.sectionInflatablesDescription":
      "Safe and certified inflatables for children. Slides, castles, and playgrounds with professional service and liability insurance.",
    "offerPage.sectionEquipmentTitle": "🍭 Confectionery Equipment",
    "offerPage.sectionEquipmentDescription":
      "Cotton candy and popcorn machines, and elegant chocolate fountains. All with professional service and fresh products.",
    "offerPage.servicesIncludeTitle": "What do our services include?",
    "offerPage.serviceTransport": "Transport and assembly",
    "offerPage.serviceTransportDesc": "Full delivery and setup service",
    "offerPage.serviceProfessional": "Professional service",
    "offerPage.serviceProfessionalDesc": "Experienced staff during the event",
    "offerPage.serviceInsurance": "Liability insurance",
    "offerPage.serviceInsuranceDesc": "Full insurance coverage",
    "offerPage.serviceCertified": "Certified equipment",
    "offerPage.serviceCertifiedDesc": "Safe and functional devices",
    "offerPage.serviceFlexible": "Flexible dates",
    "offerPage.serviceFlexibleDesc": "Tailored to your needs",
    "offerPage.serviceConsultations": "Consultations",
    "offerPage.serviceConsultationsDesc": "Help in planning the event",
    "seo.homeTitle": "'SŁODKOLANDIA wita:'- Event Attraction Rental Radom",
    "seo.homeDescription":
      "Professional rental of party tents, inflatables, cotton candy, and popcorn in Radom and surroundings. Organize an unforgettable party!",
    "seo.offerTitle": "Offer - Event Attraction Rental | 'SŁODKOLANDIA wita:'",
    "seo.offerDescription":
      "Discover our full range of event attractions: party tents, inflatables, cotton candy, popcorn, chocolate fountains. Professional rental in Radom.",
    "seo.galleryTitle":
      "Photo Gallery - See Our Attractions in Action | 'SŁODKOLANDIA wita:'",
    "seo.galleryDescription":
      "View the photo gallery from our event productions. Party tents, inflatables, cotton candy, popcorn, and chocolate fountains in action.",
    "seo.pricingTitle":
      "Pricing for Event Attraction Rental | 'SŁODKOLANDIA wita:' Radom",
    "seo.pricingDescription":
      "Check current rental prices for party tents, inflatables, and catering equipment. Promotional packages and individual quotes.",
    "seo.contactTitle":
      "Contact - Event Attraction Rental Radom | SŁODKOLANDIA",
    "seo.contactDescription":
      "Contact us today! Phone: +48 505 977 940. Professional event attraction rental in Radom and surroundings.", // Popraw numer telefonu jeśli trzeba
    "seo.aboutUsTitle":
      "About Us - 'SŁODKOLANDIA wita:' | Professional Event Attraction Rental Radom",
    "seo.aboutUsDescription":
      "Learn our history, values, and experience. 'SŁODKOLANDIA wita:' is a passion for creating unforgettable events in Radom and surroundings.",
    "attractionsData.namioty-imprezowe.name": "Party Tents",
    "attractionsData.namioty-imprezowe.description":
      "Professional party tents in various sizes. Perfect for weddings, birthdays, and corporate events.",
    "attractionsData.dmuchane-atrakcje.name": "Inflatable Attractions",
    "attractionsData.dmuchane-atrakcje.description":
      "Slides, bouncy castles, and playgrounds. Guaranteed fun for children of all ages!",
    "attractionsData.wata-cukrowa.name": "Cotton Candy",
    "attractionsData.wata-cukrowa.description":
      "Professional cotton candy machines with colorful flavors. A sweet treat for guests!",
    "attractionsData.popcorn.name": "Popcorn",
    "attractionsData.popcorn.description":
      "Popcorn machines. Fresh, aromatic popcorn at your event.",
    "attractionsData.fontanna-czekoladowa.name": "Chocolate Fountains",
    "attractionsData.fontanna-czekoladowa.description":
      "Elegant chocolate fountains with toppings. An exquisite attraction for true connoisseurs.",
    "attractionsData.kompleksowa-obsluga.name": "Comprehensive Event Service",
    "attractionsData.kompleksowa-obsluga.description":
      "Full event organization with our experienced team. From planning to execution.",
  },
};

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({
  children,
}) => {
  const [currentWouterLocation] = useLocation(); // Nie potrzebujemy navigateWouter tutaj

  // Inicjalizacja języka na podstawie URL z paska adresu
  const [language, setLanguageState] = useState<Language>(() => {
    const { lang: langFromUrl } = findPageKeyByPath(
      window.location.pathname + window.location.hash
    );
    return langFromUrl || "pl"; // Domyślnie 'pl'
  });

  // Efekt do synchronizacji stanu języka z URL, gdy użytkownik używa przycisków przeglądarki (wstecz/dalej)
  useEffect(() => {
    const handlePopState = () => {
      const { lang: langFromNewUrl } = findPageKeyByPath(
        window.location.pathname + window.location.hash
      );
      if (langFromNewUrl && langFromNewUrl !== language) {
        setLanguageState(langFromNewUrl);
      }
    };

    window.addEventListener("popstate", handlePopState);
    return () => {
      window.removeEventListener("popstate", handlePopState);
    };
  }, [language]); // Zależność od `language`, aby poprawnie usuwać i dodawać listener

  // Efekt do synchronizacji URL z językiem przy pierwszym renderowaniu, jeśli URL nie jest zlokalizowany
  useEffect(() => {
    const {
      pageKey,
      lang: langFromUrl,
      hash,
    } = findPageKeyByPath(window.location.pathname + window.location.hash);
    if (pageKey && !langFromUrl) {
      // Jeśli URL jest kanoniczny (np. /o-nas) a powinien być zlokalizowany
      const localizedPath = getLocalizedPath(
        pageKey,
        language,
        hash as HashKey | undefined
      );
      if (
        window.location.pathname + (window.location.hash || "") !==
        localizedPath
      ) {
        window.history.replaceState({}, "", localizedPath);
      }
    }
  }, [language]); // Uruchom przy zmianie języka

  const setLanguage = (newLang: Language) => {
    // 1. Pobierz aktualny klucz strony i hash z obecnego URL w pasku adresu
    const { pageKey, hash: currentHashValue } = findPageKeyByPath(
      window.location.pathname + window.location.hash
    );

    // 2. Ustaw nowy język w stanie React
    setLanguageState(newLang);

    if (pageKey) {
      // 3. Wygeneruj nową, zlokalizowaną ścieżkę dla nowo wybranego języka
      // Ta funkcja powinna poprawnie zlokalizować również hash, jeśli jest zdefiniowany w hashSlugs
      const newLocalizedPath = getLocalizedPath(
        pageKey,
        newLang,
        currentHashValue as HashKey | undefined
      );

      // 4. Zaktualizuj URL w pasku adresu przeglądarki bez przeładowania strony
      if (
        window.location.pathname + (window.location.hash || "") !==
        newLocalizedPath
      ) {
        window.history.pushState({}, "", newLocalizedPath);
      }
      // Po tej zmianie, useEffect w AppRoutes powinien wykryć zmianę window.location
      // i odpowiednio zaktualizować wewnętrzną ścieżkę woutera (jeśli to konieczne).
    } else {
      // Jeśli nie można określić bieżącej strony (np. jesteśmy na nieznanym URL),
      // przekieruj na stronę główną w nowym języku.
      const homePath = getLocalizedPath("HOME", newLang);
      if (
        window.location.pathname + (window.location.hash || "") !==
        homePath
      ) {
        window.history.pushState({}, "", homePath);
      }
    }
  };

  const t = (
    key: string,
    replacements?: Record<string, string | number>
  ): string => {
    let translation = translations[language]?.[key] || key;
    if (replacements) {
      Object.keys(replacements).forEach((placeholder) => {
        const regex = new RegExp(`{${placeholder}}`, "g");
        translation = translation.replace(
          regex,
          String(replacements[placeholder])
        );
      });
    }
    return translation;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};


---------------------

export type Language = "pl" | "en";

export type PageKey =
  | "HOME"
  | "ABOUT"
  | "OFFER"
  | "GALLERY"
  | "PRICING"
  | "CONTACT"
  | "PRIVACY_POLICY"
  | "TERMS"
  | "NOT_FOUND";

export type OfferHashKey =
  | "TENTS"
  | "INFLATABLES"
  | "POPCORN"
  | "COTTON_CANDY"
  | "CHOCOLATE_FOUNTAIN";

export type GalleryHashKey =
  | "PHOTO_TENTS"
  | "PHOTO_INFLATABLES"
  | "PHOTO_COTTON_CANDY"
  | "PHOTO_POPCORN"
  | "PHOTO_FOUNTAINS";

export type HashKey = OfferHashKey | GalleryHashKey;

const internalBasePaths: Record<PageKey, Record<Language, string>> = {
  HOME: { pl: "/", en: "/" },
  ABOUT: { pl: "/o-nas", en: "/about-us" },
  OFFER: { pl: "/oferta", en: "/offer" },
  GALLERY: { pl: "/galeria", en: "/gallery" },
  PRICING: { pl: "/cennik", en: "/pricing" },
  CONTACT: { pl: "/kontakt", en: "/contact" },
  PRIVACY_POLICY: { pl: "/polityka-prywatnosci", en: "/privacy-policy" },
  TERMS: { pl: "/regulamin", en: "/terms-of-service" },
  NOT_FOUND: { pl: "/404", en: "/404" },
};

export const hashSlugs: Record<HashKey, Record<Language, string>> = {
  TENTS: { pl: "namioty", en: "tents" },
  INFLATABLES: { pl: "dmuchance", en: "inflatables" },
  POPCORN: { pl: "popcorn", en: "popcorn" },
  COTTON_CANDY: { pl: "wata-cukrowa", en: "cotton-candy" },
  CHOCOLATE_FOUNTAIN: { pl: "fontanna-czekoladowa", en: "chocolate-fountain" },
  PHOTO_TENTS: { pl: "foto-namioty", en: "photo-tents" },
  PHOTO_INFLATABLES: { pl: "foto-dmuchance", en: "photo-inflatables" },
  PHOTO_COTTON_CANDY: { pl: "foto-wata", en: "photo-cotton-candy" },
  PHOTO_POPCORN: { pl: "foto-popcorn", en: "photo-popcorn" },
  PHOTO_FOUNTAINS: { pl: "foto-fontanny", en: "photo-fountains" },
};

export function getInternalBasePath(pageKey: PageKey, lang: Language): string {
  return (
    internalBasePaths[pageKey]?.[lang] ||
    internalBasePaths[pageKey]?.["pl"] ||
    internalBasePaths["NOT_FOUND"]["pl"]
  );
}

export function getPrefixedBasePath(pageKey: PageKey, lang: Language): string {
  const base = getInternalBasePath(pageKey, lang);

  return `/${lang}${base === "/" && lang ? "" : base}`;
}

export function getHashSlug(hashKey: HashKey, lang: Language): string {
  return hashSlugs[hashKey]?.[lang] || hashSlugs[hashKey]?.["pl"] || "";
}

export function getLocalizedPath(
  pageKey: PageKey,
  lang: Language,
  hashKey?: HashKey
): string {
  let path = getPrefixedBasePath(pageKey, lang);
  if (hashKey) {
    const slug = getHashSlug(hashKey, lang);
    if (slug) {
      path += `#${slug}`;
    }
  }
  return path;
}

export function findPageKeyByLocalizedPath(currentFullPath: string): {
  pageKey: PageKey | null;
  lang: Language | null;
  hashKey: HashKey | null;
  hashSlug: string | null;
} {
  const [pathAndQuery, hashValue] = currentFullPath.split("#");
  const pathSegments = pathAndQuery.split("?")[0].split("/").filter(Boolean);

  if (pathSegments.length === 0) {
    return { pageKey: "HOME", lang: null, hashKey: null, hashSlug: null };
  }

  const langFromUrl = pathSegments[0] as Language;

  if (langFromUrl !== "pl" && langFromUrl !== "en") {
    return { pageKey: null, lang: null, hashKey: null, hashSlug: null };
  }

  const internalPath =
    pathSegments.length === 1 && internalBasePaths["HOME"][langFromUrl] === "/"
      ? "/"
      : `/${pathSegments.slice(1).join("/")}`;

  for (const key in internalBasePaths) {
    const pageKey = key as PageKey;
    if (internalBasePaths[pageKey]?.[langFromUrl] === internalPath) {
      let originalHashKeyFound: HashKey | null = null;
      if (hashValue) {
        for (const hKey in hashSlugs) {
          const currentHashKey = hKey as HashKey;
          if (hashSlugs[currentHashKey]?.[langFromUrl] === hashValue) {
            originalHashKeyFound = currentHashKey;
            break;
          }
        }
      }
      return {
        pageKey,
        lang: langFromUrl,
        hashKey: originalHashKeyFound,
        hashSlug: hashValue || null,
      };
    }
  }

  return {
    pageKey: "NOT_FOUND",
    lang: langFromUrl,
    hashKey: null,
    hashSlug: null,
  };
}

---------------------------

// client/src/config/paths.ts

// Zakładamy, że Language jest tutaj zdefiniowane i eksportowane
export type Language = "pl" | "en";

export type PageKey =
  | "HOME"
  | "ABOUT"
  | "OFFER"
  | "GALLERY"
  | "PRICING"
  | "CONTACT"
  | "PRIVACY_POLICY"
  | "TERMS"
  | "NOT_FOUND";

export type OfferHashKey =
  | "TENTS"
  | "INFLATABLES"
  | "POPCORN"
  | "COTTON_CANDY"
  | "CHOCOLATE_FOUNTAIN";

export type GalleryHashKey =
  | "PHOTO_TENTS"
  | "PHOTO_INFLATABLES"
  | "PHOTO_COTTON_CANDY"
  | "PHOTO_POPCORN"
  | "PHOTO_FOUNTAINS";

export type HashKey = OfferHashKey | GalleryHashKey;

// Ścieżki bazowe BEZ prefiksu językowego - te pozostają takie same
const internalBasePaths: Record<PageKey, Record<Language, string>> = {
  HOME: { pl: "/", en: "/" },
  ABOUT: { pl: "/o-nas", en: "/about-us" },
  OFFER: { pl: "/oferta", en: "/offer" },
  GALLERY: { pl: "/galeria", en: "/gallery" },
  PRICING: { pl: "/cennik", en: "/pricing" },
  CONTACT: { pl: "/kontakt", en: "/contact" },
  PRIVACY_POLICY: { pl: "/polityka-prywatnosci", en: "/privacy-policy" },
  TERMS: { pl: "/regulamin", en: "/terms-of-service" },
  NOT_FOUND: { pl: "/404", en: "/404" },
};

export const hashSlugs: Record<HashKey, Record<Language, string>> = {
  TENTS: { pl: "namioty", en: "tents" },
  INFLATABLES: { pl: "dmuchance", en: "inflatables" },
  POPCORN: { pl: "popcorn", en: "popcorn" },
  COTTON_CANDY: { pl: "wata-cukrowa", en: "cotton-candy" },
  CHOCOLATE_FOUNTAIN: { pl: "fontanna-czekoladowa", en: "chocolate-fountain" },
  PHOTO_TENTS: { pl: "foto-namioty", en: "photo-tents" },
  PHOTO_INFLATABLES: { pl: "foto-dmuchance", en: "photo-inflatables" },
  PHOTO_COTTON_CANDY: { pl: "foto-wata", en: "photo-cotton-candy" },
  PHOTO_POPCORN: { pl: "foto-popcorn", en: "photo-popcorn" },
  PHOTO_FOUNTAINS: { pl: "foto-fontanny", en: "photo-fountains" },
};

// Ta funkcja pozostaje bez zmian, zwraca ścieżkę specyficzną dla języka, ale bez prefiksu /pl lub /en
export function getInternalBasePath(pageKey: PageKey, lang: Language): string {
  return (
    internalBasePaths[pageKey]?.[lang] ||
    internalBasePaths[pageKey]?.["pl"] ||
    internalBasePaths["NOT_FOUND"]["pl"]
  );
}

// ZMODYFIKOWANA: Dodaje prefiks tylko dla języków innych niż domyślny (pl)
export function getPrefixedBasePath(pageKey: PageKey, lang: Language): string {
  const base = getInternalBasePath(pageKey, lang);
  if (lang === "pl") {
    // Jeśli język to polski (domyślny)
    return base; // Zwróć ścieżkę bazową bez prefiksu
  }
  // Dla innych języków dodaj prefiks
  return `/${lang}${base === "/" ? "" : base}`; // Unikamy /en// dla strony głównej EN
}

export function getHashSlug(hashKey: HashKey, lang: Language): string {
  return hashSlugs[hashKey]?.[lang] || hashSlugs[hashKey]?.["pl"] || "";
}

// getLocalizedPath używa getPrefixedBasePath, więc automatycznie będzie działać poprawnie
export function getLocalizedPath(
  pageKey: PageKey,
  lang: Language,
  hashKey?: HashKey
): string {
  let path = getPrefixedBasePath(pageKey, lang);
  if (hashKey) {
    const slug = getHashSlug(hashKey, lang);
    if (slug) {
      path += `#${slug}`;
    }
  }
  return path;
}

// ZMODYFIKOWANA: Musi teraz obsługiwać ścieżki z prefiksem (dla en) i bez (dla pl)
export function findPageKeyByLocalizedPath(currentFullPath: string): {
  pageKey: PageKey | null;
  lang: Language | null;
  hashKey: HashKey | null;
  hashSlug: string | null;
} {
  const [pathAndQuery, hashValue] = currentFullPath.split("#");
  const pathOnly = pathAndQuery.split("?")[0]; // Czysta ścieżka bez query i hasha
  const pathSegments = pathOnly.split("/").filter(Boolean);

  let detectedLang: Language | null = null;
  let internalPathToMatch: string = pathOnly; // Domyślnie cała ścieżka, jeśli nie ma prefiksu

  if (pathSegments.length > 0 && pathSegments[0] === "en") {
    // Tylko 'en' ma jawny prefiks
    detectedLang = pathSegments[0] as Language;
    internalPathToMatch =
      pathSegments.length === 1 &&
      internalBasePaths["HOME"][detectedLang] === "/"
        ? "/"
        : `/${pathSegments.slice(1).join("/")}`;
  } else if (pathSegments.length === 0 && pathOnly === "/") {
    // Ścieżka root "/"
    detectedLang = "pl"; // Zakładamy, że root to polski
    internalPathToMatch = "/";
  } else if (pathSegments.length > 0 && pathSegments[0] !== "en") {
    // Brak prefiksu 'en', zakładamy, że to polski
    detectedLang = "pl";
    internalPathToMatch = pathOnly; // np. /o-nas
  } else {
    // Przypadek, gdy URL to tylko np. "/en" (bez dalszej ścieżki)
    if (pathSegments.length === 1 && pathSegments[0] === "en") {
      detectedLang = "en";
      internalPathToMatch = "/"; // Strona główna dla /en
    } else {
      // Nie udało się ustalić języka lub ścieżka jest niepoprawna
      return { pageKey: null, lang: null, hashKey: null, hashSlug: null };
    }
  }

  // Jeśli język został wykryty, szukamy pasującego PageKey
  if (detectedLang) {
    for (const key in internalBasePaths) {
      const pageKey = key as PageKey;
      if (internalBasePaths[pageKey]?.[detectedLang] === internalPathToMatch) {
        let originalHashKeyFound: HashKey | null = null;
        if (hashValue) {
          for (const hKey in hashSlugs) {
            const currentHashKey = hKey as HashKey;
            if (hashSlugs[currentHashKey]?.[detectedLang] === hashValue) {
              originalHashKeyFound = currentHashKey;
              break;
            }
          }
        }
        return {
          pageKey,
          lang: detectedLang,
          hashKey: originalHashKeyFound,
          hashSlug: hashValue || null,
        };
      }
    }
    // Jeśli był poprawny język, ale nie znaleziono ścieżki, to 404 dla tego języka
    return {
      pageKey: "NOT_FOUND",
      lang: detectedLang,
      hashKey: null,
      hashSlug: null,
    };
  }

  // Ostateczny fallback, jeśli nic nie pasuje
  return { pageKey: null, lang: null, hashKey: null, hashSlug: null };
}

---------------------

import React, { createContext, useContext, useState, ReactNode } from "react";

import {
  PageKey,
  Language,
  getLocalizedPath,
  findPageKeyByLocalizedPath,
  HashKey,
} from "@/config/paths";

interface LanguageContextType {
  language: Language; // Używa zaimportowanego typu Language
  setLanguage: (
    lang: Language,
    options?: { preventNavigation?: boolean }
  ) => void;
  t: (key: string, replacements?: Record<string, string | number>) => string;
}

// ... reszta kodu LanguageProvider, translations, useLanguage ...
// (kod tłumaczeń i LanguageContext, LanguageProvider, useLanguage bez zmian)
const translations: Record<Language, Record<string, string>> = {
  pl: {
    "nav.home": "Start",
    "nav.about": "O Nas",
    "nav.offer": "Oferta",
    "nav.photo": "Foto",
    "nav.pricing": "Cennik",
    "nav.contact": "Kontakt",
    "nav.allAttractions": "Wszystkie Atrakcje",
    "nav.tents": "Namioty Imprezowe",
    "nav.inflatables": "Dmuchańce",
    "nav.popcorn": "Popcorn",
    "nav.cottonCandy": "Wata Cukrowa",
    "nav.chocolateFountain": "Fontanna Czekoladowa",
    "nav.allPhotos": "Wszystkie Zdjęcia",
    "nav.photoTents": "Namioty",
    "nav.photoInflatables": "Dmuchańce",
    "nav.photoCottonCandy": "Wata Cukrowa",
    "nav.photoPopcorn": "Popcorn",
    "nav.photoFountains": "Fontanny Czekoladowe",
    "nav.review": "Dodaj opinię",
    "hero.title": "SŁODKOLANDIA wita:",
    "hero.subtitle": "Niezapomniane Atrakcje na Twoją Imprezę!",
    "hero.description":
      "Gwarantujemy świetną zabawę i profesjonalną obsługę na każdym evencie!",
    "hero.seeOffer": "Zobacz naszą ofertę",
    "hero.askDate": "Zapytaj o termin",
    "services.title": "Nasze Główne Atrakcje",
    "services.description":
      "Oferujemy kompleksowy wynajem sprzętu eventowego i atrakcji, które sprawią, że Twoja impreza będzie niezapomniana",
    "services.seeAll": "Zobacz wszystkie atrakcje",
    "category.namioty": "namioty",
    "category.dmuchance": "dmuchańce",
    "category.cukiernicze": "cukiernicze",
    "category.kompleksowa": "kompleksowa",
    "category.gastro": "gastro",
    "category.inflatables": "dmuchańce",
    "category.confectionery": "cukiernicze",
    "whyUs.title": "Dlaczego SŁODKOLANDIA wita:?",
    "whyUs.description":
      "Łączymy pasję do tworzenia niezapomnianych chwil z profesjonalnym podejściem do każdego eventu",
    "whyUs.experience": "Doświadczenie",
    "whyUs.experienceDesc":
      "Lata doświadczenia w organizacji eventów różnej skali",
    "whyUs.safety": "Bezpieczeństwo",
    "whyUs.safetyDesc":
      "Certyfikowany sprzęt i pełne ubezpieczenie każdej atrakcji",
    "whyUs.punctuality": "Punktualność",
    "whyUs.punctualityDesc":
      "Zawsze na czasie - dotrzymujemy terminów dostaw i montażu",
    "whyUs.individual": "Indywidualne Podejście",
    "whyUs.individualDesc":
      "Każdy event jest wyjątkowy - dostosowujemy się do Twoich potrzeb",
    "cta.mainTitle": "Zorganizujmy razem Twoją wymarzą imprezę!",
    "cta.mainDescription":
      "Skontaktuj się z nami już dziś i sprawdź dostępność na Twój termin. Gwarantujemy profesjonalną obsługę i niezapomnianych wrażeń!",
    "cta.contactForm": "Formularz kontaktowy",
    "cta.secondaryTitle": "Gotowy na niezapomnianą imprezę?",
    "cta.secondaryDescription":
      "Skontaktuj się z nami już dziś i zarezerwuj termin!",
    "cta.callNow": "Zadzwoń teraz",
    "cta.askForDate": "Zapytaj o termin",
    "home.stats.eventsOrganized": "Eventów zorganizowanych",
    "home.stats.happyClientsMonthly": "Zadowolonych klientów miesięcznie",
    "home.stats.yearsExperience": "lat doświadczenia",
    "home.stats.serviceRadius": "promień obsługi",
    "footer.companyName": "SŁODKOLANDIA wita:",
    "footer.companyDescription":
      "Profesjonalny wynajem atrakcji eventowych w Radomiu i okolicach. Tworzymy niezapomniane chwile dla Twoich gości!",
    "footer.quickLinks": "Szybkie Linki",
    "footer.servicesTitle": "Nasze Usługi",
    "footer.serviceTents": "Namioty Imprezowe",
    "footer.serviceInflatables": "Dmuchańce",
    "footer.serviceCottonCandy": "Wata Cukrowa",
    "footer.servicePopcorn": "Maszyny do Popcornu",
    "footer.serviceFountains": "Fontanna Czekoladowa",
    "footer.serviceComprehensive": "Kompleksowa Obsługa",
    "footer.contactTitle": "Kontakt",
    "footer.address": "Radom i okolice",
    "footer.addressDetail": "(promień 100km)",
    "footer.copyright": "Radom {year} SŁODKOLANDIA wita:. ",
    "footer.privacyPolicy": "Polityka Prywatności",
    "footer.terms": "Regulamin",
    "attractionCard.details": "Szczegóły",
    "attractionCard.priceFrom": "od",
    "currencyUnit.zł": "zł",
    "pricing.perPeriod.dzień": "/ dzień",
    "pricing.perPeriod.impreza": "/ impreza",
    "pricing.perPeriod.event": "/ event",
    "cookieConsent.message":
      "Ta strona używa plików cookies w celu zapewnienia najlepszej jakości usług. Kontynuując przeglądanie zgadzasz się na ich użycie.",
    "cookieConsent.accept": "Akceptuję",
    "cookieConsent.reject": "Odrzuć",
    "inquiryForm.title": "Formularz Zapytania",
    "inquiryForm.nameLabel": "Imię i nazwisko *",
    "inquiryForm.namePlaceholder": "Twoje imię i nazwisko",
    "inquiryForm.nameError": "Imię i nazwisko musi mieć co najmniej 2 znaki",
    "inquiryForm.emailLabel": "Email *",
    "inquiryForm.emailPlaceholder": "twoj@email.pl",
    "inquiryForm.emailError": "Nieprawidłowy adres email",
    "inquiryForm.phoneLabel": "Telefon",
    "inquiryForm.phonePlaceholder": "+48 123 456 789",
    "inquiryForm.eventDateLabel": "Data eventu",
    "inquiryForm.attractionsLabel": "Interesujące atrakcje",
    "inquiryForm.messageLabel": "Wiadomość *",
    "inquiryForm.messagePlaceholder":
      "Opisz swój event, liczbę gości, dodatkowe wymagania...",
    "inquiryForm.messageError": "Wiadomość musi mieć co najmniej 10 znaków",
    "inquiryForm.submitButton": "Wyślij Zapytanie",
    "inquiryForm.submittingButton": "Wysyłanie...",
    "inquiryForm.successTitle": "Zapytanie wysłane!",
    "inquiryForm.successDescription":
      "Dziękujemy za kontakt. Odpowiemy w ciągu 24 godzin.",
    "inquiryForm.errorTitle": "Błąd wysyłania",
    "inquiryForm.errorDescription":
      "Przepraszamy, wystąpił problem. Spróbuj ponownie lub zadzwoń.",
    "inquiryForm.attractionOptionTents": "Namioty Imprezowe",
    "inquiryForm.attractionOptionInflatables": "Dmuchane Atrakcje",
    "inquiryForm.attractionOptionCottonCandy": "Wata Cukrowa",
    "inquiryForm.attractionOptionPopcorn": "Maszyny do Popcornu",
    "inquiryForm.attractionOptionFountains": "Fontanny Czekoladowe",
    "inquiryForm.attractionOptionComprehensive": "Kompleksowa Obsługa",
    "pricingPage.heroTitle": "Cennik Naszych Usług",
    "pricingPage.heroDescription":
      "Oferujemy konkurencyjne ceny i indywidualne wyceny dostosowane do Twojego budżetu i potrzeb. Wszystkie ceny zawierają transport w promieniu 15km od Radomia.",
    "pricingPage.badgeTransportFree15km": "🚚 Darmowy transport do 15km",
    "pricingPage.badgeSetupIncluded": "🛠️ Montaż i demontaż w cenie",
    "pricingPage.badgeInsuranceOC": "🛡️ Ubezpieczenie OC",
    "pricingPage.packagesTitle": "Pakiety Promocyjne",
    "pricingPage.packagesDescription":
      "Oszczędź wynajmując pakiety atrakcji! Im więcej wynajmujesz, tym więcej oszczędzasz.",
    "pricingPage.popularPackage": "Najpopularniejszy",
    "pricingPage.packageNormally": "Normalnie",
    "pricingPage.packageSave": "Oszczędzasz {amount} zł",
    "pricingPage.packageIncludes": "W pakiecie:",
    "pricingPage.packageAsk": "Zapytaj o pakiet",
    "pricingPage.individualTitle": "Cennik Indywidualny",
    "pricingPage.individualDescription": "Ceny wynajmu pojedynczych atrakcji",
    "pricingPage.categoryAll": "Wszystkie",
    "pricingPage.categoryGastro": "Gastro",
    "pricingPage.additionalServicesTitle": "Usługi Dodatkowe",
    "pricingPage.discountsTitle": "Rabaty i Promocje",
    "pricingPage.discountPackages": "Pakiety Eventowe",
    "pricingPage.discountPackagesDesc":
      "Wynajmij 3 lub więcej atrakcji i otrzymaj 15% rabatu!",
    "pricingPage.discountLongTerm": "Długoterminowy Wynajem",
    "pricingPage.discountLongTermDesc":
      "Eventy powyżej 2 dni - specjalne ceny!",
    "pricingPage.discountLoyal": "Klienci Stali",
    "pricingPage.discountLoyalDesc":
      "Program lojalnościowy dla regularnych klientów",
    "pricingPage.askForDiscount": "Zapytaj o Rabat",
    "pricingPage.importantInfoTitle": "Ważne Informacje",
    "pricingPage.rentalConditionsTitle": "📋 Warunki Wynajmu",
    "pricingPage.rentalCondition1":
      "• Rezerwacja wymaga wpłaty zadatku 30% wartości zamówienia",
    "pricingPage.rentalCondition2":
      "• Minimalna doba wynajmu - 1 dzień (24 godziny) dla namiotów, pozostałe atrakcje na czas trwania imprezy",
    "pricingPage.rentalCondition3":
      "• Możliwość anulowania do 48h przed eventem",
    "pricingPage.rentalCondition4": "• Ceny brutto",
    "pricingPage.rentalCondition5":
      "• Dla eventów w dni świąteczne - dopłata 20%",
    "pricingPage.transportSetupTitle": "🚚 Transport i Montaż",
    "pricingPage.transportSetup1": "• Darmowy transport do 15km od Radomia",
    "pricingPage.transportSetup2":
      "• Montaż i demontaż w standardowych godzinach (8:00-20:00)",
    "pricingPage.transportSetup3":
      "• Czas montażu: 1-4 godziny w zależności od atrakcji",
    "pricingPage.transportSetup4":
      "• Wymagane jest zapewnienie dostępu do prądu 230V",
    "pricingPage.transportSetup5":
      "• Dla dmuchańców - płaska powierzchnia min. 4x4m",
    "pricingPage.packageChildName": "Pakiet Dziecięcy",
    "pricingPage.packageChildDesc": "Idealny na urodziny dziecka",
    "pricingPage.packageChildItem1": "Zamek dmuchany",
    "pricingPage.packageChildItem2": "Wata cukrowa",
    "pricingPage.packageChildItem3": "Popcorn",
    "pricingPage.packageFamilyName": "Pakiet Rodzinny",
    "pricingPage.packageFamilyDesc": "Dla większych rodzinnych spotkań",
    "pricingPage.packageFamilyItem1": "Namiot 6x12m",
    "pricingPage.packageFamilyItem2": "Dmuchana zjeżdżalnia",
    "pricingPage.packageFamilyItem3": "Wata cukrowa",
    "pricingPage.packageFamilyItem4": "Fontanna czekoladowa",
    "pricingPage.packageEventName": "Pakiet Eventowy",
    "pricingPage.packageEventDesc": "Kompleksowa obsługa większych eventów",
    "pricingPage.packageEventItem1": "Namiot 10x20m",
    "pricingPage.packageEventItem2": "2x Dmuchańce",
    "pricingPage.packageEventItem3": "Wata cukrowa",
    "pricingPage.packageEventItem4": "Popcorn",
    "pricingPage.packageEventItem5": "Fontanna czekoladowa",
    "pricingPage.packageEventItem6": "Obsługa",
    "pricingPage.additionalServiceTransport15": "Transport (do 15km)",
    "pricingPage.additionalServiceTransport30": "Transport (15-30km)",
    "pricingPage.additionalServiceTransportOver30": "Transport (powyżej 30km)",
    "pricingPage.additionalServiceNightSetup": "Montaż w godzinach nocnych",
    "pricingPage.additionalServiceExtendRental":
      "Przedłużenie wynajmu (+1 dzień)",
    "pricingPage.additionalServiceOperator": "Obsługa dodatkowa (operator)",
    "pricingPage.unitPriceDefault": "zł",
    "pricingPage.unitPriceKm": "zł/km",
    "pricingPage.unitPricePercent": "% ceny bazowej",
    "galleryPage.heroTitle": "Zobacz Nasze Atrakcje w Akcji!",
    "galleryPage.heroDescription":
      "Galeria zdjęć z naszych realizacji eventowych. Odkryj, jak wyglądają nasze atrakcje na prawdziwych imprezach i eventach w Radomiu i okolicach.",
    "galleryPage.badgeEventsDone": "Ponad 500 zrealizowanych eventów",
    "galleryPage.filterLabel": "Kategorie:",
    "galleryPage.categoryAll": "Wszystkie",
    "galleryPage.categoryTents": "Namioty Imprezowe",
    "galleryPage.categoryInflatables": "Dmuchane Atrakcje",
    "galleryPage.categoryCottonCandy": "Wata Cukrowa",
    "galleryPage.categoryPopcorn": "Popcorn",
    "galleryPage.categoryFountains": "Fontanny Czekoladowe",
    "galleryPage.categoryEventSetups": "Realizacje Eventów",
    "galleryPage.sectionTentsTitle": "🏕️ Namioty Imprezowe",
    "galleryPage.sectionTentsDesc":
      "Profesjonalne namioty w różnych konfiguracjach - od kameralnych przyjęć po duże eventy firmowe.",
    "galleryPage.sectionInflatablesTitle": "🏰 Dmuchane Atrakcje",
    "galleryPage.sectionInflatablesDesc":
      "Bezpieczna zabawa dla dzieci - zjeżdżalnie, zamki dmuchane.",
    "galleryPage.sectionCottonCandyTitle": "🍭 Wata Cukrowa",
    "galleryPage.sectionCottonCandyDesc":
      "Kolorowa wata cukrowa w różnych smakach - słodka atrakcja dla gości w każdym wieku.",
    "galleryPage.sectionPopcornTitle": "🍿 Popcorn",
    "galleryPage.sectionPopcornDesc":
      "Aromatyczny popcorn przygotowywany na żywo.",
    "galleryPage.sectionFountainsTitle": "🍫 Fontanna Czekoladowa",
    "galleryPage.sectionFountainsDesc":
      "Elegancka fontanna czekoladowa z dodatkami - wykwintna atrakcja dla smakoszy.",
    "galleryPage.sectionEventSetupsTitle": "🎉 Realizacje Eventów",
    "galleryPage.sectionEventSetupsDesc":
      "Zobacz jak wyglądają nasze kompleksowe realizacje - od małych przyjęć po duże eventy.",
    "galleryPage.currentCategoryInfo": "{count} zdjęć w tej kategorii",
    "galleryPage.statsTitle": "Nasze Doświadczenie w Liczbach",
    "galleryPage.statEvents": "Zrealizowanych eventów",
    "galleryPage.statKids": "Zadowolonych dzieci",
    "galleryPage.statAttractions": "Rodzajów atrakcji",
    "galleryPage.statRadius": "Promień obsługi",
    "contactPage.heroTitle": "Skontaktuj się z Nami",
    "contactPage.heroDescription":
      "Zorganizujmy razem Twoją niezapomnianą imprezę! Skontaktuj się z nami już dziś i sprawdź dostępność na Twój termin.",
    "contactPage.badgeQuickResponse": "⚡ Szybka odpowiedź",
    "contactPage.badgeFreeConsultation": "💬 Darmowa konsultacja",
    "contactPage.badgeIndividualQuotes": "📋 Indywidualne wyceny",
    "contactPage.quickContactTitle": "Wybierz Najwygodniejszy Sposób Kontaktu",
    "contactPage.quickContactDescription":
      "Jesteśmy dostępni przez cały tydzień. Odpowiadamy szybko na wszystkie zapytania!",
    "contactPage.phoneTitle": "Telefon",
    "contactPage.phoneDescription": "Najszybszy kontakt",
    "contactPage.emailTitle": "Email",
    "contactPage.emailDescription": "Napisz do nas",
    "contactPage.whatsappTitle": "WhatsApp",
    "contactPage.whatsappDescription": "Szybka wiadomość",
    "contactPage.meetingTitle": "Spotkanie",
    "contactPage.meetingDescription": "Umów się na prezentację",
    "contactPage.meetingDetails": "Po wcześniejszym kontakcie",
    "contactPage.callToActionTitle": "Zadzwoń już teraz!",
    "contactPage.callToActionDescription":
      "Sprawdzimy dostępność terminu i przygotujemy indywidualną wycenę",
    "contactPage.workingHoursTitle": "Godziny Pracy",
    "contactPage.workingHoursNote":
      "Uwaga: W przypadku pilnych spraw jesteśmy dostępni również poza godzinami pracy.",
    "contactPage.workingHoursMonFri": "Poniedziałek - Piątek",
    "contactPage.workingHoursSat": "Sobota",
    "contactPage.workingHoursSun": "Niedziela",
    "contactPage.workingHoursHoliday": "Dni świąteczne",
    "contactPage.workingHoursMonFriTime": "8:00 - 20:00",
    "contactPage.workingHoursSatTime": "9:00 - 18:00",
    "contactPage.workingHoursSunTime": "10:00 - 16:00",
    "contactPage.workingHoursHolidayTime": "Na umowę",
    "contactPage.serviceAreaTitle": "Obszar Obsługi",
    "contactPage.serviceAreaNote":
      "Obsługujemy też inne miasta! Skontaktuj się z nami, aby uzgodnić warunki transportu.",
    "contactPage.serviceAreaRadom": "Radom",
    "contactPage.serviceAreaRadomDist": "0km",
    "contactPage.serviceAreaRadomNote": "Siedziba firmy",
    "contactPage.serviceAreaBialobrzegi": "Białobrzegi",
    "contactPage.serviceAreaBialobrzegiDist": "25km",
    "contactPage.serviceAreaBialobrzegiNote": "Darmowy transport",
    "contactPage.serviceAreaSzydlowiec": "Szydłowiec",
    "contactPage.serviceAreaSzydlowiecDist": "30km",
    "contactPage.serviceAreaSzydlowiecNote": "Darmowy transport",
    "contactPage.serviceAreaKozienice": "Kozienice",
    "contactPage.serviceAreaKozieniceDist": "35km",
    "contactPage.serviceAreaKozieniceNote": "Dodatkowa opłata",
    "contactPage.serviceAreaOstrowiec": "Ostrowiec Św.",
    "contactPage.serviceAreaOstrowiecDist": "40km",
    "contactPage.serviceAreaOstrowiecNote": "Dodatkowa opłata",
    "contactPage.serviceAreaSkarzysko": "Skarżysko-Kamienna",
    "contactPage.serviceAreaSkarzyskoDist": "45km",
    "contactPage.serviceAreaSkarzyskoNote": "Dodatkowa opłata",
    "contactPage.additionalInfoTitle": "Dodatkowe Informacje",
    "contactPage.infoViewingTitle": "Oględziny sprzętu",
    "contactPage.infoViewingDesc":
      "Możliwość obejrzenia atrakcji przed wynajmem",
    "contactPage.infoFreeQuoteTitle": "Darmowa wycena",
    "contactPage.infoFreeQuoteDesc":
      "Przygotujemy bezpłatną ofertę dostosowaną do Twoich potrzeb",
    "contactPage.infoConsultationsTitle": "Konsultacje",
    "contactPage.infoConsultationsDesc": "Pomożemy w planowaniu całego eventu",
    "contactPage.infoOnlineBookingTitle": "Rezerwacja online",
    "contactPage.infoOnlineBookingDesc":
      "Możliwość rezerwacji przez formularz lub telefon",
    "contactPage.faqTitle": "Najczęściej Zadawane Pytania",
    "contactPage.faqDescription":
      "Odpowiedzi na pytania, które najczęściej otrzymujemy od naszych klientów",
    "contactPage.faq1Question": "Jak wcześnie należy dokonać rezerwacji?",
    "contactPage.faq1Answer":
      "Zalecamy rezerwację co najmniej 2 tygodnie przed planowanym eventem, szczególnie w sezonie letnim i okresie świątecznym.",
    "contactPage.faq2Question": "Czy ceny zawierają montaż i transport?",
    "contactPage.faq2Answer":
      "Tak, wszystkie nasze ceny zawierają montaż, demontaż oraz transport w promieniu 15km od Radomia. Za większe odległości pobieramy dodatkową opłatę.",
    "contactPage.faq3Question": "Co jeśli pogoda będzie niesprzyjająca?",
    "contactPage.faq3Answer":
      "Nasze namioty są odporne na warunki atmosferyczne. Dmuchańce można używać przy lekkim deszczu, ale nie podczas burzy ze względów bezpieczeństwa.",
    "contactPage.faq4Question": "Czy atrakcje są ubezpieczone?",
    "contactPage.faq4Answer":
      "Tak, wszystkie nasze atrakcje posiadają pełne ubezpieczenie OC. Dodatkowo regularnie przeprowadzamy przeglądy techniczne sprzętu.",
    "contactPage.faq5Question": "Jak wygląda proces rezerwacji?",
    "contactPage.faq5Answer":
      "Po kontakcie przygotowujemy wycenę, następnie wymagamy wpłaty zadatku 30%. Resztę kwoty można uregulować przy odbiorze sprzętu.",
    "aboutUsPage.heroTitle": "O Naszej Firmie",
    "aboutUsPage.heroDescription":
      "Jesteśmy firmą z pasją do tworzenia niezapomnianych chwil. Specializujemy się w wynajmie atrakcji eventowych, które sprawiają, że każda impreza staje się wyjątkowa.",
    "aboutUsPage.badgeFounded": "Radom i okolice od 2019 roku",
    "aboutUsPage.storyTitle": "Nasza Historia",
    "aboutUsPage.storyPara1":
      "'SŁODKOLANDIA wita:' powstała z prostego przekonania, że każde wydarzenie zasługuje na to, aby być niezapomnianym. Rozpoczęliśmy działalność w 2019 roku z jedną dmuchańcą i wielką pasją do organizacji eventów.",
    "aboutUsPage.storyPara2":
      "Dziś jesteśmy rozpoznawalną marką w Radomiu i okolicach, oferującą kompleksowy wynajem atrakcji eventowych. Nasze doświadczenie obejmuje eventy dla firm, wesela, urodziny dzieci, festyny miejskie i wiele innych okazji.",
    "aboutUsPage.storyPara3":
      "To, co nas wyróżnia, to indywidualne podejście do każdego klienta oraz nieustanna troska o bezpieczeństwo i jakość naszych usług.",
    "aboutUsPage.missionTitle": "🎯 Nasza Misja",
    "aboutUsPage.missionDescription":
      "Tworzymy niezapomniane momenty radości i zabawy, dostarczając najwyższej jakości atrakcje eventowe z pełną obsługą profesjonalną.",
    "aboutUsPage.visionTitle": "🔮 Nasza Wizja",
    "aboutUsPage.visionDescription":
      "Być pierwszym wyborem w regionie dla osób poszukujących profesjonalnych atrakcji eventowych i kompleksowej obsługi wydarzeń.",
    "aboutUsPage.valuesTitle": "Nasze Wartości",
    "aboutUsPage.valuesDescription":
      "Wartości, które wyznaczają nasz sposób działania i podejście do każdego klienta",
    "aboutUsPage.valuePassionTitle": "Pasja",
    "aboutUsPage.valuePassionDesc":
      "Każdy event traktujemy jako wyjątkowe wydarzenie. Wkładamy serce w to, co robimy.",
    "aboutUsPage.valueSafetyTitle": "Bezpieczeństwo",
    "aboutUsPage.valueSafetyDesc":
      "Priorytetem jest bezpieczeństwo naszych gości. Cały sprzęt jest certyfikowany i ubezpieczony.",
    "aboutUsPage.valueProfessionalismTitle": "Profesjonalizm",
    "aboutUsPage.valueProfessionalismDesc":
      "Punktualność, rzetelność i wysoka jakość usług to nasze znaki rozpoznawcze.",
    "aboutUsPage.valueQualityTitle": "Jakość",
    "aboutUsPage.valueQualityDesc":
      "Używamy tylko sprawdzonego sprzętu najwyższej jakości od renomowanych producentów.",
    "aboutUsPage.achievementsTitle": "Nasze Osiągnięcia",
    "aboutUsPage.achievementsDescription":
      "Liczby, które najlepiej opisują nasze doświadczenie i zaangażowanie",
    "aboutUsPage.achievementEvents": "Zrealizowanych eventów",
    "aboutUsPage.achievementExperience": "lat doświadczenia",
    "aboutUsPage.achievementAttractions": "rodzajów atrakcji",
    "aboutUsPage.achievementRadius": "promień obsługi",
    "aboutUsPage.achievementSatisfaction": "zadowolonych klientów",
    "aboutUsPage.achievementAvailability": "dostępność telefoniczna",
    "aboutUsPage.teamTitle": "Nasz Zespół",
    "aboutUsPage.teamDescription":
      "Grupa pasjonatów, którzy dbają o to, aby każdy event był perfekcyjny",
    "aboutUsPage.teamOwnerName": "Właściciel firmy",
    "aboutUsPage.teamOwnerRole": "Założyciel i kierownik projektów",
    "aboutUsPage.teamOwnerDesc":
      "5 lat doświadczenia w branży eventowej. Pasjonat tworzenia niezapomnianych chwil.",
    "aboutUsPage.teamAssemblyName": "Zespół montażowy",
    "aboutUsPage.teamAssemblyRole": "Specjaliści od montażu",
    "aboutUsPage.teamAssemblyDesc":
      "Doświadczeni technicy zapewniający szybki i bezpieczny montaż wszystkich atrakcji.",
    "aboutUsPage.teamSupportName": "Obsługa klienta",
    "aboutUsPage.teamSupportRole": "Konsultanci eventowi",
    "aboutUsPage.teamSupportDesc":
      "Pomożemy Ci w wyborze idealnych atrakcji i zaplanowaniu całego eventu.",
    "aboutUsPage.certsTitle": "Certyfikaty i Jakość",
    "aboutUsPage.certsDescription":
      "Bezpieczeństwo i jakość to podstawa naszej działalności. Wszystkie nasze atrakcje są regularnie kontrolowane i posiadają wymagane certyfikaty.",
    "aboutUsPage.certInsurance": "Ubezpieczenie OC",
    "aboutUsPage.certInsuranceDesc":
      "Pełne pokrycie odpowiedzialności cywilnej",
    "aboutUsPage.certEquipment": "Certyfikaty sprzętu",
    "aboutUsPage.certEquipmentDesc":
      "Wszystkie atrakcje posiadają wymagane certyfikaty",
    "aboutUsPage.certReviews": "Przeglądy techniczne",
    "aboutUsPage.certReviewsDesc": "Regularne kontrole bezpieczeństwa sprzętu",
    "aboutUsPage.certTraining": "Szkolenia zespołu",
    "aboutUsPage.certTrainingDesc":
      "Ciągłe podnoszenie kwalifikacji pracowników",
    "aboutUsPage.whyChooseUsTitle": "Dlaczego Klienci Nas Wybierają?",
    "aboutUsPage.whyChooseExperience": "Doświadczenie",
    "aboutUsPage.whyChooseExperienceDesc":
      "5 lat na rynku i setki udanych eventów",
    "aboutUsPage.whyChooseSafety": "Bezpieczeństwo",
    "aboutUsPage.whyChooseSafetyDesc":
      "Pełne ubezpieczenie i certyfikowany sprzęt",
    "aboutUsPage.whyChooseProfessionalism": "Profesjonalizm",
    "aboutUsPage.whyChooseProfessionalismDesc":
      "Punktualna dostawa i profesjonalna obsługa",
    "aboutUsPage.whyChooseIndividual": "Indywidualne podejście",
    "aboutUsPage.whyChooseIndividualDesc":
      "Każdy event traktujemy jako wyjątkowy",
    "offerPage.heroTitle": "Nasza Oferta Atrakcji Eventowych",
    "offerPage.heroDescription":
      "Odkryj pełną gamę profesjonalnych atrakcji i usług eventowych. Od namiotów imprezowych po kompleksową obsługę wydarzeń.",
    "offerPage.badgeLocation": "Radom i okolice (30km)",
    "offerPage.filterLabel": "Kategorie:",
    "offerPage.allAttractionsCount": "Wszystkie atrakcje ({count})",
    "offerPage.categoryAttractionsCount": "{categoryName} ({count})",
    "offerPage.noAttractionsTitle": "Brak atrakcji w tej kategorii",
    "offerPage.noAttractionsDescription":
      "Wybierz inną kategorię lub skontaktuj się z nami w sprawie indywidualnych rozwiązań.",
    "offerPage.sectionTentsTitle": "🏕️ Namioty Imprezowe",
    "offerPage.sectionTentsDescription":
      "Profesjonalne namioty w różnych rozmiarach, idealne na wesela, urodziny i eventy firmowe. Oferujemy pełny serwis montażu i demontażu z możliwością dodania podłogi i oświetlenia.",
    "offerPage.sectionInflatablesTitle": "🏰 Dmuchane Atrakcje",
    "offerPage.sectionInflatablesDescription":
      "Bezpieczne i certyfikowane dmuchańce dla dzieci. Zjeżdżalnie, zamki z profesjonalną obsługą i ubezpieczeniem OC.",
    "offerPage.sectionEquipmentTitle": "🍭 Sprzęt Cukierniczy",
    "offerPage.sectionEquipmentDescription":
      "Maszyny do waty cukrowej, popcornu i elegancka fontanna czekoladowa. Wszystko z profesjonalną obsługą i świeżymi produktami.",
    "offerPage.servicesIncludeTitle": "Co zawierają nasze usługi?",
    "offerPage.serviceTransport": "Transport i montaż",
    "offerPage.serviceTransportDesc": "Pełny serwis dostawy i ustawienia",
    "offerPage.serviceProfessional": "Profesjonalna obsługa",
    "offerPage.serviceProfessionalDesc": "Doświadczony personel podczas eventu",
    "offerPage.serviceInsurance": "Ubezpieczenie OC",
    "offerPage.serviceInsuranceDesc": "Pełne pokrycie ubezpieczeniowe",
    "offerPage.serviceCertified": "Certyfikowany sprzęt",
    "offerPage.serviceCertifiedDesc": "Bezpieczne i sprawne urządzenia",
    "offerPage.serviceFlexible": "Elastyczne terminy",
    "offerPage.serviceFlexibleDesc": "Dostosowane do Twoich potrzeb",
    "offerPage.serviceConsultations": "Konsultacje",
    "offerPage.serviceConsultationsDesc": "Pomoc w planowaniu eventu",
    "seo.homeTitle": "'SŁODKOLANDIA wita:' - Event Attraction Rental Radom",
    "seo.homeDescription":
      "Professional rental of party tents, inflatables, cotton candy, and popcorn in Radom and surroundings. Organize an unforgettable party!",
    "seo.offerTitle": "Offer - Event Attraction Rental | 'SŁODKOLANDIA wita:'",
    "seo.offerDescription":
      "Discover our full range of event attractions: party tents, inflatables, cotton candy, popcorn, chocolate fountains. Professional rental in Radom.",
    "seo.galleryTitle":
      "Photo Gallery - See Our Attractions in Action | 'SŁODKOLANDIA wita:'",
    "seo.galleryDescription":
      "View the photo gallery from our event productions. Party tents, inflatables, cotton candy, popcorn, and chocolate fountains in action.",
    "seo.pricingTitle":
      "Pricing for Event Attraction Rental | 'SŁODKOLANDIA wita:' Radom",
    "seo.pricingDescription":
      "Check current rental prices for party tents, inflatables, and catering equipment. Promotional packages and individual quotes.",
    "seo.contactTitle":
      "Contact - Event Attraction Rental Radom | 'SŁODKOLANDIA wita:'",
    "seo.contactDescription":
      "Contact us today! Phone: +48 531 890 827. Professional event attraction rental in Radom and surroundings.",
    "seo.aboutUsTitle":
      "About Us - 'SŁODKOLANDIA wita:' | Professional Event Attraction Rental Radom",
    "seo.aboutUsDescription":
      "Learn our history, values, and experience. 'SŁODKOLANDIA wita:' is a passion for creating unforgettable events in Radom and surroundings.",
    "attractionsData.namioty-imprezowe.name": "Namioty Imprezowe",
    "attractionsData.namioty-imprezowe.description":
      "Profesjonalne namioty imprezowe w różnych rozmiarach. Idealne na wesela, urodziny i eventy firmowe.",
    "attractionsData.dmuchane-atrakcje.name": "Dmuchane Atrakcje",
    "attractionsData.dmuchane-atrakcje.description":
      "Zjeżdżalnie, zamki dmuchane. Gwarantowana radość dla dzieci w każdym wieku!",
    "attractionsData.wata-cukrowa.name": "Wata Cukrowa",
    "attractionsData.wata-cukrowa.description":
      "Profesjonalne maszyny do waty cukrowej z kolorowymi smakami. Słodka atrakcja dla gości!",
    "attractionsData.popcorn.name": "Popcorn",
    "attractionsData.popcorn.description":
      "Maszyny do popcornu. Świeży, aromatyczny popcorn na Twoim evencie.",
    "attractionsData.fontanna-czekoladowa.name": "Fontanna Czekoladowa",
    "attractionsData.fontanna-czekoladowa.description":
      "Elegancka fontanna czekoladowa z dodatkami. Wykwintna atrakcja dla prawdziwych smakoszy.",
    "attractionsData.kompleksowa-obsluga.name": "Kompleksowa Obsługa Eventów",
    "attractionsData.kompleksowa-obsluga.description":
      "Pełna organizacja eventów z naszym doświadczonym zespołem. Od planowania po realizację.",
  },
  en: {
    "nav.home": "Home",
    "nav.about": "About Us",
    "nav.offer": "Offer",
    "nav.photo": "Photos",
    "nav.pricing": "Pricing",
    "nav.contact": "Contact",
    "nav.allAttractions": "All Attractions",
    "nav.tents": "Party Tents",
    "nav.inflatables": "Inflatables",
    "nav.popcorn": "Popcorn",
    "nav.cottonCandy": "Cotton Candy",
    "nav.chocolateFountain": "Chocolate Fountain",
    "nav.allPhotos": "All Photos",
    "nav.photoTents": "Tents",
    "nav.photoInflatables": "Inflatables",
    "nav.photoCottonCandy": "Cotton Candy",
    "nav.photoPopcorn": "Popcorn",
    "nav.photoFountains": "Chocolate Fountains",
    "nav.review": "Add Review",
    "hero.title": "SŁODKOLANDIA wita:",
    "hero.subtitle": "Unforgettable Attractions for Your Event!",
    "hero.description":
      "We guarantee great fun and professional service at every event!",
    "hero.seeOffer": "See our offer",
    "hero.askDate": "Ask about availability",
    "services.title": "Our Main Attractions",
    "services.description":
      "We offer comprehensive rental of event equipment and attractions that will make your party unforgettable",
    "services.seeAll": "See all attractions",
    "category.namioty": "tents",
    "category.dmuchance": "inflatables",
    "category.cukiernicze": "confectionery",
    "category.kompleksowa": "comprehensive",
    "category.gastro": "gastro",
    "category.inflatables": "inflatables",
    "category.confectionery": "confectionery",
    "whyUs.title": "Why 'SŁODKOLANDIA wita:'?",
    "whyUs.description":
      "We combine passion for creating unforgettable moments with a professional approach to every event",
    "whyUs.experience": "Experience",
    "whyUs.experienceDesc":
      "Years of experience in organizing events of various scales",
    "whyUs.safety": "Safety",
    "whyUs.safetyDesc":
      "Certified equipment and full insurance for every attraction",
    "whyUs.punctuality": "Punctuality",
    "whyUs.punctualityDesc":
      "Always on time - we meet delivery and assembly deadlines",
    "whyUs.individual": "Individual Approach",
    "whyUs.individualDesc": "Every event is unique - we adapt to your needs",
    "cta.mainTitle": "Let's organize your dream event together!",
    "cta.mainDescription":
      "Contact us today and check availability for your date. We guarantee professional service and unforgettable experiences!",
    "cta.contactForm": "Contact Form",
    "cta.secondaryTitle": "Ready for an unforgettable party?",
    "cta.secondaryDescription": "Contact us today and book your date!",
    "cta.callNow": "Call now",
    "cta.askForDate": "Ask for date",
    "home.stats.eventsOrganized": "Events organized",
    "home.stats.happyClientsMonthly": "Satisfied clients monthly",
    "home.stats.yearsExperience": "years of experience",
    "home.stats.serviceRadius": "service radius",
    "footer.companyName": "'SŁODKOLANDIA wita:'",
    "footer.companyDescription":
      "Professional rental of event attractions in Radom and surroundings. We create unforgettable moments for your guests!",
    "footer.quickLinks": "Quick Links",
    "footer.servicesTitle": "Our Services",
    "footer.serviceTents": "Party Tents",
    "footer.serviceInflatables": "Inflatables",
    "footer.serviceCottonCandy": "Cotton Candy",
    "footer.servicePopcorn": "Popcorn Machines",
    "footer.serviceFountains": "Chocolate Fountains",
    "footer.serviceComprehensive": "Comprehensive Service",
    "footer.contactTitle": "Contact",
    "footer.address": "Radom and surroundings",
    "footer.addressDetail": "(100km radius)",
    "footer.copyright": "© {year} SŁODKOLANDIA wita:. All rights reserved.",
    "footer.privacyPolicy": "Privacy Policy",
    "footer.terms": "Terms of Service",
    "attractionCard.details": "Details",
    "attractionCard.priceFrom": "from",
    "currencyUnit.zł": "PLN",
    "pricing.perPeriod.dzień": "/ day",
    "pricing.perPeriod.impreza": "/ party",
    "pricing.perPeriod.event": "/ event",
    "cookieConsent.message":
      "This site uses cookies to ensure the best quality of service. By continuing to browse, you agree to their use.",
    "cookieConsent.accept": "Accept",
    "cookieConsent.reject": "Reject",
    "inquiryForm.title": "Inquiry Form",
    "inquiryForm.nameLabel": "Name and surname *",
    "inquiryForm.namePlaceholder": "Your name and surname",
    "inquiryForm.nameError":
      "Name and surname must be at least 2 characters long",
    "inquiryForm.emailLabel": "Email *",
    "inquiryForm.emailPlaceholder": "your@email.com",
    "inquiryForm.emailError": "Invalid email address",
    "inquiryForm.phoneLabel": "Phone",
    "inquiryForm.phonePlaceholder": "+48 123 456 789",
    "inquiryForm.eventDateLabel": "Event date",
    "inquiryForm.attractionsLabel": "Interesting attractions",
    "inquiryForm.messageLabel": "Message *",
    "inquiryForm.messagePlaceholder":
      "Describe your event, number of guests, additional requirements...",
    "inquiryForm.messageError": "Message must be at least 10 characters long",
    "inquiryForm.submitButton": "Send Inquiry",
    "inquiryForm.submittingButton": "Sending...",
    "inquiryForm.successTitle": "Inquiry sent!",
    "inquiryForm.successDescription":
      "Thank you for your contact. We will reply within 24 hours.",
    "inquiryForm.errorTitle": "Sending error",
    "inquiryForm.errorDescription":
      "Sorry, there was a problem. Please try again or call us.",
    "inquiryForm.attractionOptionTents": "Party Tents",
    "inquiryForm.attractionOptionInflatables": "Inflatable Attractions",
    "inquiryForm.attractionOptionCottonCandy": "Cotton Candy",
    "inquiryForm.attractionOptionPopcorn": "Popcorn Machines",
    "inquiryForm.attractionOptionFountains": "Chocolate Fountains",
    "inquiryForm.attractionOptionComprehensive": "Comprehensive Service",
    "pricingPage.heroTitle": "Our Service Pricing",
    "pricingPage.heroDescription":
      "We offer competitive prices and individual quotes tailored to your budget and needs. All prices include transport within a 15km radius of Radom.",
    "pricingPage.badgeTransportFree15km": "🚚 Free transport up to 15km",
    "pricingPage.badgeSetupIncluded": "🛠️ Setup and dismantling included",
    "pricingPage.badgeInsuranceOC": "🛡️ Liability insurance",
    "pricingPage.packagesTitle": "Promotional Packages",
    "pricingPage.packagesDescription":
      "Save by renting attraction packages! The more you rent, the more you save.",
    "pricingPage.popularPackage": "Most Popular",
    "pricingPage.packageNormally": "Normally",
    "pricingPage.packageSave": "You save {amount} PLN",
    "pricingPage.packageIncludes": "Included in package:",
    "pricingPage.packageAsk": "Ask about package",
    "pricingPage.individualTitle": "Individual Pricing",
    "pricingPage.individualDescription":
      "Rental prices for individual attractions",
    "pricingPage.categoryAll": "All",
    "pricingPage.categoryGastro": "Gastro",
    "pricingPage.additionalServicesTitle": "Additional Services",
    "pricingPage.discountsTitle": "Discounts and Promotions",
    "pricingPage.discountPackages": "Event Packages",
    "pricingPage.discountPackagesDesc":
      "Rent 3 or more attractions and get a 15% discount!",
    "pricingPage.discountLongTerm": "Long-term Rental",
    "pricingPage.discountLongTermDesc":
      "Events longer than 2 days - special prices!",
    "pricingPage.discountLoyal": "Loyal Customers",
    "pricingPage.discountLoyalDesc": "Loyalty program for regular customers",
    "pricingPage.askForDiscount": "Ask for Discount",
    "pricingPage.importantInfoTitle": "Important Information",
    "pricingPage.rentalConditionsTitle": "📋 Rental Conditions",
    "pricingPage.rentalCondition1":
      "• Reservation requires a 30% deposit of the order value",
    "pricingPage.rentalCondition2":
      "• Minimum rental period - 1 day (24 hours) for tents, other attractions for the duration of the party",
    "pricingPage.rentalCondition3":
      "• Cancellation possible up to 48h before the event",
    "pricingPage.rentalCondition4": "• Gross prices (VAT included)",
    "pricingPage.rentalCondition5":
      "• For events on public holidays - 20% surcharge",
    "pricingPage.transportSetupTitle": "🚚 Transport and Setup",
    "pricingPage.transportSetup1": "• Free transport up to 15km from Radom",
    "pricingPage.transportSetup2":
      "• Setup and dismantling during standard hours (8:00 AM - 8:00 PM)",
    "pricingPage.transportSetup3":
      "• Setup time: 1-4 hours depending on the attraction",
    "pricingPage.transportSetup4": "• Access to 230V power supply required",
    "pricingPage.transportSetup5": "• For inflatables - flat surface min. 4x4m",
    "pricingPage.packageChildName": "Kids Package",
    "pricingPage.packageChildDesc": "Perfect for a child's birthday",
    "pricingPage.packageChildItem1": "Bouncy castle",
    "pricingPage.packageChildItem2": "Cotton candy",
    "pricingPage.packageChildItem3": "Popcorn",
    "pricingPage.packageFamilyName": "Family Package",
    "pricingPage.packageFamilyDesc": "For larger family gatherings",
    "pricingPage.packageFamilyItem1": "Tent 6x12m",
    "pricingPage.packageFamilyItem2": "Inflatable slide",
    "pricingPage.packageFamilyItem3": "Cotton candy",
    "pricingPage.packageFamilyItem4": "Chocolate fountain",
    "pricingPage.packageEventName": "Event Package",
    "pricingPage.packageEventDesc": "Comprehensive service for larger events",
    "pricingPage.packageEventItem1": "Tent 10x20m",
    "pricingPage.packageEventItem2": "2x Inflatables",
    "pricingPage.packageEventItem3": "Cotton candy",
    "pricingPage.packageEventItem4": "Popcorn",
    "pricingPage.packageEventItem5": "Chocolate fountain",
    "pricingPage.packageEventItem6": "Service staff",
    "pricingPage.additionalServiceTransport15": "Transport (up to 15km)",
    "pricingPage.additionalServiceTransport30": "Transport (15-30km)",
    "pricingPage.additionalServiceTransportOver30": "Transport (over 30km)",
    "pricingPage.additionalServiceNightSetup": "Night-time setup",
    "pricingPage.additionalServiceExtendRental": "Extend rental (+1 day)",
    "pricingPage.additionalServiceOperator": "Additional operator",
    "pricingPage.unitPriceDefault": "PLN",
    "pricingPage.unitPriceKm": "PLN/km",
    "pricingPage.unitPricePercent": "% of base price",
    "galleryPage.heroTitle": "See Our Attractions in Action!",
    "galleryPage.heroDescription":
      "Photo gallery from our event productions. Discover how our attractions look at real parties and events in Radom and the surrounding area.",
    "galleryPage.badgeEventsDone": "Over 500 events completed",
    "galleryPage.filterLabel": "Categories:",
    "galleryPage.categoryAll": "All",
    "galleryPage.categoryTents": "Party Tents",
    "galleryPage.categoryInflatables": "Inflatable Attractions",
    "galleryPage.categoryCottonCandy": "Cotton Candy",
    "galleryPage.categoryPopcorn": "Popcorn",
    "galleryPage.categoryFountains": "Chocolate Fountains",
    "galleryPage.categoryEventSetups": "Event Productions",
    "galleryPage.sectionTentsTitle": "🏕️ Party Tents",
    "galleryPage.sectionTentsDesc":
      "Professional tents in various configurations - from intimate parties to large corporate events.",
    "galleryPage.sectionInflatablesTitle": "🏰 Inflatable Attractions",
    "galleryPage.sectionInflatablesDesc":
      "Safe fun for children - slides, bouncy castles, and playgrounds.",
    "galleryPage.sectionCottonCandyTitle": "🍭 Cotton Candy",
    "galleryPage.sectionCottonCandyDesc":
      "Colorful cotton candy in various flavors - a sweet attraction for guests of all ages.",
    "galleryPage.sectionPopcornTitle": "🍿 Popcorn",
    "galleryPage.sectionPopcornDesc":
      "Aromatic popcorn prepared live in machines.",
    "galleryPage.sectionFountainsTitle": "🍫 Chocolate Fountains",
    "galleryPage.sectionFountainsDesc":
      "Elegant chocolate fountains with toppings - an exquisite attraction for connoisseurs.",
    "galleryPage.sectionEventSetupsTitle": "🎉 Event Productions",
    "galleryPage.sectionEventSetupsDesc":
      "See what our comprehensive productions look like - from small parties to large events.",
    "galleryPage.currentCategoryInfo": "{count} photos in this category",
    "galleryPage.statsTitle": "Our Experience in Numbers",
    "galleryPage.statEvents": "Events completed",
    "galleryPage.statKids": "Happy children",
    "galleryPage.statAttractions": "Types of attractions",
    "galleryPage.statRadius": "Service radius",
    "contactPage.heroTitle": "Contact Us",
    "contactPage.heroDescription":
      "Let's organize your unforgettable party together! Contact us today and check availability for your date.",
    "contactPage.badgeQuickResponse": "⚡ Quick response",
    "contactPage.badgeFreeConsultation": "💬 Free consultation",
    "contactPage.badgeIndividualQuotes": "📋 Individual quotes",
    "contactPage.quickContactTitle":
      "Choose the Most Convenient Way to Contact Us",
    "contactPage.quickContactDescription":
      "We are available all week. We respond quickly to all inquiries!",
    "contactPage.phoneTitle": "Phone",
    "contactPage.phoneDescription": "Fastest contact",
    "contactPage.emailTitle": "Email",
    "contactPage.emailDescription": "Write to us",
    "contactPage.whatsappTitle": "WhatsApp",
    "contactPage.whatsappDescription": "Quick message",
    "contactPage.meetingTitle": "Meeting",
    "contactPage.meetingDescription": "Arrange a presentation",
    "contactPage.meetingDetails": "By prior contact",
    "contactPage.callToActionTitle": "Call us now!",
    "contactPage.callToActionDescription":
      "We will check date availability and prepare an individual quote",
    "contactPage.workingHoursTitle": "Working Hours",
    "contactPage.workingHoursNote":
      "Note: For urgent matters, we are also available outside working hours.",
    "contactPage.workingHoursMonFri": "Monday - Friday",
    "contactPage.workingHoursSat": "Saturday",
    "contactPage.workingHoursSun": "Sunday",
    "contactPage.workingHoursHoliday": "Public holidays",
    "contactPage.workingHoursMonFriTime": "8:00 AM - 8:00 PM",
    "contactPage.workingHoursSatTime": "9:00 AM - 6:00 PM",
    "contactPage.workingHoursSunTime": "10:00 AM - 4:00 PM",
    "contactPage.workingHoursHolidayTime": "By appointment",
    "contactPage.serviceAreaTitle": "Service Area",
    "contactPage.serviceAreaNote":
      "We also serve other cities! Contact us to arrange transport conditions.",
    "contactPage.serviceAreaRadom": "Radom",
    "contactPage.serviceAreaRadomDist": "0km",
    "contactPage.serviceAreaRadomNote": "Company headquarters",
    "contactPage.serviceAreaBialobrzegi": "Białobrzegi",
    "contactPage.serviceAreaBialobrzegiDist": "25km",
    "contactPage.serviceAreaBialobrzegiNote": "Free transport",
    "contactPage.serviceAreaSzydlowiec": "Szydłowiec",
    "contactPage.serviceAreaSzydlowiecDist": "30km",
    "contactPage.serviceAreaSzydlowiecNote": "Free transport",
    "contactPage.serviceAreaKozienice": "Kozienice",
    "contactPage.serviceAreaKozieniceDist": "35km",
    "contactPage.serviceAreaKozieniceNote": "Additional fee",
    "contactPage.serviceAreaOstrowiec": "Ostrowiec Św.",
    "contactPage.serviceAreaOstrowiecDist": "40km",
    "contactPage.serviceAreaOstrowiecNote": "Additional fee",
    "contactPage.serviceAreaSkarzysko": "Skarżysko-Kamienna",
    "contactPage.serviceAreaSkarzyskoDist": "45km",
    "contactPage.serviceAreaSkarzyskoNote": "Additional fee",
    "contactPage.additionalInfoTitle": "Additional Information",
    "contactPage.infoViewingTitle": "Equipment viewing",
    "contactPage.infoViewingDesc":
      "Possibility to view attractions before renting",
    "contactPage.infoFreeQuoteTitle": "Free quote",
    "contactPage.infoFreeQuoteDesc":
      "We will prepare a free offer tailored to your needs",
    "contactPage.infoConsultationsTitle": "Consultations",
    "contactPage.infoConsultationsDesc":
      "We will help in planning the entire event",
    "contactPage.infoOnlineBookingTitle": "Online booking",
    "contactPage.infoOnlineBookingDesc":
      "Possibility to book via form or phone",
    "contactPage.faqTitle": "Frequently Asked Questions",
    "contactPage.faqDescription":
      "Answers to questions we most often receive from our clients",
    "contactPage.faq1Question": "How early should I make a reservation?",
    "contactPage.faq1Answer":
      "We recommend booking at least 2 weeks before the planned event, especially during the summer season and holidays.",
    "contactPage.faq2Question": "Do prices include setup and transport?",
    "contactPage.faq2Answer":
      "Yes, all our prices include setup, dismantling, and transport within a 15km radius of Radom. We charge an additional fee for longer distances.",
    "contactPage.faq3Question": "What if the weather is unfavorable?",
    "contactPage.faq3Answer":
      "Our tents are weather-resistant. Inflatables can be used in light rain, but not during a storm for safety reasons.",
    "contactPage.faq4Question": "Are the attractions insured?",
    "contactPage.faq4Answer":
      "Yes, all our attractions have full liability insurance. Additionally, we regularly conduct technical inspections of the equipment.",
    "contactPage.faq5Question": "What is the reservation process?",
    "contactPage.faq5Answer":
      "After contact, we prepare a quote, then we require a 30% deposit. The remaining amount can be settled upon equipment pickup.",
    "aboutUsPage.heroTitle": "About Our Company",
    "aboutUsPage.heroDescription":
      "We are a company with a passion for creating unforgettable moments. We specialize in renting event attractions that make every party unique.",
    "aboutUsPage.badgeFounded": "Radom and surroundings since 2019",
    "aboutUsPage.storyTitle": "Our Story",
    "aboutUsPage.storyPara1":
      "SŁODKOLANDIA wita: was founded on the simple belief that every event deserves to be unforgettable. We started in 2019 with one inflatable and a great passion for organizing events.",
    "aboutUsPage.storyPara2":
      "Today, we are a recognizable brand in Radom and the surrounding areas, offering comprehensive rental of event attractions. Our experience includes corporate events, weddings, children's birthdays, city festivals, and many other occasions.",
    "aboutUsPage.storyPara3":
      "What sets us apart is our individual approach to each client and our constant concern for the safety and quality of our services.",
    "aboutUsPage.missionTitle": "🎯 Our Mission",
    "aboutUsPage.missionDescription":
      "We create unforgettable moments of joy and fun by providing the highest quality event attractions with full professional service.",
    "aboutUsPage.visionTitle": "🔮 Our Vision",
    "aboutUsPage.visionDescription":
      "To be the first choice in the region for people looking for professional event attractions and comprehensive event management.",
    "aboutUsPage.valuesTitle": "Our Values",
    "aboutUsPage.valuesDescription":
      "The values that guide our way of working and our approach to every client",
    "aboutUsPage.valuePassionTitle": "Passion",
    "aboutUsPage.valuePassionDesc":
      "We treat every event as a unique occasion. We put our heart into what we do.",
    "aboutUsPage.valueSafetyTitle": "Safety",
    "aboutUsPage.valueSafetyDesc":
      "The safety of our guests is a priority. All equipment is certified and insured.",
    "aboutUsPage.valueProfessionalismTitle": "Professionalism",
    "aboutUsPage.valueProfessionalismDesc":
      "Punctuality, reliability, and high-quality services are our hallmarks.",
    "aboutUsPage.valueQualityTitle": "Quality",
    "aboutUsPage.valueQualityDesc":
      "We use only proven, top-quality equipment from reputable manufacturers.",
    "aboutUsPage.achievementsTitle": "Our Achievements",
    "aboutUsPage.achievementsDescription":
      "Numbers that best describe our experience and commitment",
    "aboutUsPage.achievementEvents": "Events completed",
    "aboutUsPage.achievementExperience": "years of experience",
    "aboutUsPage.achievementAttractions": "types of attractions",
    "aboutUsPage.achievementRadius": "service radius",
    "aboutUsPage.achievementSatisfaction": "satisfied clients",
    "aboutUsPage.achievementAvailability": "phone availability",
    "aboutUsPage.teamTitle": "Our Team",
    "aboutUsPage.teamDescription":
      "A group of enthusiasts who ensure every event is perfect",
    "aboutUsPage.teamOwnerName": "Company Owner",
    "aboutUsPage.teamOwnerRole": "Founder and Project Manager",
    "aboutUsPage.teamOwnerDesc":
      "5 years of experience in the event industry. Passionate about creating unforgettable moments.",
    "aboutUsPage.teamAssemblyName": "Assembly Team",
    "aboutUsPage.teamAssemblyRole": "Assembly Specialists",
    "aboutUsPage.teamAssemblyDesc":
      "Experienced technicians ensuring quick and safe assembly of all attractions.",
    "aboutUsPage.teamSupportName": "Customer Support",
    "aboutUsPage.teamSupportRole": "Event Consultants",
    "aboutUsPage.teamSupportDesc":
      "We will help you choose the ideal attractions and plan the entire event.",
    "aboutUsPage.certsTitle": "Certificates and Quality",
    "aboutUsPage.certsDescription":
      "Safety and quality are the foundation of our business. All our attractions are regularly inspected and have the required certificates.",
    "aboutUsPage.certInsurance": "Liability Insurance",
    "aboutUsPage.certInsuranceDesc": "Full civil liability coverage",
    "aboutUsPage.certEquipment": "Equipment Certificates",
    "aboutUsPage.certEquipmentDesc":
      "All attractions have the required certificates",
    "aboutUsPage.certReviews": "Technical Inspections",
    "aboutUsPage.certReviewsDesc": "Regular safety checks of equipment",
    "aboutUsPage.certTraining": "Team Training",
    "aboutUsPage.certTrainingDesc":
      "Continuous improvement of employee qualifications",
    "aboutUsPage.whyChooseUsTitle": "Why Clients Choose Us?",
    "aboutUsPage.whyChooseExperience": "Experience",
    "aboutUsPage.whyChooseExperienceDesc":
      "5 years on the market and hundreds of successful events",
    "aboutUsPage.whyChooseSafety": "Safety",
    "aboutUsPage.whyChooseSafetyDesc": "Full insurance and certified equipment",
    "aboutUsPage.whyChooseProfessionalism": "Professionalism",
    "aboutUsPage.whyChooseProfessionalismDesc":
      "Punctual delivery and professional service",
    "aboutUsPage.whyChooseIndividual": "Individual Approach",
    "aboutUsPage.whyChooseIndividualDesc": "We treat every event as unique",
    "offerPage.heroTitle": "Our Event Attraction Offer",
    "offerPage.heroDescription":
      "Discover our full range of professional event attractions and services. From party tents to comprehensive event management.",
    "offerPage.badgeLocation": "Radom and surroundings (30km)",
    "offerPage.filterLabel": "Categories:",
    "offerPage.allAttractionsCount": "All attractions ({count})",
    "offerPage.categoryAttractionsCount": "{categoryName} ({count})",
    "offerPage.noAttractionsTitle": "No attractions in this category",
    "offerPage.noAttractionsDescription":
      "Choose another category or contact us for individual solutions.",
    "offerPage.sectionTentsTitle": "🏕️ Party Tents",
    "offerPage.sectionTentsDescription":
      "Professional tents in various sizes, ideal for weddings, birthdays, and corporate events. We offer full assembly and dismantling service with options for flooring and lighting.",
    "offerPage.sectionInflatablesTitle": "🏰 Inflatable Attractions",
    "offerPage.sectionInflatablesDescription":
      "Safe and certified inflatables for children. Slides, castles, and playgrounds with professional service and liability insurance.",
    "offerPage.sectionEquipmentTitle": "🍭 Confectionery Equipment",
    "offerPage.sectionEquipmentDescription":
      "Cotton candy and popcorn machines, and elegant chocolate fountains. All with professional service and fresh products.",
    "offerPage.servicesIncludeTitle": "What do our services include?",
    "offerPage.serviceTransport": "Transport and assembly",
    "offerPage.serviceTransportDesc": "Full delivery and setup service",
    "offerPage.serviceProfessional": "Professional service",
    "offerPage.serviceProfessionalDesc": "Experienced staff during the event",
    "offerPage.serviceInsurance": "Liability insurance",
    "offerPage.serviceInsuranceDesc": "Full insurance coverage",
    "offerPage.serviceCertified": "Certified equipment",
    "offerPage.serviceCertifiedDesc": "Safe and functional devices",
    "offerPage.serviceFlexible": "Flexible dates",
    "offerPage.serviceFlexibleDesc": "Tailored to your needs",
    "offerPage.serviceConsultations": "Consultations",
    "offerPage.serviceConsultationsDesc": "Help in planning the event",
    "seo.homeTitle": "'SŁODKOLANDIA wita:' - Event Attraction Rental Radom",
    "seo.homeDescription":
      "Professional rental of party tents, inflatables, cotton candy, and popcorn in Radom and surroundings. Organize an unforgettable party!",
    "seo.offerTitle": "Offer - Event Attraction Rental | 'SŁODKOLANDIA wita:'",
    "seo.offerDescription":
      "Discover our full range of event attractions: party tents, inflatables, cotton candy, popcorn, chocolate fountains. Professional rental in Radom.",
    "seo.galleryTitle":
      "Photo Gallery - See Our Attractions in Action | 'SŁODKOLANDIA wita:'",
    "seo.galleryDescription":
      "View the photo gallery from our event productions. Party tents, inflatables, cotton candy, popcorn, and chocolate fountains in action.",
    "seo.pricingTitle":
      "Pricing for Event Attraction Rental | 'SŁODKOLANDIA wita:' Radom",
    "seo.pricingDescription":
      "Check current rental prices for party tents, inflatables, and catering equipment. Promotional packages and individual quotes.",
    "seo.contactTitle":
      "Contact - Event Attraction Rental Radom | 'SŁODKOLANDIA wita:'",
    "seo.contactDescription":
      "Contact us today! Phone: +48 531 890 827. Professional event attraction rental in Radom and surroundings.",
    "seo.aboutUsTitle":
      "About Us - 'SŁODKOLANDIA wita:' | Professional Event Attraction Rental Radom",
    "seo.aboutUsDescription":
      "Learn our history, values, and experience. 'SŁODKOLANDIA wita:' is a passion for creating unforgettable events in Radom and surroundings.",
    "attractionsData.namioty-imprezowe.name": "Party Tents",
    "attractionsData.namioty-imprezowe.description":
      "Professional party tents in various sizes. Perfect for weddings, birthdays, and corporate events.",
    "attractionsData.dmuchane-atrakcje.name": "Inflatable Attractions",
    "attractionsData.dmuchane-atrakcje.description":
      "Slides, bouncy castles, and playgrounds. Guaranteed fun for children of all ages!",
    "attractionsData.wata-cukrowa.name": "Cotton Candy",
    "attractionsData.wata-cukrowa.description":
      "Professional cotton candy machines with colorful flavors. A sweet treat for guests!",
    "attractionsData.popcorn.name": "Popcorn",
    "attractionsData.popcorn.description":
      "Popcorn machines. Fresh, aromatic popcorn at your event.",
    "attractionsData.fontanna-czekoladowa.name": "Chocolate Fountains",
    "attractionsData.fontanna-czekoladowa.description":
      "Elegant chocolate fountains with toppings. An exquisite attraction for true connoisseurs.",
    "attractionsData.kompleksowa-obsluga.name": "Comprehensive Event Service",
    "attractionsData.kompleksowa-obsluga.description":
      "Full event organization with our experienced team. From planning to execution.",
  },
};

const LanguageContext = createContext<LanguageContextType | undefined>(
  undefined
);

export const LanguageProvider: React.FC<{ children: ReactNode }> = ({
  children,
}) => {
  const [language, setLanguageState] = useState<Language>("pl");

  const setLanguage = (
    newLang: Language,
    options?: { preventNavigation?: boolean }
  ) => {
    setLanguageState(newLang);
  };

  const t = (
    key: string,
    replacements?: Record<string, string | number>
  ): string => {
    let translation = translations[language]?.[key] || key;
    if (replacements) {
      Object.keys(replacements).forEach((placeholder) => {
        const regex = new RegExp(`{${placeholder}}`, "g");
        translation = translation.replace(
          regex,
          String(replacements[placeholder])
        );
      });
    }
    return translation;
  };

  return (
    <LanguageContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </LanguageContext.Provider>
  );
};

export const useLanguage = (): LanguageContextType => {
  const context = useContext(LanguageContext);
  if (!context) {
    throw new Error("useLanguage must be used within a LanguageProvider");
  }
  return context;
};

-------------------------

import React, { useState, useEffect, useRef } from "react";
import {
  Link as WouterLink,
  useLocation,
  useRouter as useWouterRouterHook,
} from "wouter";
import {
  Menu,
  X,
  Phone,
  ChevronDown,
  Globe,
  MessageCircle,
  Star,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { cn } from "@/lib/utils";
import { useLanguage } from "@/hooks/useLanguage";
import ThemeToggle from "./ThemeToggle";
import {
  getLocalizedPath,
  findPageKeyByLocalizedPath,
  getHashSlug,
  PageKey,
  OfferHashKey,
  GalleryHashKey,
  Language,
} from "@/config/paths";

export default function Navbar() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [mobileDropdownsOpen, setMobileDropdownsOpen] = useState<{
    oferta?: boolean;
    foto?: boolean;
  }>({});
  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);

  // Pobierz navigate z useLocation na poziomie Navbar
  // currentWouterLocation będzie odnosić się do ścieżki głównego routera
  const [currentWouterLocation, navigate] = useLocation();

  const { language, setLanguage: setContextLanguage, t } = useLanguage();
  const navRef = useRef<HTMLElement>(null);
  const [scrollbarWidth, setScrollbarWidth] = useState(0);

  // Jeśli potrzebujesz dostępu do obiektu routera (np. dla matcher), możesz go zostawić
  // const wouterRouter = useWouterRouterHook();
  // Ale do nawigacji użyjemy `navigate` z `useLocation`

  useEffect(() => {
    const calculateScrollbarWidth = () => {
      const width = window.innerWidth - document.documentElement.clientWidth;
      setScrollbarWidth(width > 0 ? width : 0);
    };
    calculateScrollbarWidth();
    window.addEventListener("resize", calculateScrollbarWidth);
    return () => window.removeEventListener("resize", calculateScrollbarWidth);
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    const body = document.body;
    const navElement = navRef.current;
    if (!navElement || scrollbarWidth === undefined) return;

    const initialNavRight = navElement.style.right || "";
    const initialNavPaddingRight = navElement.style.paddingRight || "";

    const observer = new MutationObserver(() => {
      const dialogIsOpen =
        body.hasAttribute("data-scroll-locked") &&
        body.style.overflow === "hidden";

      if (dialogIsOpen) {
        navElement.style.right = `${scrollbarWidth}px`;
        navElement.style.paddingRight = "0px";
      } else {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    });

    observer.observe(body, {
      attributes: true,
      attributeFilter: ["style", "data-scroll-locked"],
    });

    return () => {
      observer.disconnect();
      if (navElement) {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    };
  }, [scrollbarWidth]);

  const changeLanguageAndNavigate = (newLang: Language) => {
    if (newLang === language) return;

    // Ustaw język w kontekście. Jeśli setContextLanguage ma opcję preventNavigation, można jej użyć.
    // W przeciwnym razie po prostu ustawia stan.
    setContextLanguage(newLang, { preventNavigation: true });

    const { pageKey, hashKey } = findPageKeyByLocalizedPath(
      // Użyj window.location, bo currentWouterLocation może nie być jeszcze zaktualizowane
      // po zmianie `base` w App.tsx, jeśli zmiana języka jest bardzo szybka.
      // Lub upewnij się, że `currentWouterLocation` jest zawsze aktualne.
      window.location.pathname + window.location.search + window.location.hash
    );

    let targetPath: string;
    if (pageKey && pageKey !== "NOT_FOUND") {
      targetPath = getLocalizedPath(pageKey, newLang, hashKey || undefined);
    } else {
      targetPath = getLocalizedPath("HOME", newLang);
    }

    // Użyj funkcji `navigate` uzyskanej z `useLocation`
    if (currentWouterLocation !== targetPath) {
      // Sprawdź, czy zmiana jest potrzebna
      navigate(targetPath, { replace: true });
    }
    // handleLinkClick(false); // Możesz to odkomentować, jeśli chcesz zachować menu otwarte
  };

  const isActive = (
    pageKeyToCheck: PageKey,
    hashKeyToCheck?: OfferHashKey | GalleryHashKey
  ) => {
    const {
      pageKey: currentPageKey,
      lang: currentLang,
      hashKey: currentHashKeyFromPaths,
    } = findPageKeyByLocalizedPath(currentWouterLocation); // Używamy currentWouterLocation, które jest aktualizowane przez wouter

    if (currentLang !== language) return false;
    if (currentPageKey !== pageKeyToCheck) return false;

    if (hashKeyToCheck) {
      return currentHashKeyFromPaths === hashKeyToCheck;
    }
    // Dla linków bez hasha (np. główna /oferta), jest aktywny, jeśli pageKey pasuje i nie ma konkretnego hasha do sprawdzenia
    // LUB jeśli sprawdzamy link do strony głównej kategorii i aktualny URL nie ma hasha.
    // Jeśli findPageKeyByLocalizedPath zwraca null dla currentHashKeyFromPaths, gdy nie ma hasha, to to jest ok.
    return !hashKeyToCheck && !currentHashKeyFromPaths;
  };

  const handleLinkClick = (closeMobileMenu = true) => {
    if (closeMobileMenu) {
      setIsMobileMenuOpen(false);
      setMobileDropdownsOpen({});
    }
  };

  const toggleMobileDropdown = (key: "oferta" | "foto") => {
    setMobileDropdownsOpen((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  const ofertaLinks: {
    pageKey: PageKey;
    hashKey?: OfferHashKey;
    labelKey: string;
  }[] = [
    { pageKey: "OFFER", labelKey: "nav.allAttractions" },
    { pageKey: "OFFER", hashKey: "TENTS", labelKey: "nav.tents" },
    { pageKey: "OFFER", hashKey: "INFLATABLES", labelKey: "nav.inflatables" },
    { pageKey: "OFFER", hashKey: "POPCORN", labelKey: "nav.popcorn" },
    { pageKey: "OFFER", hashKey: "COTTON_CANDY", labelKey: "nav.cottonCandy" },
    {
      pageKey: "OFFER",
      hashKey: "CHOCOLATE_FOUNTAIN",
      labelKey: "nav.chocolateFountain",
    },
  ];

  const galeriaLinks: {
    pageKey: PageKey;
    hashKey?: GalleryHashKey;
    labelKey: string;
  }[] = [
    { pageKey: "GALLERY", labelKey: "nav.allPhotos" },
    { pageKey: "GALLERY", hashKey: "PHOTO_TENTS", labelKey: "nav.photoTents" },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_INFLATABLES",
      labelKey: "nav.photoInflatables",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_COTTON_CANDY",
      labelKey: "nav.photoCottonCandy",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_POPCORN",
      labelKey: "nav.photoPopcorn",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_FOUNTAINS",
      labelKey: "nav.photoFountains",
    },
  ];

  return (
    <nav
      ref={navRef}
      className={cn(
        "fixed top-0 left-0 right-0 z-50 transition-all duration-300",
        isScrolled
          ? "bg-white/95 dark:bg-slate-900/95 backdrop-blur-md shadow-lg"
          : "bg-white dark:bg-slate-900"
      )}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          <WouterLink
            href={getLocalizedPath("HOME", language)}
            onClick={() => handleLinkClick()}
          >
            <div className="flex items-center space-x-3 hover:opacity-80 transition-opacity">
              <div className="w-10 h-10 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-lg">S</span>
              </div>
              <span className="brand-title text-xl font-bold text-slate-800 dark:text-white whitespace-nowrap">
                {t("hero.title")}
              </span>
            </div>
          </WouterLink>

          <div className="hidden lg:flex items-center space-x-4">
            <WouterLink href={getLocalizedPath("HOME", language)}>
              <Button
                variant={isActive("HOME") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("HOME") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.home")}
              </Button>
            </WouterLink>

            <WouterLink href={getLocalizedPath("ABOUT", language)}>
              <Button
                variant={isActive("ABOUT") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("ABOUT") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.about")}
              </Button>
            </WouterLink>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button
                  variant={isActive("OFFER") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("OFFER") && // Sprawdzamy tylko główny PageKey dla podświetlenia triggera
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                >
                  {t("nav.offer")} <ChevronDown className="ml-1 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="start" className="w-56">
                {ofertaLinks.map((link) => (
                  <DropdownMenuItem
                    asChild
                    key={`${link.pageKey}-${link.hashKey || "base"}`}
                  >
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      onClick={() => handleLinkClick()}
                      className="w-full"
                    >
                      {t(link.labelKey)}
                    </WouterLink>
                  </DropdownMenuItem>
                ))}
              </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button
                  variant={isActive("GALLERY") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("GALLERY") && // Sprawdzamy tylko główny PageKey
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                >
                  {t("nav.photo")}
                  <ChevronDown className="ml-1 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="start" className="w-56">
                {galeriaLinks.map((link) => (
                  <DropdownMenuItem
                    asChild
                    key={`${link.pageKey}-${link.hashKey || "base"}`}
                  >
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      onClick={() => handleLinkClick()}
                      className="w-full"
                    >
                      {t(link.labelKey)}
                    </WouterLink>
                  </DropdownMenuItem>
                ))}
              </DropdownMenuContent>
            </DropdownMenu>

            <WouterLink href={getLocalizedPath("PRICING", language)}>
              <Button
                variant={isActive("PRICING") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("PRICING") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.pricing")}
              </Button>
            </WouterLink>
            <WouterLink href={getLocalizedPath("CONTACT", language)}>
              <Button
                variant={isActive("CONTACT") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("CONTACT") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.contact")}
              </Button>
            </WouterLink>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="icon">
                  <Globe className="h-5 w-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem
                  onClick={() => changeLanguageAndNavigate("pl")}
                >
                  🇵🇱 Polski
                </DropdownMenuItem>
                <DropdownMenuItem
                  onClick={() => changeLanguageAndNavigate("en")}
                >
                  🇬🇧 English
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>

            <ThemeToggle />

            <a
              href="https://m.me/slodkolandiawita"
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-600 hover:text-blue-700 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors"
              title="Messenger"
            >
              <MessageCircle className="h-5 w-5" />
            </a>

            <Dialog
              modal={false}
              open={isReviewModalOpen}
              onOpenChange={(open) => {
                setIsReviewModalOpen(open);
              }}
            >
              <DialogTrigger asChild>
                <Button
                  variant="ghost"
                  size="icon"
                  className="text-amber-600 hover:text-amber-700 hover:bg-amber-100 dark:hover:bg-amber-900/20"
                  title={t("nav.review")}
                >
                  <Star className="h-5 w-5" />
                </Button>
              </DialogTrigger>
              <DialogContent className="sm:max-w-md">
                <DialogHeader>
                  <DialogTitle className="text-center">
                    Dodaj opinię o "{t("hero.title")}"!
                  </DialogTitle>
                  <DialogDescription className="text-center">
                    Zeskanuj kod QR, aby dodać opinię na Google Maps.
                  </DialogDescription>
                </DialogHeader>
                <div className="flex flex-col items-center space-y-4 py-4">
                  <div className="bg-white p-4 rounded-lg shadow-inner">
                    <img
                      src="/qr-opinia.png"
                      alt="QR Code - Dodaj opinię"
                      className="w-48 h-48"
                    />
                  </div>
                  <p className="text-sm text-gray-600 dark:text-gray-300 text-center">
                    Kod QR - Dodaj opinię
                    <br />
                    lub kliknij w link:
                  </p>
                  <a
                    href="https://g.page/r/CWM4dGuLyfXlEAE/review"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors"
                  >
                    Dodaj opinię na Google
                  </a>
                </div>
              </DialogContent>
            </Dialog>

            <a
              href="tel:+48531890827"
              className="btn-gradient text-white px-3 py-2 rounded-lg font-semibold hover:shadow-lg transition-all flex items-center space-x-2 whitespace-nowrap text-sm"
            >
              <Phone className="h-4 w-4" />
              <span>531 890 827</span>
            </a>
          </div>

          <div className="lg:hidden">
            <Button
              variant="ghost"
              size="icon"
              onClick={() => {
                setIsMobileMenuOpen(!isMobileMenuOpen);
                if (isMobileMenuOpen) setMobileDropdownsOpen({});
              }}
              aria-label="Toggle mobile menu"
            >
              {isMobileMenuOpen ? (
                <X className="h-6 w-6" />
              ) : (
                <Menu className="h-6 w-6" />
              )}
            </Button>
          </div>
        </div>
      </div>

      {isMobileMenuOpen && (
        <div
          className="lg:hidden fixed inset-x-0 top-16 bottom-0 z-40 bg-white/95 dark:bg-slate-900/95 backdrop-blur-md overflow-y-auto"
          style={{ WebkitOverflowScrolling: "touch" }}
        >
          <div className="px-4 pt-2 pb-24 space-y-1">
            <WouterLink href={getLocalizedPath("HOME", language)}>
              <Button
                variant={isActive("HOME") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("HOME") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.home")}
              </Button>
            </WouterLink>
            <WouterLink href={getLocalizedPath("ABOUT", language)}>
              <Button
                variant={isActive("ABOUT") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("ABOUT") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.about")}
              </Button>
            </WouterLink>

            <div>
              <Button
                variant="ghost"
                className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                onClick={() => toggleMobileDropdown("oferta")}
              >
                {t("nav.offer")}
                <ChevronDown
                  className={cn(
                    "h-5 w-5 transition-transform",
                    mobileDropdownsOpen.oferta && "rotate-180"
                  )}
                />
              </Button>
              {mobileDropdownsOpen.oferta && (
                <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                  {ofertaLinks.map((link) => (
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      key={`${link.pageKey}-${link.hashKey || "base"}`}
                    >
                      <Button
                        variant="ghost"
                        className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                        onClick={() => handleLinkClick()}
                      >
                        {t(link.labelKey)}
                      </Button>
                    </WouterLink>
                  ))}
                </div>
              )}
            </div>

            <div>
              <Button
                variant="ghost"
                className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                onClick={() => toggleMobileDropdown("foto")}
              >
                {t("nav.photo")}
                <ChevronDown
                  className={cn(
                    "h-5 w-5 transition-transform",
                    mobileDropdownsOpen.foto && "rotate-180"
                  )}
                />
              </Button>
              {mobileDropdownsOpen.foto && (
                <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                  {galeriaLinks.map((link) => (
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      key={`${link.pageKey}-${link.hashKey || "base"}`}
                    >
                      <Button
                        variant="ghost"
                        className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                        onClick={() => handleLinkClick()}
                      >
                        {t(link.labelKey)}
                      </Button>
                    </WouterLink>
                  ))}
                </div>
              )}
            </div>

            <WouterLink href={getLocalizedPath("PRICING", language)}>
              <Button
                variant={isActive("PRICING") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("PRICING") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.pricing")}
              </Button>
            </WouterLink>
            <WouterLink href={getLocalizedPath("CONTACT", language)}>
              <Button
                variant={isActive("CONTACT") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("CONTACT") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.contact")}
              </Button>
            </WouterLink>

            <div className="pt-4 space-y-3 border-t border-slate-200 dark:border-slate-700 mt-3">
              <div className="flex justify-center space-x-4">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => changeLanguageAndNavigate("pl")}
                  className={
                    language === "pl" ? "bg-sky-100 dark:bg-sky-900" : ""
                  }
                >
                  🇵🇱 PL
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => changeLanguageAndNavigate("en")}
                  className={
                    language === "en" ? "bg-sky-100 dark:bg-sky-900" : ""
                  }
                >
                  🇬🇧 EN
                </Button>
                <ThemeToggle />
              </div>
              <Button
                onClick={() => {
                  setIsReviewModalOpen(true);
                  handleLinkClick();
                }}
                className="w-full bg-amber-600 hover:bg-amber-700 text-white font-semibold flex items-center justify-center space-x-2"
              >
                <Star className="h-4 w-4" />
                <span>{t("nav.review")}</span>
              </Button>
              <a
                href="https://m.me/slodkolandiawita"
                target="_blank"
                rel="noopener noreferrer"
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                onClick={() => handleLinkClick()}
              >
                <MessageCircle className="h-4 w-4" />
                <span>Messenger</span>
              </a>
              <a
                href="tel:+48531890827"
                className="btn-gradient text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                onClick={() => handleLinkClick()}
              >
                <Phone className="h-4 w-4" />
                <span>Zadzwoń: 531 890 827</span>
              </a>
            </div>
          </div>
        </div>
      )}
    </nav>
  );
}

--------------------------

import { useEffect } from "react";
import {
  Switch,
  Route,
  useLocation,
  useRouter,
  Router as WouterRouter,
} from "wouter";
// ... (reszta importów jak w Twoim pliku)
import { LanguageProvider, useLanguage, Language } from "@/hooks/useLanguage";
import {
  getLocalizedPath,
  getInternalBasePath,
  findPageKeyByLocalizedPath,
  PageKey,
} from "@/config/paths";
import Navbar from "./components/Navbar"; // Upewnij się, że Navbar jest zaimportowany
import Footer from "./components/Footer";
import ScrollToTopButton from "./components/ScrollToTopButton";
import CookieConsent from "./components/CookieConsent";
import Home from "./pages/Home";
import Oferta from "./pages/Oferta";
import Galeria from "./pages/Galeria";
import Cennik from "./pages/Cennik";
import Kontakt from "./pages/Kontakt";
import ONas from "./pages/ONas";
// import PrivacyPolicyPage from "./pages/PrivacyPolicyPage";
// import TermsOfServicePage from "./pages/TermsOfServicePage";
import NotFound from "./pages/not-found";
import { QueryClientProvider } from "@tanstack/react-query";
import { HelmetProvider } from "react-helmet-async";
import { queryClient } from "./lib/queryClient";
import { Toaster } from "@/components/ui/toaster";
import { TooltipProvider } from "@/components/ui/tooltip";

function ScrollRestoration() {
  const [wouterLocation] = useLocation();

  useEffect(() => {
    const [pathOnly, hashValue] = wouterLocation.split("#");
    if (!hashValue) {
      window.scrollTo(0, 0);
    } else {
      setTimeout(() => {
        const element = document.getElementById(hashValue);
        if (element) {
          const navbarHeight =
            document.querySelector("nav")?.offsetHeight || 70;
          const yOffset = -navbarHeight - 20;
          const y =
            element.getBoundingClientRect().top + window.pageYOffset + yOffset;
          window.scrollTo({ top: y, behavior: "smooth" });
        } else {
          window.scrollTo(0, 0);
        }
      }, 100);
    }
  }, [wouterLocation]);
  return null;
}

function LanguageRouterLogic() {
  const [wouterLocation, navigate] = useLocation(); // navigate jest potrzebne do przekierowań
  const { language, setLanguage: setGlobalLanguage } = useLanguage();

  useEffect(() => {
    const currentFullPathInBrowser =
      window.location.pathname + window.location.search + window.location.hash;
    const { lang: langFromUrl, pageKey: pageKeyFromUrl } =
      findPageKeyByLocalizedPath(currentFullPathInBrowser);

    if (langFromUrl && langFromUrl !== language) {
      // Ustaw język w kontekście, ale nie powoduj nawigacji z tego miejsca,
      // ponieważ URL już jest poprawny.
      setGlobalLanguage(langFromUrl, { preventNavigation: true });
    } else if (!langFromUrl && currentFullPathInBrowser !== "/") {
      // Brak poprawnego prefiksu językowego w URL (a nie jest to root)
      const defaultLang: Language = "pl";
      let pathWithoutLang = currentFullPathInBrowser;
      if (pathWithoutLang.startsWith("/"))
        pathWithoutLang = pathWithoutLang.substring(1);

      let targetPageKey: PageKey = "HOME";
      let targetHashKey;

      const parsedAsDefaultLang = findPageKeyByLocalizedPath(
        `/${defaultLang}/${pathWithoutLang}`
      );
      if (
        parsedAsDefaultLang.pageKey &&
        parsedAsDefaultLang.pageKey !== "NOT_FOUND"
      ) {
        targetPageKey = parsedAsDefaultLang.pageKey;
        targetHashKey = parsedAsDefaultLang.hashKey;
      }

      const redirectTo = getLocalizedPath(
        targetPageKey,
        defaultLang,
        targetHashKey || undefined
      );
      if (wouterLocation !== redirectTo) {
        // Sprawdź, czy przekierowanie jest konieczne
        navigate(redirectTo, { replace: true });
      }
    } else if (currentFullPathInBrowser === "/") {
      // Użytkownik wszedł na root domeny (np. example.com/)
      const redirectTo = getLocalizedPath("HOME", "pl");
      if (wouterLocation !== redirectTo) {
        navigate(redirectTo, { replace: true });
      }
    }
  }, [wouterLocation, language, setGlobalLanguage, navigate]);

  return null;
}

function AppRoutes() {
  const { language } = useLanguage();
  // Trasy są relatywne do `base` ustawionego w `AppContent`
  return (
    <Switch>
      <Route path={getInternalBasePath("HOME", language)} component={Home} />
      <Route path={getInternalBasePath("ABOUT", language)} component={ONas} />
      <Route path={getInternalBasePath("OFFER", language)} component={Oferta} />
      <Route
        path={getInternalBasePath("GALLERY", language)}
        component={Galeria}
      />
      <Route
        path={getInternalBasePath("PRICING", language)}
        component={Cennik}
      />
      <Route
        path={getInternalBasePath("CONTACT", language)}
        component={Kontakt}
      />
      {/* <Route
        path={getInternalBasePath("PRIVACY_POLICY", language)}
        component={PrivacyPolicyPage}
      />
      <Route
        path={getInternalBasePath("TERMS", language)}
        component={TermsOfServicePage}
      /> */}
      <Route>
        <NotFound />
      </Route>
    </Switch>
  );
}

function AppContent() {
  const { language } = useLanguage();
  const routerKey = `router-${language}`;

  return (
    <div className="min-h-screen flex flex-col">
      <ScrollRestoration />
      <Navbar />{" "}
      {/* Navbar użyje useLanguage i funkcji nawigacyjnej z wouter */}
      <main className="flex-1">
        <WouterRouter base={`/${language}`} key={routerKey}>
          <AppRoutes />
        </WouterRouter>
      </main>
      <Footer />
      <ScrollToTopButton />
      <CookieConsent />
    </div>
  );
}

function App() {
  return (
    <HelmetProvider>
      <QueryClientProvider client={queryClient}>
        <LanguageProvider>
          <TooltipProvider>
            <Toaster />
            {/* Główny Router, który nie zmienia się przy zmianie języka */}
            <WouterRouter>
              <LanguageRouterLogic />
              <AppContent />
            </WouterRouter>
          </TooltipProvider>
        </LanguageProvider>
      </QueryClientProvider>
    </HelmetProvider>
  );
}

export default App;

-------------------------

@import url("https://fonts.googleapis.com/css2?family=Ruslan+Display&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: 248 250 252; /* #F8FAFC */
  --foreground: 51 65 85; /* #334155 */
  --muted: 241 245 249; /* #F1F5F9 */
  --muted-foreground: 100 116 139; /* #64748B */
  --popover: 255 255 255; /* #FFFFFF */
  --popover-foreground: 51 65 85; /* #334155 */
  --card: 255 255 255; /* #FFFFFF */
  --card-foreground: 51 65 85; /* #334155 */
  --border: 226 232 240; /* #E2E8F0 */
  --input: 226 232 240; /* #E2E8F0 */
  --primary: 14 165 233; /* #0EA5E9 - Sky 500 */
  --primary-foreground: 255 255 255; /* #FFFFFF */
  --secondary: 241 245 249; /* #F1F5F9 */
  --secondary-foreground: 30 41 59; /* #1E293B */
  --accent: 16 185 129; /* #10B981 - Emerald 500 */
  --accent-foreground: 255 255 255; /* #FFFFFF */
  --destructive: 239 68 68; /* #EF4444 */
  --destructive-foreground: 255 255 255; /* #FFFFFF */
  --ring: 14 165 233; /* #0EA5E9 */
  --radius: 0.5rem;
}

.dark {
  --background: 45 55 72; /* #2D3748 - Warmer dark background */
  --foreground: 247 250 252; /* #F7FAFC */
  --muted: 74 85 104; /* #4A5568 - Lighter muted */
  --muted-foreground: 203 213 225; /* #CBD5E1 */
  --popover: 68 90 120; /* #445A78 - Colorful popover */
  --popover-foreground: 247 250 252; /* #F7FAFC */
  --card: 68 90 120; /* #445A78 - Colorful card background */
  --card-foreground: 247 250 252; /* #F7FAFC */
  --border: 113 128 150; /* #718096 - Lighter border */
  --input: 113 128 150; /* #718096 */
  --primary: 56 178 172; /* #38B2AC - Teal primary */
  --primary-foreground: 255 255 255; /* #FFFFFF */
  --secondary: 102 126 234; /* #667EEA - Purple secondary */
  --secondary-foreground: 255 255 255; /* #FFFFFF */
  --accent: 251 146 60; /* #FB923C - Orange accent */
  --accent-foreground: 255 255 255; /* #FFFFFF */
  --destructive: 245 101 101; /* #F56565 */
  --destructive-foreground: 255 255 255; /* #FFFFFF */
  --ring: 56 178 172; /* #38B2AC */
}

@layer base {
  *,
  *::before,
  *::after {
    @apply border-border;
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  html {
    scroll-behavior: smooth;
    /* overflow-x: hidden; */
    scrollbar-gutter: stable;
  }
  body {
    @apply font-sans antialiased bg-background text-foreground;
    font-family: "Inter", sans-serif;
    /* overflow-x: hidden; */
    margin: 0;
  }
  body[data-scroll-locked] {
    position: static !important;
  }
  h1,
  .brand-title {
    font-family: "Ruslan Display", cursive;
  }
}

@layer components {
  /* Hero gradient overlay */
  .hero-gradient {
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.4) 0%,
      rgba(0, 0, 0, 0.3) 50%,
      rgba(0, 0, 0, 0.2) 100%
    );
  }

  /* Improved button contrast in light theme */
  .btn-ghost {
    color: rgb(51, 65, 85) !important;
  }

  .dark .btn-ghost {
    color: rgb(247, 250, 252) !important;
  }

  /* Better text contrast for category names */
  .category-text {
    color: rgb(51, 65, 85);
  }

  .dark .category-text {
    color: rgb(247, 250, 252);
  }

  /* Improved navbar background for dark theme */
  .dark nav {
    background: linear-gradient(
      135deg,
      rgb(68, 90, 120) 0%,
      rgb(74, 85, 104) 100%
    );
  }

  /* Better gradient buttons for dark theme */
  .dark .btn-gradient {
    background: linear-gradient(135deg, #38b2ac 0%, #667eea 100%);
  }

  .dark .btn-gradient:hover {
    background: linear-gradient(135deg, #319795 0%, #5a67d8 100%);
  }

  .card-hover {
    transition: all 0.3s ease;
  }

  .card-hover:hover {
    transform: translateY(-8px);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  }

  .btn-gradient {
    background: linear-gradient(135deg, #0ea5e9 0%, #10b981 100%);
  }

  .btn-gradient:hover {
    background: linear-gradient(135deg, #0284c7 0%, #059669 100%);
  }

  .modal-backdrop {
    backdrop-filter: blur(4px);
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1rem;
  }

  @media (min-width: 768px) {
    .gallery-grid {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  .lightbox-nav {
    transition: opacity 0.2s ease;
  }
}

/* Responsywne poprawki dla navbaru */
@media (max-width: 1024px) {
  .brand-title {
    font-size: 1rem;
    white-space: nowrap;
  }
}

@media (max-width: 768px) {
  .brand-title {
    font-size: 0.875rem;
  }
}

@layer utilities {
  .animate-fadeIn {
    animation: fadeIn 0.5s ease-in-out;
  }

  .animate-slideUp {
    animation: slideUp 0.6s ease-out;
  }

  .animate-bounce-slow {
    animation: bounce 2s infinite;
  }
}

@keyframes fadeIn {
  0% {
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@keyframes slideUp {
  0% {
    transform: translateY(30px);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}

--------------------------

// client/src/components/Navbar.tsx
import React, { useState, useEffect, useRef } from "react";
import {
  Link as WouterLink,
  useLocation,
  // useRouter as useWouterRouterHook, // Można usunąć, jeśli nie jest używany
} from "wouter";
import {
  Menu,
  X,
  Phone,
  ChevronDown,
  Globe,
  MessageCircle,
  Star,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { cn } from "@/lib/utils";
import { useLanguage } from "@/hooks/useLanguage"; // Zakładamy, że Language jest eksportowane z paths.ts i useLanguage go używa
import ThemeToggle from "./ThemeToggle";
import {
  getLocalizedPath,
  findPageKeyByLocalizedPath,
  getHashSlug,
  PageKey,
  OfferHashKey,
  GalleryHashKey,
  Language, // Ważne: Importujemy Language z paths.ts
} from "@/config/paths";

export default function Navbar() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [mobileDropdownsOpen, setMobileDropdownsOpen] = useState<{
    oferta?: boolean;
    foto?: boolean;
  }>({});
  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);
  const [currentWouterLocation, navigate] = useLocation();
  const { language, setLanguage: setContextLanguage, t } = useLanguage();
  const navRef = useRef<HTMLElement>(null);
  const [scrollbarWidth, setScrollbarWidth] = useState(0);

  useEffect(() => {
    const calculateScrollbarWidth = () => {
      const width = window.innerWidth - document.documentElement.clientWidth;
      setScrollbarWidth(width > 0 ? width : 0);
    };
    calculateScrollbarWidth();
    window.addEventListener("resize", calculateScrollbarWidth);
    return () => window.removeEventListener("resize", calculateScrollbarWidth);
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    const body = document.body;
    const navElement = navRef.current;
    if (!navElement || scrollbarWidth === undefined) return;
    const initialNavRight = navElement.style.right || "";
    const initialNavPaddingRight = navElement.style.paddingRight || "";
    const observer = new MutationObserver(() => {
      const dialogIsOpen =
        body.hasAttribute("data-scroll-locked") &&
        body.style.overflow === "hidden";
      if (dialogIsOpen) {
        navElement.style.right = `${scrollbarWidth}px`;
        navElement.style.paddingRight = "0px";
      } else {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    });
    observer.observe(body, {
      attributes: true,
      attributeFilter: ["style", "data-scroll-locked"],
    });
    return () => {
      observer.disconnect();
      if (navElement) {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    };
  }, [scrollbarWidth]);

  const changeLanguageAndNavigate = (newLang: Language) => {
    if (newLang === language) return;
    setContextLanguage(newLang, { preventNavigation: true });
    const { pageKey, hashKey } = findPageKeyByLocalizedPath(
      window.location.pathname + window.location.search + window.location.hash
    );
    let targetPath: string;
    if (pageKey && pageKey !== "NOT_FOUND") {
      targetPath = getLocalizedPath(pageKey, newLang, hashKey || undefined);
    } else {
      targetPath = getLocalizedPath("HOME", newLang);
    }
    if (currentWouterLocation !== targetPath) {
      navigate(targetPath, { replace: true });
    }
  };

  const isActive = (
    pageKeyToCheck: PageKey,
    hashKeyToCheck?: OfferHashKey | GalleryHashKey
  ) => {
    const {
      pageKey: currentPageKey,
      lang: currentLang,
      hashKey: currentHashKeyFromPaths,
    } = findPageKeyByLocalizedPath(currentWouterLocation);
    if (currentLang !== language) return false;
    if (currentPageKey !== pageKeyToCheck) return false;
    if (hashKeyToCheck) {
      return currentHashKeyFromPaths === hashKeyToCheck;
    }
    return !currentHashKeyFromPaths;
  };

  const handleLinkClick = (closeMobileMenu = true) => {
    if (closeMobileMenu) {
      setIsMobileMenuOpen(false);
      setMobileDropdownsOpen({});
    }
  };

  const toggleMobileDropdown = (key: "oferta" | "foto") => {
    setMobileDropdownsOpen((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  const ofertaLinks: {
    pageKey: PageKey;
    hashKey?: OfferHashKey;
    labelKey: string;
  }[] = [
    { pageKey: "OFFER", labelKey: "nav.allAttractions" },
    { pageKey: "OFFER", hashKey: "TENTS", labelKey: "nav.tents" },
    { pageKey: "OFFER", hashKey: "INFLATABLES", labelKey: "nav.inflatables" },
    { pageKey: "OFFER", hashKey: "POPCORN", labelKey: "nav.popcorn" },
    { pageKey: "OFFER", hashKey: "COTTON_CANDY", labelKey: "nav.cottonCandy" },
    {
      pageKey: "OFFER",
      hashKey: "CHOCOLATE_FOUNTAIN",
      labelKey: "nav.chocolateFountain",
    },
  ];

  const galeriaLinks: {
    pageKey: PageKey;
    hashKey?: GalleryHashKey;
    labelKey: string;
  }[] = [
    { pageKey: "GALLERY", labelKey: "nav.allPhotos" },
    { pageKey: "GALLERY", hashKey: "PHOTO_TENTS", labelKey: "nav.photoTents" },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_INFLATABLES",
      labelKey: "nav.photoInflatables",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_COTTON_CANDY",
      labelKey: "nav.photoCottonCandy",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_POPCORN",
      labelKey: "nav.photoPopcorn",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_FOUNTAINS",
      labelKey: "nav.photoFountains",
    },
  ];

  return (
    <nav
      ref={navRef}
      className={cn(
        "fixed top-0 left-0 right-0 z-50 transition-all duration-300",
        isScrolled
          ? "bg-white/95 dark:bg-slate-900/95 backdrop-blur-md shadow-lg"
          : "bg-white dark:bg-slate-900"
      )}
    >
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div className="flex justify-between items-center h-16">
          <WouterLink
            href={getLocalizedPath("HOME", language)}
            onClick={() => handleLinkClick()}
          >
            <div className="flex items-center space-x-3 hover:opacity-80 transition-opacity">
              <div className="w-10 h-10 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-lg flex items-center justify-center">
                <span className="text-white font-bold text-lg">S</span>
              </div>
              <span className="brand-title text-xl font-bold text-slate-800 dark:text-white whitespace-nowrap">
                {t("hero.title")}
              </span>
            </div>
          </WouterLink>

          <div className="hidden lg:flex items-center space-x-4">
            <WouterLink href={getLocalizedPath("HOME", language)}>
              <Button
                variant={isActive("HOME") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("HOME") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.home")}
              </Button>
            </WouterLink>

            <WouterLink href={getLocalizedPath("ABOUT", language)}>
              <Button
                variant={isActive("ABOUT") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("ABOUT") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.about")}
              </Button>
            </WouterLink>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button
                  variant={isActive("OFFER") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("OFFER") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                >
                  {t("nav.offer")} <ChevronDown className="ml-1 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="start" className="w-56">
                {ofertaLinks.map((link) => (
                  <DropdownMenuItem
                    asChild
                    key={`${link.pageKey}-${link.hashKey || "base"}`}
                  >
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      onClick={() => handleLinkClick()}
                      className="w-full"
                    >
                      {t(link.labelKey)}
                    </WouterLink>
                  </DropdownMenuItem>
                ))}
              </DropdownMenuContent>
            </DropdownMenu>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button
                  variant={isActive("GALLERY") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("GALLERY") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                >
                  {t("nav.photo")}
                  <ChevronDown className="ml-1 h-4 w-4" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="start" className="w-56">
                {galeriaLinks.map((link) => (
                  <DropdownMenuItem
                    asChild
                    key={`${link.pageKey}-${link.hashKey || "base"}`}
                  >
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      onClick={() => handleLinkClick()}
                      className="w-full"
                    >
                      {t(link.labelKey)}
                    </WouterLink>
                  </DropdownMenuItem>
                ))}
              </DropdownMenuContent>
            </DropdownMenu>

            <WouterLink href={getLocalizedPath("PRICING", language)}>
              <Button
                variant={isActive("PRICING") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("PRICING") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.pricing")}
              </Button>
            </WouterLink>
            <WouterLink href={getLocalizedPath("CONTACT", language)}>
              <Button
                variant={isActive("CONTACT") ? "default" : "ghost"}
                className={cn(
                  "text-base font-medium px-3",
                  !isActive("CONTACT") &&
                    "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.contact")}
              </Button>
            </WouterLink>

            <DropdownMenu modal={false}>
              <DropdownMenuTrigger asChild>
                <Button variant="ghost" size="icon">
                  <Globe className="h-5 w-5" />
                </Button>
              </DropdownMenuTrigger>
              <DropdownMenuContent align="end">
                <DropdownMenuItem
                  onClick={() => changeLanguageAndNavigate("pl")}
                >
                  🇵🇱 Polski
                </DropdownMenuItem>
                <DropdownMenuItem
                  onClick={() => changeLanguageAndNavigate("en")}
                >
                  🇬🇧 English
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>

            <ThemeToggle />

            <a
              href="https://m.me/slodkolandiawita"
              target="_blank"
              rel="noopener noreferrer"
              className="text-blue-600 hover:text-blue-700 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors"
              title="Messenger"
            >
              <MessageCircle className="h-5 w-5" />
            </a>

            <Dialog
              modal={false}
              open={isReviewModalOpen}
              onOpenChange={(open) => {
                setIsReviewModalOpen(open);
              }}
            >
              <DialogTrigger asChild>
                <Button
                  variant="ghost"
                  size="icon"
                  className="text-amber-600 hover:text-amber-700 hover:bg-amber-100 dark:hover:bg-amber-900/20"
                  title={t("nav.review")}
                >
                  <Star className="h-5 w-5" />
                </Button>
              </DialogTrigger>
              <DialogContent className="sm:max-w-md">
                <DialogHeader>
                  <DialogTitle className="text-center">
                    Dodaj opinię o "{t("hero.title")}"!
                  </DialogTitle>
                  <DialogDescription className="text-center">
                    Zeskanuj kod QR, aby dodać opinię na Google Maps.
                  </DialogDescription>
                </DialogHeader>
                <div className="flex flex-col items-center space-y-4 py-4">
                  <div className="bg-white p-4 rounded-lg shadow-inner">
                    <img
                      src="/qr-opinia.png"
                      alt="QR Code - Dodaj opinię"
                      className="w-48 h-48"
                    />
                  </div>
                  <p className="text-sm text-gray-600 dark:text-gray-300 text-center">
                    Kod QR - Dodaj opinię
                    <br />
                    lub kliknij w link:
                  </p>
                  <a
                    href="https://g.page/r/CWM4dGuLyfXlEAE/review"
                    target="_blank"
                    rel="noopener noreferrer"
                    className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors"
                  >
                    Dodaj opinię na Google
                  </a>
                </div>
              </DialogContent>
            </Dialog>

            <a
              href="tel:+48531890827"
              className="btn-gradient text-white px-3 py-2 rounded-lg font-semibold hover:shadow-lg transition-all flex items-center space-x-2 whitespace-nowrap text-sm"
            >
              <Phone className="h-4 w-4" />
              <span>531 890 827</span>
            </a>
          </div>

          <div className="lg:hidden">
            <Button
              variant="ghost"
              size="icon"
              onClick={() => {
                setIsMobileMenuOpen(!isMobileMenuOpen);
                if (isMobileMenuOpen) setMobileDropdownsOpen({});
              }}
              aria-label="Toggle mobile menu"
            >
              {isMobileMenuOpen ? (
                <X className="h-6 w-6" />
              ) : (
                <Menu className="h-6 w-6" />
              )}
            </Button>
          </div>
        </div>
      </div>

      {isMobileMenuOpen && (
        <div
          className="lg:hidden fixed inset-x-0 top-16 bottom-0 z-40 bg-white/95 dark:bg-slate-900/95 backdrop-blur-md overflow-y-auto"
          style={{ WebkitOverflowScrolling: "touch" }}
        >
          <div className="px-4 pt-2 pb-24 space-y-1">
            <WouterLink href={getLocalizedPath("HOME", language)}>
              <Button
                variant={isActive("HOME") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("HOME") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.home")}
              </Button>
            </WouterLink>
            <WouterLink href={getLocalizedPath("ABOUT", language)}>
              <Button
                variant={isActive("ABOUT") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("ABOUT") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.about")}
              </Button>
            </WouterLink>

            <div>
              <Button
                variant="ghost"
                className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                onClick={() => toggleMobileDropdown("oferta")}
              >
                {t("nav.offer")}
                <ChevronDown
                  className={cn(
                    "h-5 w-5 transition-transform",
                    mobileDropdownsOpen.oferta && "rotate-180"
                  )}
                />
              </Button>
              {mobileDropdownsOpen.oferta && (
                <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                  {ofertaLinks.map((link) => (
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      key={`${link.pageKey}-${link.hashKey || "base"}`}
                    >
                      <Button
                        variant="ghost"
                        className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                        onClick={() => handleLinkClick()}
                      >
                        {t(link.labelKey)}
                      </Button>
                    </WouterLink>
                  ))}
                </div>
              )}
            </div>

            <div>
              <Button
                variant="ghost"
                className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                onClick={() => toggleMobileDropdown("foto")}
              >
                {t("nav.photo")}
                <ChevronDown
                  className={cn(
                    "h-5 w-5 transition-transform",
                    mobileDropdownsOpen.foto && "rotate-180"
                  )}
                />
              </Button>
              {mobileDropdownsOpen.foto && (
                <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                  {galeriaLinks.map((link) => (
                    <WouterLink
                      href={getLocalizedPath(
                        link.pageKey,
                        language,
                        link.hashKey
                      )}
                      key={`${link.pageKey}-${link.hashKey || "base"}`}
                    >
                      <Button
                        variant="ghost"
                        className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                        onClick={() => handleLinkClick()}
                      >
                        {t(link.labelKey)}
                      </Button>
                    </WouterLink>
                  ))}
                </div>
              )}
            </div>

            <WouterLink href={getLocalizedPath("PRICING", language)}>
              <Button
                variant={isActive("PRICING") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("PRICING") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.pricing")}
              </Button>
            </WouterLink>
            <WouterLink href={getLocalizedPath("CONTACT", language)}>
              <Button
                variant={isActive("CONTACT") ? "default" : "ghost"}
                className={cn(
                  "w-full justify-start text-base font-medium py-3",
                  !isActive("CONTACT") && "text-slate-700 dark:text-slate-200"
                )}
                onClick={() => handleLinkClick()}
              >
                {t("nav.contact")}
              </Button>
            </WouterLink>

            <div className="pt-4 space-y-3 border-t border-slate-200 dark:border-slate-700 mt-3">
              <div className="flex justify-center space-x-4">
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => changeLanguageAndNavigate("pl")}
                  className={
                    language === "pl" ? "bg-sky-100 dark:bg-sky-900" : ""
                  }
                >
                  🇵🇱 PL
                </Button>
                <Button
                  variant="outline"
                  size="sm"
                  onClick={() => changeLanguageAndNavigate("en")}
                  className={
                    language === "en" ? "bg-sky-100 dark:bg-sky-900" : ""
                  }
                >
                  🇬🇧 EN
                </Button>
                <ThemeToggle />
              </div>
              <Button
                onClick={() => {
                  setIsReviewModalOpen(true);
                  handleLinkClick();
                }}
                className="w-full bg-amber-600 hover:bg-amber-700 text-white font-semibold flex items-center justify-center space-x-2"
              >
                <Star className="h-4 w-4" />
                <span>{t("nav.review")}</span>
              </Button>
              <a
                href="https://m.me/slodkolandiawita"
                target="_blank"
                rel="noopener noreferrer"
                className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                onClick={() => handleLinkClick()}
              >
                <MessageCircle className="h-4 w-4" />
                <span>Messenger</span>
              </a>
              <a
                href="tel:+48531890827"
                className="btn-gradient text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                onClick={() => handleLinkClick()}
              >
                <Phone className="h-4 w-4" />
                <span>Zadzwoń: 531 890 827</span>
              </a>
            </div>
          </div>
        </div>
      )}
    </nav>
  );
}

----------------------------

import { X } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Separator } from "@/components/ui/separator";
import { Attraction } from "@/data/attractions";
import AttractionGallery from "./AttractionGallery";
import { motion, AnimatePresence } from "framer-motion";

interface ModalProps {
  isOpen: boolean;
  onClose: () => void;
  attraction: Attraction;
}

export default function Modal({ isOpen, onClose, attraction }: ModalProps) {
  if (!isOpen) return null;

  const getIconElement = (iconClass: string) => {
    const iconMap: { [key: string]: string } = {
      "fas fa-campground": "🏕️",
      "fas fa-castle": "🏰",
      "fas fa-candy-cane": "🍭",
      "fas fa-seedling": "🍿",
      "fas fa-birthday-cake": "🍫",
      "fas fa-users": "👥",
    };

    return iconMap[iconClass] || "🎉";
  };

  return (
    <AnimatePresence>
      <motion.div
        initial={{ opacity: 0 }}
        animate={{ opacity: 1 }}
        exit={{ opacity: 0 }}
        className="fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4 modal-backdrop"
        onClick={onClose}
      >
        <motion.div
          initial={{ opacity: 0, scale: 0.9, y: 20 }}
          animate={{ opacity: 1, scale: 1, y: 0 }}
          exit={{ opacity: 0, scale: 0.9, y: 20 }}
          transition={{ type: "spring", damping: 25, stiffness: 300 }}
          className="bg-white rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden"
          onClick={(e) => e.stopPropagation()}
        >
          {/* Header */}
          <div className="flex items-center justify-between p-6 border-b border-slate-200">
            <div className="flex items-center space-x-3">
              <span className="text-2xl">
                {getIconElement(attraction.icon)}
              </span>
              <div>
                <h2 className="text-2xl font-bold text-slate-800">
                  {attraction.name}
                </h2>
                <Badge variant="secondary" className="mt-1">
                  {attraction.category}
                </Badge>
              </div>
            </div>
            <Button variant="ghost" size="icon" onClick={onClose}>
              <X className="h-6 w-6" />
            </Button>
          </div>

          {/* Content */}
          <ScrollArea className="max-h-[calc(90vh-100px)]">
            <div className="p-6 space-y-8">
              {/* Description */}
              <div>
                <h3 className="text-lg font-semibold text-slate-800 mb-3">
                  Opis
                </h3>
                <p className="text-slate-600 leading-relaxed">
                  {attraction.description}
                </p>
              </div>

              {/* Pricing */}
              <div>
                <h3 className="text-lg font-semibold text-slate-800 mb-3">
                  Cennik
                </h3>
                <div className="bg-sky-50 rounded-lg p-4">
                  <div className="text-2xl font-bold text-sky-600">
                    od {attraction.pricing.base} {attraction.pricing.currency}
                    <span className="text-lg text-slate-500 ml-2">
                      / {attraction.pricing.period}
                    </span>
                  </div>
                  <p className="text-sm text-slate-600 mt-1">
                    Cena zawiera transport, montaż i obsługę w promieniu 30km od
                    Radomia
                  </p>
                </div>
              </div>

              {/* Features */}
              <div>
                <h3 className="text-lg font-semibold text-slate-800 mb-3">
                  Cechy
                </h3>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                  {attraction.features.map((feature, index) => (
                    <div key={index} className="flex items-center space-x-2">
                      <div className="w-2 h-2 bg-emerald-500 rounded-full flex-shrink-0"></div>
                      <span className="text-slate-600 text-sm">{feature}</span>
                    </div>
                  ))}
                </div>
              </div>

              {/* Specifications */}
              <div>
                <h3 className="text-lg font-semibold text-slate-800 mb-3">
                  Specyfikacja
                </h3>
                <div className="bg-slate-50 rounded-lg p-4">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                    {Object.entries(attraction.specifications).map(
                      ([key, value]) => (
                        <div key={key}>
                          <dt className="text-sm font-semibold text-slate-700">
                            {key}
                          </dt>
                          <dd className="text-sm text-slate-600">{value}</dd>
                        </div>
                      )
                    )}
                  </div>
                </div>
              </div>

              <Separator />

              {/* Gallery */}
              <div>
                <h3 className="text-lg font-semibold text-slate-800 mb-4">
                  Galeria
                </h3>
                <AttractionGallery
                  images={attraction.images}
                  title={attraction.name}
                  className="gap-4"
                />
              </div>

              {/* Call to Action */}
              <div className="bg-gradient-to-r from-sky-50 to-emerald-50 rounded-lg p-6">
                <h3 className="text-lg font-semibold text-slate-800 mb-2">
                  Zainteresowany?
                </h3>
                <p className="text-slate-600 mb-4">
                  Skontaktuj się z nami już dziś, aby sprawdzić dostępność i
                  otrzymać indywidualną wycenę.
                </p>
                <div className="flex flex-col sm:flex-row gap-3">
                  <a
                    href="tel:+48505977940"
                    className="btn-gradient text-white px-6 py-2 rounded-lg font-semibold hover:shadow-lg transition-all flex items-center justify-center"
                  >
                    📞 Zadzwoń: +48 505 977 940
                  </a>
                  <a
                    href="/kontakt"
                    className="border border-sky-500 text-sky-600 px-6 py-2 rounded-lg font-semibold hover:bg-sky-50 transition-colors flex items-center justify-center"
                    onClick={onClose}
                  >
                    ✉️ Formularz kontaktowy
                  </a>
                </div>
              </div>
            </div>
          </ScrollArea>
        </motion.div>
      </motion.div>
    </AnimatePresence>
  );
}


-----------------------

import React, { useState, useEffect, useRef } from "react";
import { Link as WouterLink, useLocation } from "wouter";
import {
  Menu,
  X,
  Phone,
  ChevronDown,
  Globe,
  MessageCircle,
  Star,
} from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import {
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import { cn } from "@/lib/utils";
import { useLanguage } from "@/hooks/useLanguage";
import ThemeToggle from "./ThemeToggle";
import {
  getLocalizedPath,
  findPageKeyByLocalizedPath,
  getHashSlug,
  PageKey,
  OfferHashKey,
  GalleryHashKey,
  Language,
} from "@/config/paths";
import { AnimatePresence, motion } from "framer-motion";

export default function Navbar() {
  const [isScrolled, setIsScrolled] = useState(false);
  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);
  const [mobileDropdownsOpen, setMobileDropdownsOpen] = useState<{
    oferta?: boolean;
    foto?: boolean;
  }>({});
  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);
  const [currentWouterLocation, navigate] = useLocation();
  const { language, setLanguage: setContextLanguage, t } = useLanguage();
  const navRef = useRef<HTMLElement>(null);
  const [scrollbarWidth, setScrollbarWidth] = useState(0);

  useEffect(() => {
    const calculateScrollbarWidth = () => {
      const width = window.innerWidth - document.documentElement.clientWidth;
      setScrollbarWidth(width > 0 ? width : 0);
    };
    calculateScrollbarWidth();
    window.addEventListener("resize", calculateScrollbarWidth);
    return () => window.removeEventListener("resize", calculateScrollbarWidth);
  }, []);

  useEffect(() => {
    const handleScroll = () => {
      setIsScrolled(window.scrollY > 10);
    };
    window.addEventListener("scroll", handleScroll);
    return () => window.removeEventListener("scroll", handleScroll);
  }, []);

  useEffect(() => {
    const body = document.body;
    const navElement = navRef.current;
    if (!navElement || scrollbarWidth === undefined) return;
    const initialNavRight = navElement.style.right || "";
    const initialNavPaddingRight = navElement.style.paddingRight || "";
    const observer = new MutationObserver(() => {
      const dialogIsOpen =
        body.hasAttribute("data-scroll-locked") ||
        body.style.overflow === "hidden";

      if (
        dialogIsOpen &&
        (body.getAttribute("data-radix-dialog-open") || isReviewModalOpen)
      ) {
        navElement.style.right = `${scrollbarWidth}px`;
        navElement.style.paddingRight = "0px";
      } else {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    });
    observer.observe(body, {
      attributes: true,
      attributeFilter: [
        "style",
        "data-scroll-locked",
        "data-radix-dialog-open",
      ],
    });
    return () => {
      observer.disconnect();
      if (navElement) {
        navElement.style.right = initialNavRight;
        navElement.style.paddingRight = initialNavPaddingRight;
      }
    };
  }, [scrollbarWidth, isReviewModalOpen]);

  const changeLanguageAndNavigate = (newLang: Language) => {
    if (newLang === language) return;
    setContextLanguage(newLang, { preventNavigation: true });
    const { pageKey, hashKey } = findPageKeyByLocalizedPath(
      window.location.pathname + window.location.search + window.location.hash
    );
    let targetPath: string;
    if (pageKey && pageKey !== "NOT_FOUND") {
      targetPath = getLocalizedPath(pageKey, newLang, hashKey || undefined);
    } else {
      targetPath = getLocalizedPath("HOME", newLang);
    }
    if (currentWouterLocation !== targetPath) {
      navigate(targetPath, { replace: true });
    }
  };

  const isActive = (
    pageKeyToCheck: PageKey,
    hashKeyToCheck?: OfferHashKey | GalleryHashKey
  ) => {
    const {
      pageKey: currentPageKey,
      lang: currentLang,
      hashKey: currentHashKeyFromPaths,
    } = findPageKeyByLocalizedPath(currentWouterLocation);
    if (currentLang !== language) return false;
    if (currentPageKey !== pageKeyToCheck) return false;
    if (hashKeyToCheck) {
      return currentHashKeyFromPaths === hashKeyToCheck;
    }
    return !currentHashKeyFromPaths;
  };

  const handleLinkClick = (closeMobileMenu = true) => {
    if (closeMobileMenu) {
      setIsMobileMenuOpen(false);
      setMobileDropdownsOpen({});
    }
  };

  const toggleMobileDropdown = (key: "oferta" | "foto") => {
    setMobileDropdownsOpen((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  const ofertaLinks: {
    pageKey: PageKey;
    hashKey?: OfferHashKey;
    labelKey: string;
  }[] = [
    { pageKey: "OFFER", labelKey: "nav.allAttractions" },
    { pageKey: "OFFER", hashKey: "TENTS", labelKey: "nav.tents" },
    { pageKey: "OFFER", hashKey: "INFLATABLES", labelKey: "nav.inflatables" },
    { pageKey: "OFFER", hashKey: "POPCORN", labelKey: "nav.popcorn" },
    { pageKey: "OFFER", hashKey: "COTTON_CANDY", labelKey: "nav.cottonCandy" },
    {
      pageKey: "OFFER",
      hashKey: "CHOCOLATE_FOUNTAIN",
      labelKey: "nav.chocolateFountain",
    },
  ];

  const galeriaLinks: {
    pageKey: PageKey;
    hashKey?: GalleryHashKey;
    labelKey: string;
  }[] = [
    { pageKey: "GALLERY", labelKey: "nav.allPhotos" },
    { pageKey: "GALLERY", hashKey: "PHOTO_TENTS", labelKey: "nav.photoTents" },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_INFLATABLES",
      labelKey: "nav.photoInflatables",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_COTTON_CANDY",
      labelKey: "nav.photoCottonCandy",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_POPCORN",
      labelKey: "nav.photoPopcorn",
    },
    {
      pageKey: "GALLERY",
      hashKey: "PHOTO_FOUNTAINS",
      labelKey: "nav.photoFountains",
    },
  ];

  return (
    <>
      <nav
        ref={navRef}
        className={cn(
          "fixed top-0 left-0 right-0 z-50 transition-all duration-300",
          isScrolled
            ? "bg-white/95 dark:bg-slate-900/95 backdrop-blur-md shadow-lg"
            : "bg-white dark:bg-slate-900"
        )}
      >
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center h-16">
            <WouterLink
              href={getLocalizedPath("HOME", language)}
              onClick={() => handleLinkClick()}
            >
              <div className="flex items-center space-x-3 hover:opacity-80 transition-opacity">
                <div className="w-10 h-10 bg-gradient-to-br from-sky-500 to-emerald-500 rounded-lg flex items-center justify-center">
                  <span className="text-white font-bold text-lg">S</span>
                </div>
                <span className="brand-title text-xl font-bold text-slate-800 dark:text-white whitespace-nowrap">
                  {t("hero.title")}
                </span>
              </div>
            </WouterLink>

            <div className="hidden lg:flex items-center space-x-4">
              <WouterLink href={getLocalizedPath("HOME", language)}>
                <Button
                  variant={isActive("HOME") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("HOME") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.home")}
                </Button>
              </WouterLink>

              <WouterLink href={getLocalizedPath("ABOUT", language)}>
                <Button
                  variant={isActive("ABOUT") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("ABOUT") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.about")}
                </Button>
              </WouterLink>

              <DropdownMenu modal={false}>
                <DropdownMenuTrigger asChild>
                  <Button
                    variant={isActive("OFFER") ? "default" : "ghost"}
                    className={cn(
                      "text-base font-medium px-3",
                      !isActive("OFFER") &&
                        "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                    )}
                  >
                    {t("nav.offer")} <ChevronDown className="ml-1 h-4 w-4" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="start" className="w-56">
                  {ofertaLinks.map((link) => (
                    <DropdownMenuItem
                      asChild
                      key={`${link.pageKey}-${link.hashKey || "base"}`}
                    >
                      <WouterLink
                        href={getLocalizedPath(
                          link.pageKey,
                          language,
                          link.hashKey
                        )}
                        onClick={() => handleLinkClick()}
                        className="w-full"
                      >
                        {t(link.labelKey)}
                      </WouterLink>
                    </DropdownMenuItem>
                  ))}
                </DropdownMenuContent>
              </DropdownMenu>

              <DropdownMenu modal={false}>
                <DropdownMenuTrigger asChild>
                  <Button
                    variant={isActive("GALLERY") ? "default" : "ghost"}
                    className={cn(
                      "text-base font-medium px-3",
                      !isActive("GALLERY") &&
                        "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                    )}
                  >
                    {t("nav.photo")}
                    <ChevronDown className="ml-1 h-4 w-4" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="start" className="w-56">
                  {galeriaLinks.map((link) => (
                    <DropdownMenuItem
                      asChild
                      key={`${link.pageKey}-${link.hashKey || "base"}`}
                    >
                      <WouterLink
                        href={getLocalizedPath(
                          link.pageKey,
                          language,
                          link.hashKey
                        )}
                        onClick={() => handleLinkClick()}
                        className="w-full"
                      >
                        {t(link.labelKey)}
                      </WouterLink>
                    </DropdownMenuItem>
                  ))}
                </DropdownMenuContent>
              </DropdownMenu>

              <WouterLink href={getLocalizedPath("PRICING", language)}>
                <Button
                  variant={isActive("PRICING") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("PRICING") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.pricing")}
                </Button>
              </WouterLink>
              <WouterLink href={getLocalizedPath("CONTACT", language)}>
                <Button
                  variant={isActive("CONTACT") ? "default" : "ghost"}
                  className={cn(
                    "text-base font-medium px-3",
                    !isActive("CONTACT") &&
                      "text-slate-700 dark:text-slate-200 hover:text-slate-900 dark:hover:text-white"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.contact")}
                </Button>
              </WouterLink>

              <DropdownMenu modal={false}>
                <DropdownMenuTrigger asChild>
                  <Button variant="ghost" size="icon">
                    <Globe className="h-5 w-5" />
                  </Button>
                </DropdownMenuTrigger>
                <DropdownMenuContent align="end">
                  <DropdownMenuItem
                    onClick={() => changeLanguageAndNavigate("pl")}
                  >
                    🇵🇱 Polski
                  </DropdownMenuItem>
                  <DropdownMenuItem
                    onClick={() => changeLanguageAndNavigate("en")}
                  >
                    🇬🇧 English
                  </DropdownMenuItem>
                </DropdownMenuContent>
              </DropdownMenu>

              <ThemeToggle />

              <a
                href="https://m.me/slodkolandiawita"
                target="_blank"
                rel="noopener noreferrer"
                className="text-blue-600 hover:text-blue-700 p-2 rounded-lg hover:bg-slate-100 dark:hover:bg-slate-800 transition-colors"
                title="Messenger"
              >
                <MessageCircle className="h-5 w-5" />
              </a>

              {/* Dialog "Dodaj opinię" */}
              <Dialog
                modal={false}
                open={isReviewModalOpen}
                onOpenChange={setIsReviewModalOpen}
              >
                <DialogTrigger asChild>
                  <Button
                    variant="ghost"
                    size="icon"
                    className="text-amber-600 hover:text-amber-700 hover:bg-amber-100 dark:hover:bg-amber-900/20"
                    title={t("nav.review")}
                  >
                    <Star className="h-5 w-5" />
                  </Button>
                </DialogTrigger>
                <DialogContent className="sm:max-w-md z-[60]">
                  <DialogHeader>
                    <DialogTitle className="text-center">
                      Dodaj opinię o "{t("hero.title")}"!
                    </DialogTitle>
                    <DialogDescription className="text-center">
                      Zeskanuj kod QR, aby dodać opinię na Google Maps.
                    </DialogDescription>
                  </DialogHeader>
                  <div className="flex flex-col items-center space-y-4 py-4">
                    <div className="bg-white p-4 rounded-lg shadow-inner">
                      <img
                        src="/qr-opinia.png"
                        alt="QR Code - Dodaj opinię"
                        className="w-48 h-48"
                      />
                    </div>
                    <p className="text-sm text-gray-600 dark:text-gray-300 text-center">
                      Kod QR - Dodaj opinię
                      <br />
                      lub kliknij w link:
                    </p>
                    <a
                      href="https://g.page/r/CWM4dGuLyfXlEAE/review"
                      target="_blank"
                      rel="noopener noreferrer"
                      className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg font-semibold transition-colors"
                    >
                      Dodaj opinię na Google
                    </a>
                  </div>
                </DialogContent>
              </Dialog>

              <a
                href="tel:+48531890827"
                className="btn-gradient text-white px-3 py-2 rounded-lg font-semibold hover:shadow-lg transition-all flex items-center space-x-2 whitespace-nowrap text-sm"
              >
                <Phone className="h-4 w-4" />
                <span>531 890 827</span>
              </a>
            </div>

            <div className="lg:hidden">
              <Button
                variant="ghost"
                size="icon"
                onClick={() => {
                  setIsMobileMenuOpen(!isMobileMenuOpen);
                  if (isMobileMenuOpen) setMobileDropdownsOpen({});
                }}
                aria-label="Toggle mobile menu"
              >
                {isMobileMenuOpen ? (
                  <X className="h-6 w-6" />
                ) : (
                  <Menu className="h-6 w-6" />
                )}
              </Button>
            </div>
          </div>
        </div>

        {isMobileMenuOpen && (
          <div
            className="lg:hidden fixed inset-x-0 top-16 bottom-0 z-40 bg-white/95 dark:bg-slate-900/95 backdrop-blur-md overflow-y-auto"
            style={{ WebkitOverflowScrolling: "touch" }}
          >
            <div className="px-4 pt-2 pb-24 space-y-1">
              <WouterLink href={getLocalizedPath("HOME", language)}>
                <Button
                  variant={isActive("HOME") ? "default" : "ghost"}
                  className={cn(
                    "w-full justify-start text-base font-medium py-3",
                    !isActive("HOME") && "text-slate-700 dark:text-slate-200"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.home")}
                </Button>
              </WouterLink>
              <WouterLink href={getLocalizedPath("ABOUT", language)}>
                <Button
                  variant={isActive("ABOUT") ? "default" : "ghost"}
                  className={cn(
                    "w-full justify-start text-base font-medium py-3",
                    !isActive("ABOUT") && "text-slate-700 dark:text-slate-200"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.about")}
                </Button>
              </WouterLink>

              <div>
                <Button
                  variant="ghost"
                  className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                  onClick={() => toggleMobileDropdown("oferta")}
                >
                  {t("nav.offer")}
                  <ChevronDown
                    className={cn(
                      "h-5 w-5 transition-transform",
                      mobileDropdownsOpen.oferta && "rotate-180"
                    )}
                  />
                </Button>
                {mobileDropdownsOpen.oferta && (
                  <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                    {ofertaLinks.map((link) => (
                      <WouterLink
                        href={getLocalizedPath(
                          link.pageKey,
                          language,
                          link.hashKey
                        )}
                        key={`${link.pageKey}-${link.hashKey || "base"}`}
                      >
                        <Button
                          variant="ghost"
                          className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                          onClick={() => handleLinkClick()}
                        >
                          {t(link.labelKey)}
                        </Button>
                      </WouterLink>
                    ))}
                  </div>
                )}
              </div>

              <div>
                <Button
                  variant="ghost"
                  className="w-full justify-between text-base font-medium py-3 text-slate-700 dark:text-slate-200"
                  onClick={() => toggleMobileDropdown("foto")}
                >
                  {t("nav.photo")}
                  <ChevronDown
                    className={cn(
                      "h-5 w-5 transition-transform",
                      mobileDropdownsOpen.foto && "rotate-180"
                    )}
                  />
                </Button>
                {mobileDropdownsOpen.foto && (
                  <div className="ml-4 mt-1 space-y-1 border-l border-slate-300 dark:border-slate-700 pl-4">
                    {galeriaLinks.map((link) => (
                      <WouterLink
                        href={getLocalizedPath(
                          link.pageKey,
                          language,
                          link.hashKey
                        )}
                        key={`${link.pageKey}-${link.hashKey || "base"}`}
                      >
                        <Button
                          variant="ghost"
                          className="w-full justify-start text-sm text-slate-600 dark:text-slate-300 py-2"
                          onClick={() => handleLinkClick()}
                        >
                          {t(link.labelKey)}
                        </Button>
                      </WouterLink>
                    ))}
                  </div>
                )}
              </div>

              <WouterLink href={getLocalizedPath("PRICING", language)}>
                <Button
                  variant={isActive("PRICING") ? "default" : "ghost"}
                  className={cn(
                    "w-full justify-start text-base font-medium py-3",
                    !isActive("PRICING") && "text-slate-700 dark:text-slate-200"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.pricing")}
                </Button>
              </WouterLink>
              <WouterLink href={getLocalizedPath("CONTACT", language)}>
                <Button
                  variant={isActive("CONTACT") ? "default" : "ghost"}
                  className={cn(
                    "w-full justify-start text-base font-medium py-3",
                    !isActive("CONTACT") && "text-slate-700 dark:text-slate-200"
                  )}
                  onClick={() => handleLinkClick()}
                >
                  {t("nav.contact")}
                </Button>
              </WouterLink>

              <div className="pt-4 space-y-3 border-t border-slate-200 dark:border-slate-700 mt-3">
                <div className="flex justify-center space-x-4">
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => changeLanguageAndNavigate("pl")}
                    className={
                      language === "pl" ? "bg-sky-100 dark:bg-sky-900" : ""
                    }
                  >
                    🇵🇱 PL
                  </Button>
                  <Button
                    variant="outline"
                    size="sm"
                    onClick={() => changeLanguageAndNavigate("en")}
                    className={
                      language === "en" ? "bg-sky-100 dark:bg-sky-900" : ""
                    }
                  >
                    🇬🇧 EN
                  </Button>
                  <ThemeToggle />
                </div>
                <Button
                  onClick={() => {
                    setIsReviewModalOpen(true);
                    handleLinkClick();
                  }}
                  className="w-full bg-amber-600 hover:bg-amber-700 text-white font-semibold flex items-center justify-center space-x-2"
                >
                  <Star className="h-4 w-4" />
                  <span>{t("nav.review")}</span>
                </Button>
                <a
                  href="https://m.me/slodkolandiawita"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="bg-blue-600 hover:bg-blue-700 text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                  onClick={() => handleLinkClick()}
                >
                  <MessageCircle className="h-4 w-4" />
                  <span>Messenger</span>
                </a>
                <a
                  href="tel:+48531890827"
                  className="btn-gradient text-white px-4 py-3 rounded-lg font-semibold flex items-center justify-center space-x-2 w-full"
                  onClick={() => handleLinkClick()}
                >
                  <Phone className="h-4 w-4" />
                  <span>Zadzwoń: 531 890 827</span>
                </a>
              </div>
            </div>
          </div>
        )}
      </nav>

      {/* Ręcznie dodany Overlay dla modala "Dodaj Opinię" */}
      <AnimatePresence>
        {isReviewModalOpen && (
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.2 }}
            className="fixed inset-0 bg-black/60 z-[55] modal-backdrop"
            onClick={() => setIsReviewModalOpen(false)}
          />
        )}
      </AnimatePresence>
    </>
  );
}


-------------------------

import { X } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Separator } from "@/components/ui/separator";
import { Attraction } from "@/data/attractions";
import AttractionGallery from "./AttractionGallery";
import { motion, AnimatePresence } from "framer-motion";

interface ModalProps {
  isOpen: boolean;
  onClose: () => void;
  attraction: Attraction;
}

export default function Modal({ isOpen, onClose, attraction }: ModalProps) {
  if (!isOpen) return null;

  const getIconElement = (iconClass: string) => {
    const iconMap: { [key: string]: string } = {
      "fas fa-campground": "🏕️",
      "fas fa-castle": "🏰",
      "fas fa-candy-cane": "🍭",
      "fas fa-seedling": "🍿",
      "fas fa-birthday-cake": "🍫",
      "fas fa-users": "👥",
    };
    return iconMap[iconClass] || "🎉";
  };

  return (
    <AnimatePresence>
      {isOpen && (
        <motion.div
          initial={{ opacity: 0 }}
          animate={{ opacity: 1 }}
          exit={{ opacity: 0 }}
          className="fixed inset-0 bg-black/60 z-50 flex items-center justify-center p-4 modal-backdrop"
          onClick={onClose}
        >
          <motion.div
            initial={{ opacity: 0, scale: 0.9, y: 20 }}
            animate={{ opacity: 1, scale: 1, y: 0 }}
            exit={{ opacity: 0, scale: 0.9, y: 20 }}
            transition={{ type: "spring", damping: 25, stiffness: 300 }}
            className="bg-white dark:bg-slate-800 rounded-xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden flex flex-col"
            onClick={(e) => e.stopPropagation()}
          >
            <div className="flex items-center justify-between p-6 border-b border-slate-200 dark:border-slate-700">
              <div className="flex items-center space-x-3">
                <span className="text-2xl">
                  {getIconElement(attraction.icon)}
                </span>
                <div>
                  <h2 className="text-2xl font-bold text-slate-800 dark:text-slate-100">
                    {attraction.name}
                  </h2>
                  <Badge
                    variant="secondary"
                    className="mt-1 dark:bg-slate-700 dark:text-slate-300"
                  >
                    {attraction.category}
                  </Badge>
                </div>
              </div>
              <Button
                variant="ghost"
                size="icon"
                onClick={onClose}
                className="dark:text-slate-300 dark:hover:bg-slate-700"
              >
                <X className="h-6 w-6" />
              </Button>
            </div>

            <ScrollArea className="flex-grow">
              {" "}
              <div className="p-6 space-y-8">
                <div>
                  <h3 className="text-lg font-semibold text-slate-800 dark:text-slate-200 mb-3">
                    Opis
                  </h3>
                  <p className="text-slate-600 dark:text-slate-400 leading-relaxed">
                    {attraction.description}
                  </p>
                </div>

                <div>
                  <h3 className="text-lg font-semibold text-slate-800 dark:text-slate-200 mb-3">
                    Cennik
                  </h3>
                  <div className="bg-sky-50 dark:bg-sky-900/30 rounded-lg p-4">
                    <div className="text-2xl font-bold text-sky-600 dark:text-sky-400">
                      od {attraction.pricing.base} {attraction.pricing.currency}
                      <span className="text-lg text-slate-500 dark:text-slate-400 ml-2">
                        / {attraction.pricing.period}
                      </span>
                    </div>
                    <p className="text-sm text-slate-600 dark:text-slate-400 mt-1">
                      Cena zawiera transport, montaż i obsługę w promieniu 30km
                      od Radomia
                    </p>
                  </div>
                </div>

                <div>
                  <h3 className="text-lg font-semibold text-slate-800 dark:text-slate-200 mb-3">
                    Cechy
                  </h3>
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                    {attraction.features.map((feature, index) => (
                      <div key={index} className="flex items-center space-x-2">
                        <div className="w-2 h-2 bg-emerald-500 dark:bg-emerald-400 rounded-full flex-shrink-0"></div>
                        <span className="text-slate-600 dark:text-slate-300 text-sm">
                          {feature}
                        </span>
                      </div>
                    ))}
                  </div>
                </div>

                <div>
                  <h3 className="text-lg font-semibold text-slate-800 dark:text-slate-200 mb-3">
                    Specyfikacja
                  </h3>
                  <div className="bg-slate-50 dark:bg-slate-700/50 rounded-lg p-4">
                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                      {Object.entries(attraction.specifications).map(
                        ([key, value]) => (
                          <div key={key}>
                            <dt className="text-sm font-semibold text-slate-700 dark:text-slate-300">
                              {key}
                            </dt>
                            <dd className="text-sm text-slate-600 dark:text-slate-400">
                              {value}
                            </dd>
                          </div>
                        )
                      )}
                    </div>
                  </div>
                </div>

                <Separator className="dark:bg-slate-700" />

                <div>
                  <h3 className="text-lg font-semibold text-slate-800 dark:text-slate-200 mb-4">
                    Galeria
                  </h3>
                  <AttractionGallery
                    images={attraction.images}
                    title={attraction.name}
                    className="gap-4"
                  />
                </div>

                <div className="bg-gradient-to-r from-sky-50 to-emerald-50 dark:from-sky-900/30 dark:to-emerald-900/30 rounded-lg p-6">
                  <h3 className="text-lg font-semibold text-slate-800 dark:text-slate-200 mb-2">
                    Zainteresowany?
                  </h3>
                  <p className="text-slate-600 dark:text-slate-400 mb-4">
                    Skontaktuj się z nami już dziś, aby sprawdzić dostępność i
                    otrzymać indywidualną wycenę.
                  </p>
                  <div className="flex flex-col sm:flex-row gap-3">
                    <a
                      href="tel:+48505977940"
                      className="btn-gradient text-white px-6 py-2 rounded-lg font-semibold hover:shadow-lg transition-all flex items-center justify-center"
                    >
                      📞 Zadzwoń: +48 505 977 940
                    </a>
                    <a
                      href="/kontakt" // Ten link musi być zlokalizowany, jeśli używasz routingu językowego
                      className="border border-sky-500 dark:border-sky-400 text-sky-600 dark:text-sky-400 px-6 py-2 rounded-lg font-semibold hover:bg-sky-50 dark:hover:bg-sky-800/30 transition-colors flex items-center justify-center"
                      onClick={onClose}
                    >
                      ✉️ Formularz kontaktowy
                    </a>
                  </div>
                </div>
              </div>
            </ScrollArea>
          </motion.div>
        </motion.div>
      )}
    </AnimatePresence>
  );
}
